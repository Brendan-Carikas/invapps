{"ast":null,"code":"var _jsxFileName = \"/Users/invotradesign/CascadeProjects/site-users-app/src/components/ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/ThemeContext.tsx\nimport { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext(undefined);\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [mode, setMode] = useState('light');\n  const [primaryColor, setPrimaryColor] = useState('#1976d2');\n  const [secondaryColor, setSecondaryColor] = useState('#dc004e');\n  const [headingFont, setHeadingFont] = useState('Roboto');\n  const [bodyFont, setBodyFont] = useState('Roboto');\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      mode,\n      setMode,\n      primaryColor,\n      setPrimaryColor,\n      secondaryColor,\n      setSecondaryColor,\n      headingFont,\n      setHeadingFont,\n      bodyFont,\n      setBodyFont\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"InHxAeWVZd0KwP7PQcK/99EtJes=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","ThemeContext","undefined","useTheme","_s","context","Error","ThemeProvider","children","_s2","mode","setMode","primaryColor","setPrimaryColor","secondaryColor","setSecondaryColor","headingFont","setHeadingFont","bodyFont","setBodyFont","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/invotradesign/CascadeProjects/site-users-app/src/components/ThemeContext.tsx"],"sourcesContent":["// src/contexts/ThemeContext.tsx\nimport { createContext, useContext, useState, ReactNode } from 'react';\n\ninterface ThemeContextType {\n  mode: 'light' | 'dark';\n  setMode: (mode: 'light' | 'dark') => void;\n  primaryColor: string;\n  setPrimaryColor: (color: string) => void;\n  secondaryColor: string;\n  setSecondaryColor: (color: string) => void;\n  headingFont: string;\n  setHeadingFont: (font: string) => void;\n  bodyFont: string;\n  setBodyFont: (font: string) => void;\n}\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\nexport const ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\n  const [mode, setMode] = useState<'light' | 'dark'>('light');\n  const [primaryColor, setPrimaryColor] = useState('#1976d2');\n  const [secondaryColor, setSecondaryColor] = useState('#dc004e');\n  const [headingFont, setHeadingFont] = useState('Roboto');\n  const [bodyFont, setBodyFont] = useState('Roboto');\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        mode,\n        setMode,\n        primaryColor,\n        setPrimaryColor,\n        secondaryColor,\n        setSecondaryColor,\n        headingFont,\n        setHeadingFont,\n        bodyFont,\n        setBodyFont,\n      }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n};"],"mappings":";;;AAAA;AACA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAmBvE,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAA+BM,SAAS,CAAC;AAElF,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGR,UAAU,CAACI,YAAY,CAAC;EACxC,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAA2C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC3E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAmB,OAAO,CAAC;EAC3D,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,SAAS,CAAC;EAC3D,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,SAAS,CAAC;EAC/D,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,QAAQ,CAAC;EACxD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,QAAQ,CAAC;EAElD,oBACEE,OAAA,CAACC,YAAY,CAACmB,QAAQ;IACpBC,KAAK,EAAE;MACLX,IAAI;MACJC,OAAO;MACPC,YAAY;MACZC,eAAe;MACfC,cAAc;MACdC,iBAAiB;MACjBC,WAAW;MACXC,cAAc;MACdC,QAAQ;MACRC;IACF,CAAE;IAAAX,QAAA,EAEDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAChB,GAAA,CAzBWF,aAA2C;AAAAmB,EAAA,GAA3CnB,aAA2C;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}