{"version":3,"file":"static/js/585.37302fc7.chunk.js","mappings":"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","sources":["views/Settings/Settings.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  TextField,\n  Button,\n  Grid,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Input,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Drawer,\n  InputAdornment,\n  Link,\n  CardHeader,\n  Autocomplete,\n  Paper,\n  Tooltip,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\nimport ImageIcon from '@mui/icons-material/Image';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport TextSnippetIcon from '@mui/icons-material/TextSnippet';\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport SearchIcon from '@mui/icons-material/Search';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\n\nconst Settings = () => {\n  const [appName, setAppName] = useState('My AI Assistant');\n  const [corePurposeInstructions, setCorePurposeInstructions] = useState('');\n  const [styleToneInstructions, setStyleToneInstructions] = useState('');\n  const [technicalInstructions, setTechnicalInstructions] = useState('');\n  const [files, setFiles] = useState([]);\n  const [logo, setLogo] = useState(null);\n  const [whatsappDialogOpen, setWhatsappDialogOpen] = useState(false);\n  const [whatsappNumber, setWhatsappNumber] = useState('');\n  const [connectedNumber, setConnectedNumber] = useState('');\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [drawerContent, setDrawerContent] = useState('');\n  const [drawerTitle, setDrawerTitle] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [copyTooltip, setCopyTooltip] = useState('Copy');\n  const contentRef = useRef(null);\n\n  const technicalContent = (\n    <>\n      <h3>Core purpose</h3>\n      <ul style={{ listStyleType: 'disc', paddingLeft: '20px', lineHeight: '2'  }}>\n        <Box \n          component={Paper} \n          elevation={0} \n          sx={{ \n            p: 2, \n            mb: 2, \n            backgroundColor: 'rgba(0, 0, 0, 0.02)', \n            border: '1px solid rgba(0, 0, 0, 0.1)',\n            borderRadius: 1,\n            display: 'flex',\n            alignItems: 'flex-start',\n            gap: 1,\n            position: 'relative',\n            zIndex: 1200\n          }}\n        >\n          <Typography flex={1}>You are an AI-powered support assistant for AJC Trailers' EasyCabin.</Typography>\n          <Tooltip title={copyTooltip}>\n            <IconButton \n              size=\"small\" \n              onClick={() => handleCopyText(\"You are an AI-powered support assistant for AJC Trailers' EasyCabin.\")}\n              sx={{ mt: -0.5, zIndex: 1201 }}\n            >\n              <ContentCopyIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <Box \n          component={Paper} \n          elevation={0} \n          sx={{ \n            p: 2, \n            mb: 2, \n            backgroundColor: 'rgba(0, 0, 0, 0.02)', \n            border: '1px solid rgba(0, 0, 0, 0.1)',\n            borderRadius: 1,\n            display: 'flex',\n            alignItems: 'flex-start',\n            gap: 1,\n            position: 'relative',\n            zIndex: 1200\n          }}\n        >\n          <Typography flex={1}>Prioritise clear, concise, and simple responses to minimise confusion.</Typography>\n          <Tooltip title={copyTooltip}>\n            <IconButton \n              size=\"small\" \n              onClick={() => handleCopyText(\"Prioritise clear, concise, and simple responses to minimise confusion.\")}\n              sx={{ mt: -0.5, zIndex: 1201 }}\n            >\n              <ContentCopyIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <Box \n          component={Paper} \n          elevation={0} \n          sx={{ \n            p: 2, \n            mb: 2, \n            backgroundColor: 'rgba(0, 0, 0, 0.02)', \n            border: '1px solid rgba(0, 0, 0, 0.1)',\n            borderRadius: 1,\n            display: 'flex',\n            alignItems: 'flex-start',\n            gap: 1,\n            position: 'relative',\n            zIndex: 1200\n          }}\n        >\n          <Typography flex={1}>Provide accurate, professional, and clear support to customers 24/7 regarding EasyCabin products, parts, and technical enquiries.</Typography>\n          <Tooltip title={copyTooltip}>\n            <IconButton \n              size=\"small\" \n              onClick={() => handleCopyText(\"Provide accurate, professional, and clear support to customers 24/7 regarding EasyCabin products, parts, and technical enquiries.\")}\n              sx={{ mt: -0.5, zIndex: 1201 }}\n            >\n              <ContentCopyIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <Box \n          component={Paper} \n          elevation={0} \n          sx={{ \n            p: 2, \n            mb: 2, \n            backgroundColor: 'rgba(0, 0, 0, 0.02)', \n            border: '1px solid rgba(0, 0, 0, 0.1)',\n            borderRadius: 1,\n            display: 'flex',\n            alignItems: 'flex-start',\n            gap: 1,\n            position: 'relative',\n            zIndex: 1200\n          }}\n        >\n          <Typography flex={1}>You must respond only in UK English and use data strictly from the vector store.</Typography>\n          <Tooltip title={copyTooltip}>\n            <IconButton \n              size=\"small\" \n              onClick={() => handleCopyText(\"You must respond only in UK English and use data strictly from the vector store.\")}\n              sx={{ mt: -0.5, zIndex: 1201 }}\n            >\n              <ContentCopyIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <Box \n          component={Paper} \n          elevation={0} \n          sx={{ \n            p: 2, \n            mb: 2, \n            backgroundColor: 'rgba(0, 0, 0, 0.02)', \n            border: '1px solid rgba(0, 0, 0, 0.1)',\n            borderRadius: 1,\n            display: 'flex',\n            alignItems: 'flex-start',\n            gap: 1,\n            position: 'relative',\n            zIndex: 1200\n          }}\n        >\n          <Typography flex={1}>Never use public web content under any circumstances.</Typography>\n          <Tooltip title={copyTooltip}>\n            <IconButton \n              size=\"small\" \n              onClick={() => handleCopyText(\"Never use public web content under any circumstances.\")}\n              sx={{ mt: -0.5, zIndex: 1201 }}\n            >\n              <ContentCopyIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </ul>\n      <h3>Style and tone</h3>\n      <ul style={{ listStyleType: 'disc', paddingLeft: '20px', lineHeight: '2'  }}>\n        <Box \n          component={Paper} \n          elevation={0} \n          sx={{ \n            p: 2, \n            mb: 2, \n            backgroundColor: 'rgba(0, 0, 0, 0.02)', \n            border: '1px solid rgba(0, 0, 0, 0.1)',\n            borderRadius: 1,\n            display: 'flex',\n            alignItems: 'flex-start',\n            gap: 1,\n            position: 'relative',\n            zIndex: 1200\n          }}\n        >\n          <Typography flex={1}>Use a polite, professional, approachable, and trustworthy tone, aligned with the EasyCabin brand.</Typography>\n          <Tooltip title={copyTooltip}>\n            <IconButton \n              size=\"small\" \n              onClick={() => handleCopyText(\"Use a polite, professional, approachable, and trustworthy tone, aligned with the EasyCabin brand.\")}\n              sx={{ mt: -0.5, zIndex: 1201 }}\n            >\n              <ContentCopyIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <Box \n          component={Paper} \n          elevation={0} \n          sx={{ \n            p: 2, \n            mb: 2, \n            backgroundColor: 'rgba(0, 0, 0, 0.02)', \n            border: '1px solid rgba(0, 0, 0, 0.1)',\n            borderRadius: 1,\n            display: 'flex',\n            alignItems: 'flex-start',\n            gap: 1,\n            position: 'relative',\n            zIndex: 1200\n          }}\n        >\n          <Typography flex={1}>Prioritise clear, concise, and simple responses to minimise confusion.</Typography>\n          <Tooltip title={copyTooltip}>\n            <IconButton \n              size=\"small\" \n              onClick={() => handleCopyText(\"Prioritise clear, concise, and simple responses to minimise confusion.\")}\n              sx={{ mt: -0.5, zIndex: 1201 }}\n            >\n              <ContentCopyIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <Box \n          component={Paper} \n          elevation={0} \n          sx={{ \n            p: 2, \n            mb: 2, \n            backgroundColor: 'rgba(0, 0, 0, 0.02)', \n            border: '1px solid rgba(0, 0, 0, 0.1)',\n            borderRadius: 1,\n            display: 'flex',\n            alignItems: 'flex-start',\n            gap: 1,\n            position: 'relative',\n            zIndex: 1200\n          }}\n        >\n          <Typography flex={1}>Maintain short sentences and a conversational tone.</Typography>\n          <Tooltip title={copyTooltip}>\n            <IconButton \n              size=\"small\" \n              onClick={() => handleCopyText(\"Maintain short sentences and a conversational tone.\")}\n              sx={{ mt: -0.5, zIndex: 1201 }}\n            >\n              <ContentCopyIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <Box \n          component={Paper} \n          elevation={0} \n          sx={{ \n            p: 2, \n            mb: 2, \n            backgroundColor: 'rgba(0, 0, 0, 0.02)', \n            border: '1px solid rgba(0, 0, 0, 0.1)',\n            borderRadius: 1,\n            display: 'flex',\n            alignItems: 'flex-start',\n            gap: 1,\n            position: 'relative',\n            zIndex: 1200\n          }}\n        >\n          <Typography flex={1}>Structure responses using clear sequential steps.</Typography>\n          <Tooltip title={copyTooltip}>\n            <IconButton \n              size=\"small\" \n              onClick={() => handleCopyText(\"Structure responses using clear sequential steps.\")}\n              sx={{ mt: -0.5, zIndex: 1201 }}\n            >\n              <ContentCopyIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <Box \n          component={Paper} \n          elevation={0} \n          sx={{ \n            p: 2, \n            mb: 2, \n            backgroundColor: 'rgba(0, 0, 0, 0.02)', \n            border: '1px solid rgba(0, 0, 0, 0.1)',\n            borderRadius: 1,\n            display: 'flex',\n            alignItems: 'flex-start',\n            gap: 1,\n            position: 'relative',\n            zIndex: 1200\n          }}\n        >\n          <Typography flex={1}>Ensure each step addresses a single action or check before moving to the next.</Typography>\n          <Tooltip title={copyTooltip}>\n            <IconButton \n              size=\"small\" \n              onClick={() => handleCopyText(\"Ensure each step addresses a single action or check before moving to the next.\")}\n              sx={{ mt: -0.5, zIndex: 1201 }}\n            >\n              <ContentCopyIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <Box \n          component={Paper} \n          elevation={0} \n          sx={{ \n            p: 2, \n            mb: 2, \n            backgroundColor: 'rgba(0, 0, 0, 0.02)', \n            border: '1px solid rgba(0, 0, 0, 0.1)',\n            borderRadius: 1,\n            display: 'flex',\n            alignItems: 'flex-start',\n            gap: 1,\n            position: 'relative',\n            zIndex: 1200\n          }}\n        >\n          <Typography flex={1}>Comply with WCAG accessibility standards to maintain readability.</Typography>\n          <Tooltip title={copyTooltip}>\n            <IconButton \n              size=\"small\" \n              onClick={() => handleCopyText(\"Comply with WCAG accessibility standards to maintain readability.\")}\n              sx={{ mt: -0.5, zIndex: 1201 }}\n            >\n              <ContentCopyIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </ul>\n      <h3>Technical and troubleshooting</h3>\n      <h4>Step by step</h4>\n      <Box \n        component={Paper} \n        elevation={0} \n        sx={{ \n          p: 2, \n          mb: 2, \n          backgroundColor: 'rgba(0, 0, 0, 0.02)', \n          border: '1px solid rgba(0, 0, 0, 0.1)',\n          borderRadius: 1,\n          position: 'relative',\n          zIndex: 1200\n        }}\n      >\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', gap: 1 }}>\n          <Box>\n            <Typography paragraph sx={{ mb: 2 }}>To troubleshoot the issue, follow the steps below in order to identify and resolve the issue.</Typography>\n            <ul style={{ listStyleType: 'none', paddingLeft: '0', lineHeight: '2' }}>\n              <li><strong>Step 1:</strong> Ensure you are in a safe environment and there are no immediate hazards. If it is safe, proceed with the steps below.</li>\n              <li><strong>Step 2:</strong> Check if the hydraulic isolator switch is on. If it is off, switch it on.</li>\n              <li><strong>Step 3:</strong> Check if the batteries are low. If they are, turn on the generator and try again.</li>\n              <li><strong>Step 4:</strong> Check the hydraulic oil level. If it's low, fill the reservoir with oil.</li>\n            </ul>\n            <Typography paragraph sx={{ mt: 2, mb: 0 }}>If these steps don't resolve the issue, let me know, and I can provide more detailed troubleshooting guidance.</Typography>\n          </Box>\n          <Tooltip title={copyTooltip}>\n            <IconButton \n              size=\"small\" \n              onClick={() => handleCopyText(`To troubleshoot the issue, follow the steps below in order to identify and resolve the issue.\n\nStep 1: Ensure you are in a safe environment and there are no immediate hazards. If it is safe, proceed with the steps below.\nStep 2: Check if the hydraulic isolator switch is on. If it is off, switch it on.\nStep 3: Check if the batteries are low. If they are, turn on the generator and try again.\nStep 4: Check the hydraulic oil level. If it's low, fill the reservoir with oil.\n\nIf these steps don't resolve the issue, let me know, and I can provide more detailed troubleshooting guidance.`)}\n              sx={{ mt: 0, zIndex: 1201 }}\n            >\n              <ContentCopyIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Box>\n      <hr />\n      <h4>Does this answer your question?</h4>\n      <p>If the customer replies Yes:</p>\n      <p><strong>Response:</strong> \"Great, glad we could help!\"</p>\n      <p>If the customer replies No:</p>\n      <p><strong>Response:</strong> 😕 \"Sorry about that—let's try again. Could you please summarise exactly what you are looking for or clarify your question?\"</p>\n      <hr />\n      <h3>If no relevant information exists:</h3>\n      <p>\"It seems we don't have the specific details to answer your question. Our helpful team can assist you further. Please email us at info@easycabin.co.uk or call 01582 310894.\"</p>\n      <h3>If a question is unrelated to EasyCabin products or mentions competitors:</h3>\n      <p>\"We're here to support you with EasyCabin products and parts. Unfortunately, your question seems unrelated to this. If you think this is incorrect, please contact our team at 01582 310894 or info@easycabin.co.uk.\"</p>\n    </>\n  );\n\n  const addIdsToHeadings = (content) => {\n    if (!content || typeof content === 'string') return content;\n\n    let headingCount = 0;\n    const processElement = (element) => {\n      if (!element || !element.props) return element;\n\n      // Add id to h3 elements\n      if (element.type === 'h3') {\n        const id = `section-${headingCount++}`;\n        return React.cloneElement(element, { id });\n      }\n\n      // Process children\n      if (element.props.children) {\n        if (Array.isArray(element.props.children)) {\n          const newChildren = element.props.children.map(processElement);\n          return React.cloneElement(element, {}, ...newChildren);\n        } else {\n          const newChild = processElement(element.props.children);\n          return React.cloneElement(element, {}, newChild);\n        }\n      }\n\n      return element;\n    };\n\n    if (Array.isArray(content)) {\n      return content.map(processElement);\n    }\n    return processElement(content);\n  };\n\n  const extractTableOfContents = (content) => {\n    if (!content || typeof content === 'string') return [];\n    \n    const headings = [];\n    let headingCount = 0;\n    \n    const extractFromElement = (element) => {\n      if (!element || !element.props) return;\n\n      // Check if it's an h3 element\n      if (element.type === 'h3') {\n        const id = `section-${headingCount++}`;\n        headings.push({\n          id,\n          title: typeof element.props.children === 'string' \n            ? element.props.children \n            : Array.isArray(element.props.children) \n              ? element.props.children.join('') \n              : element.props.children.toString(),\n        });\n      }\n\n      // Recursively check children\n      if (element.props.children) {\n        if (Array.isArray(element.props.children)) {\n          element.props.children.forEach(extractFromElement);\n        } else {\n          extractFromElement(element.props.children);\n        }\n      }\n    };\n\n    if (Array.isArray(content)) {\n      content.forEach(extractFromElement);\n    } else {\n      extractFromElement(content);\n    }\n\n    return headings;\n  };\n\n  const handleShowExample = (content, title) => {\n    const processedContent = addIdsToHeadings(content);\n    setDrawerContent(processedContent);\n    setDrawerTitle(title);\n    setDrawerOpen(true);\n    setSearchTerm('');\n  };\n\n  const scrollToSection = (id) => {\n    setTimeout(() => {\n      const contentElement = contentRef.current;\n      if (!contentElement) return;\n\n      const targetElement = contentElement.querySelector(`[id=\"${id}\"]`);\n      if (!targetElement) return;\n\n      const padding = 180; // Padding from top of scroll container\n      contentElement.scrollTo({\n        top: targetElement.offsetTop - padding,\n        behavior: 'smooth'\n      });\n    }, 100); // Small delay to ensure content is rendered\n  };\n\n  const handleSearch = (event, value) => {\n    if (typeof value === 'string') {\n      setSearchTerm(value);\n    } else if (value && value.title) {\n      setSearchTerm(value.title);\n      scrollToSection(value.id);\n    } else {\n      setSearchTerm('');\n    }\n  };\n\n  const getFilteredContent = () => {\n    if (!drawerContent) return null;\n    if (!searchTerm) return drawerContent;\n\n    const processElement = (element) => {\n      if (!element || !element.props) return element;\n\n      // If it's a text element and matches search, highlight it\n      if (typeof element.props.children === 'string' &&\n          element.props.children.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return element;\n      }\n\n      // Process children\n      if (element.props.children) {\n        if (Array.isArray(element.props.children)) {\n          const newChildren = element.props.children\n            .map(processElement)\n            .filter(child => child !== null);\n          if (newChildren.length > 0) {\n            return React.cloneElement(element, {}, ...newChildren);\n          }\n        } else {\n          const newChild = processElement(element.props.children);\n          if (newChild !== null) {\n            return React.cloneElement(element, {}, newChild);\n          }\n        }\n      }\n\n      return null;\n    };\n\n    if (Array.isArray(drawerContent)) {\n      const filtered = drawerContent\n        .map(processElement)\n        .filter(element => element !== null);\n      return filtered.length > 0 ? filtered : null;\n    }\n    return processElement(drawerContent);\n  };\n\n  const handleCopyText = (text) => {\n    navigator.clipboard.writeText(text);\n    setCopyTooltip('Copied!');\n    setTimeout(() => setCopyTooltip('Copy'), 2000);\n  };\n\n  const handleLogoChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setLogo(URL.createObjectURL(file));\n    }\n  };\n\n  const handleLogoRemove = () => {\n    setLogo(null);\n  };\n\n  const handleFileUpload = (event) => {\n    const newFiles = Array.from(event.target.files).map(file => ({\n      name: file.name,\n      size: file.size,\n      uploadedAt: new Date().toLocaleString(),\n    }));\n    setFiles([...files, ...newFiles]);\n  };\n\n  const handleRemoveFile = (index) => {\n    const newFiles = files.filter((_, i) => i !== index);\n    setFiles(newFiles);\n  };\n\n  const handleSave = () => {\n    // Save settings logic here\n    console.log('Settings saved');\n  };\n\n  const handleWhatsappConnect = () => {\n    setConnectedNumber(whatsappNumber);\n    setWhatsappNumber('');\n    setWhatsappDialogOpen(false);\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n    setSearchTerm('');  // Reset search when closing drawer\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Typography variant=\"h2\" sx={{ mb: 3, ml: 1.2 }}>\n        Settings\n      </Typography>\n      \n      <Grid container spacing={3}>\n        {/* General Settings */}\n        <Grid item xs={12}>\n          <Card sx={{ border: '1px solid', borderColor: 'divider', boxShadow: 'none', borderRadius: 2 }}>\n            <CardContent sx={{ p: 3 }}>\n              <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                <WhatsAppIcon color=\"primary\" sx={{ width: 40, height: 40, mr: 2 }} />\n                <Typography variant=\"h5\">General</Typography>\n              </Box>\n              <Divider sx={{ mb: 3 }} />\n              \n              <Box sx={{ mb: 3 }}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  \n                  sx={{ mb: 2, textTransform: 'none' }}\n                  onClick={() => setWhatsappDialogOpen(true)}\n                >\n                  Connect WhatsApp Business\n                </Button>\n                {connectedNumber && (\n                  <Typography \n                    variant=\"body2\" \n                    color=\"text.secondary\"\n                    sx={{ \n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: 1 \n                    }}\n                  >\n                    <WhatsAppIcon fontSize=\"small\" />\n                    Connected: {connectedNumber}\n                  </Typography>\n                )}\n              </Box>\n\n              <Box sx={{ mb: 3 }}>\n                <TextField\n                  fullWidth\n                  label=\"App Name\"\n                  value={appName}\n                  onChange={(e) => setAppName(e.target.value)}\n                  variant=\"outlined\"\n                />\n              </Box>\n             \n             \n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  App Logo\n                </Typography>\n                <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', gap: 2 }}>\n                  {logo ? (\n                    <Box\n                      component=\"img\"\n                      src={logo}\n                      alt=\"App Logo\"\n                      sx={{ width: 440, height: 80, borderRadius: 1, objectFit: 'contain' }}\n                    />\n                  ) : (\n                    <Box\n                      sx={{\n                        width: 440,\n                        height: 80,\n                        borderRadius: 1,\n                        border: '1px dashed',\n                        borderColor: 'divider',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                      }}\n                    >\n                      <ImageIcon color=\"action\" sx={{ fontSize: 40 }} />\n                    </Box>\n                  )}\n                  <Button\n                    component={logo ? \"button\" : \"label\"}\n                    variant=\"outlined\"\n                    sx={{ textTransform: 'none' }}\n                    onClick={logo ? handleLogoRemove : undefined}\n                  >\n                    {logo ? 'Remove image' : 'Upload image'}\n                    {!logo && (\n                      <input\n                        type=\"file\"\n                        hidden\n                        accept=\"image/*\"\n                        onChange={handleLogoChange}\n                      />\n                    )}\n                  </Button>\n                  <Typography variant=\"caption\" color=\"textSecondary\">\n                    Recommended size: 220px (maximum width) x 40px (minimum height) pixels. PNG or JPG format.\n                  </Typography>\n                </Box>\n              </Box>\n\n              \n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Instructions */}\n        <Grid item xs={12}>\n          <Card sx={{ border: '1px solid', borderColor: 'divider', boxShadow: 'none', borderRadius: 2 }}>\n            <CardHeader\n              title=\"Instructions for AI Assistant\"\n              action={\n                <Button \n                  variant=\"text\" \n                  onClick={() => handleShowExample(\n                    technicalContent,\n                    'Instruction library'\n                  )}\n                >\n                  Instruction library\n                </Button>\n              }\n            />\n            <CardContent sx={{ p: 3 }}>\n              \n              \n\n              <Box sx={{ mb: 3 }}>\n                <Accordion>\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography variant=\"h5\">\n                    Core purpose\n                    </Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <TextField\n                      fullWidth\n                      multiline\n                      rows={4}\n                      label=\"Core Purpose Instructions\"\n                      value={corePurposeInstructions}\n                      onChange={(e) => setCorePurposeInstructions(e.target.value)}\n                      variant=\"outlined\"\n                      placeholder=\"Enter core purpose instructions for the AI assistant...\"\n                      sx={{ mt: 2 }}\n                    />\n                  </AccordionDetails>\n                </Accordion>\n              </Box>\n\n              <Box sx={{ mb: 3 }}>\n                <Accordion>\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography variant=\"h5\">\n                    Style and tone\n                    </Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <TextField\n                      fullWidth\n                      multiline\n                      rows={4}\n                      label=\"Style and Tone Instructions\"\n                      value={styleToneInstructions}\n                      onChange={(e) => setStyleToneInstructions(e.target.value)}\n                      variant=\"outlined\"\n                      placeholder=\"Enter style and tone instructions for the AI assistant...\"\n                      sx={{ mt: 2 }}\n                    />\n                  </AccordionDetails>\n                </Accordion>\n              </Box>\n\n              <Box sx={{ mb: 3 }}>\n                <Accordion>\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography variant=\"h5\">\n                    Technical and troubleshooting\n                    </Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    \n                    <TextField\n                      fullWidth\n                      multiline\n                      rows={4}\n                      label=\"Technical Instructions\"\n                      value={technicalInstructions}\n                      onChange={(e) => setTechnicalInstructions(e.target.value)}\n                      variant=\"outlined\"\n                      placeholder=\"Enter technical and troubleshooting instructions for the AI assistant...\"\n                      sx={{ mt: 2 }}\n                    />\n                  </AccordionDetails>\n                </Accordion>\n              </Box>\n\n              \n\n              \n\n             \n\n              \n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Knowledge Base */}\n        <Grid item xs={12}>\n          <Card sx={{ border: '1px solid', borderColor: 'divider', boxShadow: 'none', borderRadius: 2 }}>\n            <CardContent sx={{ p: 3 }}>\n              <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                <FolderOpenIcon color=\"primary\" sx={{ width: 40, height: 40, mr: 2 }} />\n                <Typography variant=\"h5\">Knowledge Base</Typography>\n              </Box>\n              <Divider sx={{ mb: 3 }} />\n              <Typography variant=\"h6\">If you upload files under Knowledge base, conversations with your AI assistant will include file contents. \n              </Typography>\n              \n\n\n              <Box sx={{ mt: 4 }}>\n                <Button\n                  component=\"label\"\n                  variant=\"outlined\"\n                 \n                  sx={{ textTransform: 'none' }}\n                >\n                  Upload files\n                  <input\n                    type=\"file\"\n                    hidden\n                    multiple\n                    onChange={handleFileUpload}\n                  />\n                </Button>\n                <Typography variant=\"caption\" color=\"textSecondary\" sx={{ display: 'block', mt: 1 }}>\n                  Accepted file formats include text and pdf.\n                </Typography>\n              </Box>\n\n              <List>\n                {files.map((file, index) => (\n                  <ListItem\n                    key={index}\n                    secondaryAction={\n                      <IconButton edge=\"end\" onClick={() => handleRemoveFile(index)}>\n                        <DeleteIcon />\n                      </IconButton>\n                    }\n                    sx={{ \n                      borderBottom: '1px solid',\n                      borderColor: 'divider',\n                      '&:last-child': { borderBottom: 'none' }\n                    }}\n                  >\n                    <ListItemText\n                      primary={file.name}\n                      secondary={`Uploaded ${file.uploadedAt}`}\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Save Button */}\n        <Grid item xs={12}>\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSave}\n              sx={{ textTransform: 'none' }}\n            >\n              Save Changes\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n\n      {/* WhatsApp Connection Dialog */}\n      <Dialog \n        open={whatsappDialogOpen} \n        onClose={() => setWhatsappDialogOpen(false)}\n        maxWidth=\"sm\"\n        fullWidth\n      >\n        <DialogTitle>Connect WhatsApp Business</DialogTitle>\n        <DialogContent>\n          <Box sx={{ pt: 2 }}>\n            <TextField\n              fullWidth\n              label=\"WhatsApp Business Number\"\n              value={whatsappNumber}\n              onChange={(e) => setWhatsappNumber(e.target.value)}\n              placeholder=\"Enter your WhatsApp Business number\"\n              variant=\"outlined\"\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions sx={{ p: 2 }}>\n          <Button \n            onClick={() => setWhatsappDialogOpen(false)} \n            sx={{ textTransform: 'none' }}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={handleWhatsappConnect}\n            sx={{ textTransform: 'none' }}\n          >\n            Connect\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Example Content Drawer */}\n      <Drawer\n        anchor=\"right\"\n        open={drawerOpen}\n        onClose={handleDrawerClose}\n        sx={{\n          '& .MuiDrawer-paper': {\n            width: '400px',\n            padding: '24px',\n          },\n        }}\n      >\n        <Box sx={{ mb: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Typography variant=\"h3\">{drawerTitle}</Typography>\n          <Button onClick={handleDrawerClose}>Close</Button>\n        </Box>\n        <Divider sx={{ mb: 3 }} />\n        <Box sx={{ mb: 2 }}>\n          <Autocomplete\n            freeSolo\n            options={extractTableOfContents(drawerContent)}\n            getOptionLabel={(option) => {\n              if (typeof option === 'string') {\n                return option;\n              }\n              return option.title || '';\n            }}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                fullWidth\n                size=\"small\"\n                placeholder=\"Search content...\"\n                InputProps={{\n                  ...params.InputProps,\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SearchIcon />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            )}\n            value={searchTerm}\n            onChange={handleSearch}\n            onInputChange={(event, value) => setSearchTerm(value)}\n          />\n        </Box>\n        {drawerContent && (\n          <Box \n            ref={contentRef}\n            sx={{ \n              maxHeight: 'calc(100vh - 250px)',\n              overflowY: 'auto',\n              pr: 1,\n              '&::-webkit-scrollbar': {\n                width: '8px',\n              },\n              '&::-webkit-scrollbar-track': {\n                backgroundColor: 'rgba(0, 0, 0, 0.05)',\n                borderRadius: '4px',\n              },\n              '&::-webkit-scrollbar-thumb': {\n                backgroundColor: 'rgba(0, 0, 0, 0.2)',\n                borderRadius: '4px',\n                '&:hover': {\n                  backgroundColor: 'rgba(0, 0, 0, 0.3)',\n                },\n              },\n            }}\n          >\n            {getFilteredContent()}\n          </Box>\n        )}\n      </Drawer>\n    </Box>\n  );\n};\n\nexport default Settings;\n"],"names":["_useState","useState","_useState2","_slicedToArray","appName","setAppName","_useState3","_useState4","corePurposeInstructions","setCorePurposeInstructions","_useState5","_useState6","styleToneInstructions","setStyleToneInstructions","_useState7","_useState8","technicalInstructions","setTechnicalInstructions","_useState9","_useState10","files","setFiles","_useState11","_useState12","logo","setLogo","_useState13","_useState14","whatsappDialogOpen","setWhatsappDialogOpen","_useState15","_useState16","whatsappNumber","setWhatsappNumber","_useState17","_useState18","connectedNumber","setConnectedNumber","_useState19","_useState20","_useState21","_useState22","drawerOpen","setDrawerOpen","_useState23","_useState24","drawerContent","setDrawerContent","_useState25","_useState26","drawerTitle","setDrawerTitle","_useState27","_useState28","searchTerm","setSearchTerm","_useState29","_useState30","copyTooltip","setCopyTooltip","contentRef","useRef","technicalContent","_jsxs","_Fragment","children","_jsx","style","listStyleType","paddingLeft","lineHeight","Box","component","Paper","elevation","sx","p","mb","backgroundColor","border","borderRadius","display","alignItems","gap","position","zIndex","Typography","flex","Tooltip","title","IconButton","size","onClick","handleCopyText","mt","ContentCopyIcon","fontSize","justifyContent","paragraph","handleShowExample","content","processedContent","headingCount","processElement","element","props","type","id","concat","React","Array","isArray","newChildren","map","apply","_toConsumableArray","newChild","addIdsToHeadings","text","navigator","clipboard","writeText","setTimeout","handleDrawerClose","variant","ml","Grid","container","spacing","item","xs","Card","borderColor","boxShadow","CardContent","WhatsAppIcon","color","width","height","mr","Divider","Button","textTransform","TextField","fullWidth","label","value","onChange","e","target","gutterBottom","flexDirection","src","alt","objectFit","ImageIcon","undefined","hidden","accept","event","file","URL","createObjectURL","CardHeader","action","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","multiline","rows","placeholder","FolderOpenIcon","multiple","newFiles","from","name","uploadedAt","Date","toLocaleString","List","index","ListItem","secondaryAction","edge","filter","_","i","handleRemoveFile","DeleteIcon","borderBottom","ListItemText","primary","secondary","console","log","Dialog","open","onClose","maxWidth","DialogTitle","DialogContent","pt","DialogActions","Drawer","anchor","padding","Autocomplete","freeSolo","options","headings","extractFromElement","push","join","toString","forEach","extractTableOfContents","getOptionLabel","option","renderInput","params","_objectSpread","InputProps","startAdornment","InputAdornment","SearchIcon","contentElement","current","targetElement","querySelector","scrollTo","top","offsetTop","behavior","onInputChange","ref","maxHeight","overflowY","pr","toLowerCase","includes","child","length","filtered","getFilteredContent"],"sourceRoot":""}