{"ast":null,"code":"var _jsxFileName = \"/Users/invotradesign/CascadeProjects/site-users-app/src/components/OrgChart.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { OrganizationGraph } from '@ant-design/graphs';\nimport { Box, Typography, Card, CardContent, useTheme } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Mock data with hierarchy\nconst mockUsers = [{\n  id: 1,\n  name: 'John Doe',\n  team: 'Executive',\n  location: 'New York',\n  jobRole: 'CEO',\n  imageUrl: '',\n  email: 'john.doe@company.com',\n  phone: '+1 (555) 000-0001',\n  linkedin: 'linkedin.com/in/johndoe',\n  directReports: [2, 3, 4]\n}, {\n  id: 2,\n  name: 'Sarah Williams',\n  team: 'Engineering',\n  location: 'San Francisco',\n  jobRole: 'CTO',\n  imageUrl: '',\n  email: 'sarah.williams@company.com',\n  phone: '+1 (555) 000-0002',\n  linkedin: 'linkedin.com/in/sarahwilliams',\n  managerId: 1,\n  directReports: [5, 6]\n}\n// Add more mock users here...\n];\nconst OrgChart = () => {\n  _s();\n  const theme = useTheme();\n\n  // Transform users data into the format required by OrganizationGraph\n  const transformData = users => {\n    const buildHierarchy = userId => {\n      var _user$directReports;\n      const user = users.find(u => u.id === userId);\n      return {\n        id: user.id.toString(),\n        value: {\n          name: user.name,\n          title: user.jobRole,\n          team: user.team\n        },\n        children: ((_user$directReports = user.directReports) === null || _user$directReports === void 0 ? void 0 : _user$directReports.map(reportId => buildHierarchy(reportId))) || []\n      };\n    };\n    const rootUser = users.find(user => !user.managerId);\n    return rootUser ? buildHierarchy(rootUser.id) : buildHierarchy(users[0].id);\n  };\n  const config = {\n    data: transformData(mockUsers),\n    nodeCfg: {\n      style: node => {\n        return {\n          fill: theme.palette.background.paper,\n          stroke: theme.palette.primary.main,\n          radius: 4,\n          padding: [16, 16],\n          badge: {\n            style: {\n              fill: theme.palette.primary.main,\n              color: theme.palette.primary.contrastText\n            }\n          }\n        };\n      },\n      nodeStateStyles: {\n        hover: {\n          stroke: theme.palette.secondary.main,\n          lineWidth: 2\n        }\n      },\n      label: {\n        style: {\n          fill: theme.palette.text.primary,\n          fontSize: 14\n        }\n      },\n      title: {\n        style: {\n          fill: theme.palette.text.secondary,\n          fontSize: 12\n        }\n      }\n    },\n    edgeCfg: {\n      style: {\n        stroke: theme.palette.primary.main,\n        lineWidth: 1\n      }\n    },\n    layout: {\n      type: 'dendrogram',\n      direction: 'TB',\n      nodeSep: 50,\n      rankSep: 100\n    },\n    behaviors: ['drag-canvas', 'zoom-canvas', 'drag-node'],\n    autoFit: true\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3,\n      height: 'calc(100vh - 64px)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mb: 4\n      },\n      children: \"Organization Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        height: 'calc(100% - 80px)'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          height: '100%',\n          '& canvas': {\n            width: '100%',\n            height: '100%'\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(OrganizationGraph, {\n          ...config\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n_s(OrgChart, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = OrgChart;\nexport default OrgChart;\nvar _c;\n$RefreshReg$(_c, \"OrgChart\");","map":{"version":3,"names":["React","OrganizationGraph","Box","Typography","Card","CardContent","useTheme","jsxDEV","_jsxDEV","mockUsers","id","name","team","location","jobRole","imageUrl","email","phone","linkedin","directReports","managerId","OrgChart","_s","theme","transformData","users","buildHierarchy","userId","_user$directReports","user","find","u","toString","value","title","children","map","reportId","rootUser","config","data","nodeCfg","style","node","fill","palette","background","paper","stroke","primary","main","radius","padding","badge","color","contrastText","nodeStateStyles","hover","secondary","lineWidth","label","text","fontSize","edgeCfg","layout","type","direction","nodeSep","rankSep","behaviors","autoFit","sx","p","height","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","width","_c","$RefreshReg$"],"sources":["/Users/invotradesign/CascadeProjects/site-users-app/src/components/OrgChart.tsx"],"sourcesContent":["import React from 'react';\nimport { OrganizationGraph } from '@ant-design/graphs';\nimport {\n    Box,\n    Typography,\n    Card,\n    CardContent,\n    useTheme\n} from '@mui/material';\nimport { User } from '../types/User';\n\n// Mock data with hierarchy\nconst mockUsers: User[] = [\n    {\n        id: 1,\n        name: 'John Doe',\n        team: 'Executive',\n        location: 'New York',\n        jobRole: 'CEO',\n        imageUrl: '',\n        email: 'john.doe@company.com',\n        phone: '+1 (555) 000-0001',\n        linkedin: 'linkedin.com/in/johndoe',\n        directReports: [2, 3, 4]\n    },\n    {\n        id: 2,\n        name: 'Sarah Williams',\n        team: 'Engineering',\n        location: 'San Francisco',\n        jobRole: 'CTO',\n        imageUrl: '',\n        email: 'sarah.williams@company.com',\n        phone: '+1 (555) 000-0002',\n        linkedin: 'linkedin.com/in/sarahwilliams',\n        managerId: 1,\n        directReports: [5, 6]\n    },\n    // Add more mock users here...\n];\n\nconst OrgChart: React.FC = () => {\n    const theme = useTheme();\n\n    // Transform users data into the format required by OrganizationGraph\n    const transformData = (users: User[]) => {\n        const buildHierarchy = (userId: number) => {\n            const user = users.find(u => u.id === userId)!;\n            return {\n                id: user.id.toString(),\n                value: {\n                    name: user.name,\n                    title: user.jobRole,\n                    team: user.team,\n                },\n                children: user.directReports?.map(reportId => buildHierarchy(reportId)) || []\n            };\n        };\n\n        const rootUser = users.find(user => !user.managerId);\n        return rootUser ? buildHierarchy(rootUser.id) : buildHierarchy(users[0].id);\n    };\n\n    const config = {\n        data: transformData(mockUsers),\n        nodeCfg: {\n            style: (node: any) => {\n                return {\n                    fill: theme.palette.background.paper,\n                    stroke: theme.palette.primary.main,\n                    radius: 4,\n                    padding: [16, 16],\n                    badge: {\n                        style: {\n                            fill: theme.palette.primary.main,\n                            color: theme.palette.primary.contrastText,\n                        },\n                    },\n                };\n            },\n            nodeStateStyles: {\n                hover: {\n                    stroke: theme.palette.secondary.main,\n                    lineWidth: 2,\n                },\n            },\n            label: {\n                style: {\n                    fill: theme.palette.text.primary,\n                    fontSize: 14,\n                },\n            },\n            title: {\n                style: {\n                    fill: theme.palette.text.secondary,\n                    fontSize: 12,\n                },\n            },\n        },\n        edgeCfg: {\n            style: {\n                stroke: theme.palette.primary.main,\n                lineWidth: 1,\n            },\n        },\n        layout: {\n            type: 'dendrogram',\n            direction: 'TB',\n            nodeSep: 50,\n            rankSep: 100,\n        },\n        behaviors: ['drag-canvas', 'zoom-canvas', 'drag-node'],\n        autoFit: true,\n    };\n\n    return (\n        <Box sx={{ p: 3, height: 'calc(100vh - 64px)' }}>\n            <Typography variant=\"h4\" sx={{ mb: 4 }}>\n                Organization Chart\n            </Typography>\n            <Card sx={{ height: 'calc(100% - 80px)' }}>\n                <CardContent sx={{ height: '100%', '& canvas': { width: '100%', height: '100%' } }}>\n                    <OrganizationGraph {...config} />\n                </CardContent>\n            </Card>\n        </Box>\n    );\n};\n\nexport default OrgChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}