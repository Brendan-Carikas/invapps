{"ast":null,"code":"var _jsxFileName = \"/Users/invotradesign/MYGitHub/CascadeProjects/site-users-app/src/components/OrgChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Tree from 'react-d3-tree';\nimport { useUsers } from './UserContext';\nimport { Box, Card, Avatar, Typography, useTheme as useMuiTheme, alpha } from '@mui/material';\nimport { useTheme } from './ThemeContext';\n\n// Convert NodeAttributes to Record<string, string | number | boolean>\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stringToColor = string => {\n  let hash = 0;\n  for (let i = 0; i < string.length; i++) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  let color = '#';\n  for (let i = 0; i < 3; i++) {\n    const value = hash >> i * 8 & 0xFF;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n  return color;\n};\nconst convertToRawNodeDatum = node => {\n  var _node$children;\n  return {\n    name: node.name,\n    attributes: node.attributes,\n    children: (_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children.map(convertToRawNodeDatum)\n  };\n};\nconst OrgChart = () => {\n  _s();\n  const muiTheme = useMuiTheme();\n  const {\n    headingFontWeights,\n    pageTitleFontSize,\n    headingFont\n  } = useTheme();\n  const {\n    users\n  } = useUsers();\n  const [treeData, setTreeData] = useState(null);\n  useEffect(() => {\n    const buildTreeData = users => {\n      if (!users.length) return null;\n\n      // Create a map for quick user lookup\n      const userMap = new Map(users.map(user => [user.id, user]));\n\n      // Find the root (CEO or highest level manager)\n      const root = users.find(user => {\n        var _user$directReports;\n        // Check if this user's manager exists in our user list\n        const hasValidManager = user.managerId && userMap.has(user.managerId);\n        return !hasValidManager && (user.jobRole.toLowerCase().includes('ceo') || user.jobRole.toLowerCase().includes('chief') || ((_user$directReports = user.directReports) === null || _user$directReports === void 0 ? void 0 : _user$directReports.length));\n      }) || users[0]; // Fallback to first user if no clear root\n\n      const buildNode = user => {\n        // Find direct reports both from directReports array and managerId references\n        const directReportIds = new Set();\n\n        // Add explicitly defined direct reports\n        if (user.directReports) {\n          user.directReports.forEach(id => directReportIds.add(id));\n        }\n\n        // Add users who reference this user as their manager\n        users.forEach(u => {\n          if (u.managerId === user.id) {\n            directReportIds.add(u.id);\n          }\n        });\n\n        // Build children nodes\n        const children = Array.from(directReportIds).map(id => userMap.get(id)).filter(u => u !== undefined).map(child => buildNode(child));\n        return {\n          name: user.name,\n          attributes: {\n            name: user.name,\n            role: user.jobRole,\n            team: user.team,\n            location: user.location,\n            email: user.email\n          },\n          children: children.length > 0 ? children : undefined\n        };\n      };\n      return buildNode(root);\n    };\n    const data = buildTreeData(users);\n    setTreeData(data);\n  }, [users]);\n  const renderCustomNode = ({\n    nodeDatum\n  }) => {\n    const attrs = nodeDatum.attributes;\n\n    // If no attributes, render a simple node\n    if (!attrs) {\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: /*#__PURE__*/_jsxDEV(\"foreignObject\", {\n          x: -60,\n          y: -25,\n          width: 120,\n          height: 50,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              p: 1,\n              width: '100%',\n              height: '100%',\n              bgcolor: alpha(muiTheme.palette.background.paper, 0.9),\n              boxShadow: 1,\n              borderRadius: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              align: \"center\",\n              display: \"block\",\n              children: nodeDatum.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this);\n    }\n    const initials = attrs.name.split(' ').map(n => n[0]).join('');\n    const bgColor = stringToColor(attrs.name);\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      children: /*#__PURE__*/_jsxDEV(\"foreignObject\", {\n        x: -100,\n        y: -50,\n        width: 200,\n        height: 100,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            p: 1.5,\n            width: '100%',\n            height: '100%',\n            bgcolor: alpha(muiTheme.palette.background.paper, 0.9),\n            boxShadow: 3,\n            borderRadius: 2,\n            overflow: 'visible'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1.5\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                width: 45,\n                height: 45,\n                bgcolor: bgColor,\n                fontSize: '1.1rem',\n                fontWeight: 600\n              },\n              children: initials\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                minWidth: 0,\n                flex: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                sx: {\n                  fontWeight: 600,\n                  whiteSpace: 'nowrap',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis'\n                },\n                children: attrs.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"textSecondary\",\n                sx: {\n                  display: 'block',\n                  whiteSpace: 'nowrap',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis'\n                },\n                children: attrs.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"primary\",\n                sx: {\n                  display: 'block',\n                  whiteSpace: 'nowrap',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis'\n                },\n                children: attrs.team\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  };\n  if (!treeData) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading organization chart...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100vh',\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h1\",\n      sx: {\n        mb: 3,\n        fontWeight: (headingFontWeights === null || headingFontWeights === void 0 ? void 0 : headingFontWeights.pageTitle) || 700,\n        fontSize: pageTitleFontSize,\n        fontFamily: headingFont\n      },\n      children: \"Organization Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        height: 'calc(100vh - 64px)'\n      },\n      children: /*#__PURE__*/_jsxDEV(Tree, {\n        data: treeData ? convertToRawNodeDatum(treeData) : {\n          name: 'No Data'\n        },\n        renderCustomNodeElement: renderCustomNode,\n        orientation: \"vertical\",\n        pathFunc: \"step\",\n        translate: {\n          x: window.innerWidth / 2,\n          y: 100\n        },\n        separation: {\n          siblings: 2.5,\n          nonSiblings: 3\n        },\n        zoom: 0.6,\n        nodeSize: {\n          x: 300,\n          y: 150\n        },\n        enableLegacyTransitions: true,\n        transitionDuration: 800\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(OrgChart, \"R0ei3D9aJOH85i7cxtkbtciyaGo=\", false, function () {\n  return [useMuiTheme, useTheme, useUsers];\n});\n_c = OrgChart;\nexport default OrgChart;\nvar _c;\n$RefreshReg$(_c, \"OrgChart\");","map":{"version":3,"names":["React","useEffect","useState","Tree","useUsers","Box","Card","Avatar","Typography","useTheme","useMuiTheme","alpha","jsxDEV","_jsxDEV","stringToColor","string","hash","i","length","charCodeAt","color","value","toString","substr","convertToRawNodeDatum","node","_node$children","name","attributes","children","map","OrgChart","_s","muiTheme","headingFontWeights","pageTitleFontSize","headingFont","users","treeData","setTreeData","buildTreeData","userMap","Map","user","id","root","find","_user$directReports","hasValidManager","managerId","has","jobRole","toLowerCase","includes","directReports","buildNode","directReportIds","Set","forEach","add","u","Array","from","get","filter","undefined","child","role","team","location","email","data","renderCustomNode","nodeDatum","attrs","x","y","width","height","sx","p","bgcolor","palette","background","paper","boxShadow","borderRadius","variant","align","display","fileName","_jsxFileName","lineNumber","columnNumber","initials","split","n","join","bgColor","overflow","alignItems","gap","fontSize","fontWeight","minWidth","flex","whiteSpace","textOverflow","component","mb","pageTitle","fontFamily","renderCustomNodeElement","orientation","pathFunc","translate","window","innerWidth","separation","siblings","nonSiblings","zoom","nodeSize","enableLegacyTransitions","transitionDuration","_c","$RefreshReg$"],"sources":["/Users/invotradesign/MYGitHub/CascadeProjects/site-users-app/src/components/OrgChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Tree, { RawNodeDatum, CustomNodeElementProps } from 'react-d3-tree';\nimport { User } from '../types/User';\nimport { useUsers } from './UserContext';\nimport {\n  Box,\n  Card,\n  Avatar,\n  Typography,\n  useTheme as useMuiTheme,\n  alpha\n} from '@mui/material';\nimport { useTheme } from './ThemeContext';\n\ntype NodeAttributes = {\n  name: string;\n  role: string;\n  team: string;\n  location: string;\n  email: string;\n}\n\n// Convert NodeAttributes to Record<string, string | number | boolean>\ntype TreeNodeAttributes = Record<keyof NodeAttributes, string>;\n\ninterface OrgChartNodeData {\n  name: string;\n  attributes?: TreeNodeAttributes;\n  children?: OrgChartNodeData[];\n}\n\nconst stringToColor = (string: string) => {\n  let hash = 0;\n  for (let i = 0; i < string.length; i++) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  let color = '#';\n  for (let i = 0; i < 3; i++) {\n    const value = (hash >> (i * 8)) & 0xFF;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n  return color;\n};\n\nconst convertToRawNodeDatum = (node: OrgChartNodeData): RawNodeDatum => {\n  return {\n    name: node.name,\n    attributes: node.attributes,\n    children: node.children?.map(convertToRawNodeDatum)\n  };\n};\n\nconst OrgChart: React.FC = () => {\n  const muiTheme = useMuiTheme();\n  const { headingFontWeights, pageTitleFontSize, headingFont } = useTheme();\n  const { users } = useUsers();\n  const [treeData, setTreeData] = useState<OrgChartNodeData | null>(null);\n\n  useEffect(() => {\n    const buildTreeData = (users: User[]): OrgChartNodeData | null => {\n      if (!users.length) return null;\n\n      // Create a map for quick user lookup\n      const userMap = new Map(users.map(user => [user.id, user]));\n      \n      // Find the root (CEO or highest level manager)\n      const root = users.find(user => {\n        // Check if this user's manager exists in our user list\n        const hasValidManager = user.managerId && userMap.has(user.managerId);\n        return !hasValidManager && (\n          user.jobRole.toLowerCase().includes('ceo') || \n          user.jobRole.toLowerCase().includes('chief') ||\n          user.directReports?.length\n        );\n      }) || users[0]; // Fallback to first user if no clear root\n\n      const buildNode = (user: User): OrgChartNodeData => {\n        // Find direct reports both from directReports array and managerId references\n        const directReportIds = new Set<number>();\n        \n        // Add explicitly defined direct reports\n        if (user.directReports) {\n          user.directReports.forEach(id => directReportIds.add(id));\n        }\n        \n        // Add users who reference this user as their manager\n        users.forEach(u => {\n          if (u.managerId === user.id) {\n            directReportIds.add(u.id);\n          }\n        });\n\n        // Build children nodes\n        const children = Array.from(directReportIds)\n          .map(id => userMap.get(id))\n          .filter((u): u is User => u !== undefined)\n          .map(child => buildNode(child));\n\n        return {\n          name: user.name,\n          attributes: {\n            name: user.name,\n            role: user.jobRole,\n            team: user.team,\n            location: user.location,\n            email: user.email\n          },\n          children: children.length > 0 ? children : undefined\n        };\n      };\n\n      return buildNode(root);\n    };\n\n    const data = buildTreeData(users);\n    setTreeData(data);\n  }, [users]);\n\n  const renderCustomNode = ({ nodeDatum }: CustomNodeElementProps) => {\n    const attrs = nodeDatum.attributes as Record<string, string> | undefined;\n    \n    // If no attributes, render a simple node\n    if (!attrs) {\n      return (\n        <g>\n          <foreignObject x={-60} y={-25} width={120} height={50}>\n            <Card\n              sx={{\n                p: 1,\n                width: '100%',\n                height: '100%',\n                bgcolor: alpha(muiTheme.palette.background.paper, 0.9),\n                boxShadow: 1,\n                borderRadius: 1\n              }}\n            >\n              <Typography variant=\"caption\" align=\"center\" display=\"block\">\n                {nodeDatum.name}\n              </Typography>\n            </Card>\n          </foreignObject>\n        </g>\n      );\n    }\n\n    const initials = attrs.name.split(' ').map(n => n[0]).join('');\n    const bgColor = stringToColor(attrs.name);\n\n    return (\n      <g>\n        <foreignObject x={-100} y={-50} width={200} height={100}>\n          <Card\n            sx={{\n              p: 1.5,\n              width: '100%',\n              height: '100%',\n              bgcolor: alpha(muiTheme.palette.background.paper, 0.9),\n              boxShadow: 3,\n              borderRadius: 2,\n              overflow: 'visible'\n            }}\n          >\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>\n              <Avatar\n                sx={{\n                  width: 45,\n                  height: 45,\n                  bgcolor: bgColor,\n                  fontSize: '1.1rem',\n                  fontWeight: 600\n                }}\n              >\n                {initials}\n              </Avatar>\n              <Box sx={{ minWidth: 0, flex: 1 }}>\n                <Typography \n                  variant=\"subtitle1\" \n                  sx={{ \n                    fontWeight: 600,\n                    whiteSpace: 'nowrap',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis'\n                  }}\n                >\n                  {attrs.name}\n                </Typography>\n                <Typography \n                  variant=\"caption\" \n                  color=\"textSecondary\"\n                  sx={{\n                    display: 'block',\n                    whiteSpace: 'nowrap',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis'\n                  }}\n                >\n                  {attrs.role}\n                </Typography>\n                <Typography \n                  variant=\"caption\" \n                  color=\"primary\"\n                  sx={{\n                    display: 'block',\n                    whiteSpace: 'nowrap',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis'\n                  }}\n                >\n                  {attrs.team}\n                </Typography>\n              </Box>\n            </Box>\n          </Card>\n        </foreignObject>\n      </g>\n    );\n  };\n\n  if (!treeData) {\n    return (\n      <Box sx={{ p: 3 }}>\n        <Typography>Loading organization chart...</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ height: '100vh', p: 3 }}>\n      <Typography \n        component=\"h1\" \n        sx={{ \n          mb: 3,\n          fontWeight: headingFontWeights?.pageTitle || 700,\n          fontSize: pageTitleFontSize,\n          fontFamily: headingFont\n        }}\n      >\n        Organization Chart\n      </Typography>\n      <Box sx={{ width: '100%', height: 'calc(100vh - 64px)' }}>\n        <Tree\n          data={treeData ? convertToRawNodeDatum(treeData) : { name: 'No Data' }}\n          renderCustomNodeElement={renderCustomNode}\n          orientation=\"vertical\"\n          pathFunc=\"step\"\n          translate={{ x: window.innerWidth / 2, y: 100 }}\n          separation={{ siblings: 2.5, nonSiblings: 3 }}\n          zoom={0.6}\n          nodeSize={{ x: 300, y: 150 }}\n          enableLegacyTransitions={true}\n          transitionDuration={800}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default OrgChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}