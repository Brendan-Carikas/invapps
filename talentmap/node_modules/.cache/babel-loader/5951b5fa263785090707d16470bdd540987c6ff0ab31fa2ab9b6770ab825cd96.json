{"ast":null,"code":"var _jsxFileName = \"/Users/invotradesign/MYGitHub/CascadeProjects/site-users-app/peopledirectory-BU/src/components/SkillsMatrix.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, Chip, TextField, FormControl, InputLabel, Select, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Button, Rating, Stack, Tooltip, Alert, OutlinedInput, Checkbox, ListItemText, Autocomplete, Tabs, Tab } from '@mui/material';\nimport { Add as AddIcon, Edit as EditIcon } from '@mui/icons-material';\nimport { parseSkillsCSV, getAllCategories } from '../utils/skillsUtils';\nimport { useUsers } from './UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `skills-tabpanel-${index}`,\n    \"aria-labelledby\": `skills-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 3\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_c = TabPanel;\nfunction a11yProps(index) {\n  return {\n    id: `skills-tab-${index}`,\n    'aria-controls': `skills-tabpanel-${index}`\n  };\n}\nconst skillLevelDescriptions = {\n  1: \"Beginner - Basic knowledge, needs guidance\",\n  2: \"Intermediate - Can work with supervision\",\n  3: \"Proficient - Works independently on most tasks\",\n  4: \"Advanced - Deep knowledge, can teach others\",\n  5: \"Expert - Subject matter expert, leads initiatives\"\n};\nconst yearsOfExperienceRules = {\n  1: {\n    min: 0,\n    max: 2\n  },\n  2: {\n    min: 1,\n    max: 3\n  },\n  3: {\n    min: 2,\n    max: 5\n  },\n  4: {\n    min: 3,\n    max: 8\n  },\n  5: {\n    min: 5,\n    max: 999\n  }\n};\nconst SkillDialog = ({\n  open,\n  onClose,\n  user,\n  allSkills,\n  onSave\n}) => {\n  _s();\n  const [selectedSkills, setSelectedSkills] = useState(user.skills || []);\n  const [newSkill, setNewSkill] = useState('');\n  const [newSkillLevel, setNewSkillLevel] = useState(3);\n  const [newSkillYears, setNewSkillYears] = useState(1);\n  const [validationError, setValidationError] = useState('');\n  const validateSkillLevel = (level, years) => {\n    const rule = yearsOfExperienceRules[level];\n    if (!rule) return \"Invalid skill level\";\n    if (years < rule.min) {\n      return `Level ${level} requires at least ${rule.min} year${rule.min !== 1 ? 's' : ''} of experience`;\n    }\n    if (years > rule.max) {\n      return `Level ${level} typically has up to ${rule.max} year${rule.max !== 1 ? 's' : ''} of experience`;\n    }\n    return null;\n  };\n  const handleAddSkill = () => {\n    if (!newSkill) return;\n    if (selectedSkills.some(skill => skill.skillId === newSkill)) {\n      setValidationError('This skill has already been added');\n      return;\n    }\n    const validationError = validateSkillLevel(newSkillLevel, newSkillYears);\n    if (validationError) {\n      setValidationError(validationError);\n      return;\n    }\n    setSelectedSkills(prev => [...prev, {\n      skillId: newSkill,\n      level: newSkillLevel,\n      yearsOfExperience: newSkillYears\n    }]);\n    setNewSkill('');\n    setNewSkillLevel(3);\n    setNewSkillYears(1);\n    setValidationError('');\n  };\n  useEffect(() => {\n    if (newSkillLevel && newSkillYears) {\n      const error = validateSkillLevel(newSkillLevel, newSkillYears);\n      setValidationError(error || '');\n    }\n  }, [newSkillLevel, newSkillYears]);\n  const handleRemoveSkill = skillId => {\n    setSelectedSkills(prev => prev.filter(skill => skill.skillId !== skillId));\n  };\n  const handleSave = () => {\n    onSave(user.id, selectedSkills);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    maxWidth: \"md\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: [\"Edit Skills - \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        sx: {\n          mt: 2\n        },\n        children: [validationError && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          onClose: () => setValidationError(''),\n          children: validationError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2,\n            alignItems: 'flex-end'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Add Skill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: newSkill,\n              label: \"Add Skill\",\n              onChange: e => setNewSkill(e.target.value),\n              children: allSkills.filter(skill => !selectedSkills.some(s => s.skillId === skill.id)).map(skill => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: skill.id,\n                children: [skill.name, \" (\", skill.category, \")\"]\n              }, skill.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              minWidth: 120\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"legend\",\n              children: \"Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: /*#__PURE__*/_jsxDEV(Box, {\n                children: Object.entries(skillLevelDescriptions).map(([level, desc]) => /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  display: \"block\",\n                  children: [level, \"\\u2605: \", desc]\n                }, level, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this),\n              arrow: true,\n              children: /*#__PURE__*/_jsxDEV(Rating, {\n                value: newSkillLevel,\n                onChange: (_, value) => {\n                  setNewSkillLevel(value || 3);\n                  setValidationError('');\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: `Years of experience required for level ${newSkillLevel}: \n               ${yearsOfExperienceRules[newSkillLevel].min}-\n               ${yearsOfExperienceRules[newSkillLevel].max} years`,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Years\",\n              type: \"number\",\n              value: newSkillYears,\n              onChange: e => {\n                const value = Number(e.target.value);\n                setNewSkillYears(value);\n                setValidationError('');\n              },\n              sx: {\n                width: 100\n              },\n              inputProps: {\n                min: yearsOfExperienceRules[newSkillLevel].min,\n                step: 1\n              },\n              error: !!validationError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleAddSkill,\n            disabled: !newSkill || !!validationError,\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 26\n            }, this),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 1,\n            flexWrap: 'wrap'\n          },\n          children: selectedSkills.map(userSkill => {\n            const skill = allSkills.find(s => s.id === userSkill.skillId);\n            return skill ? /*#__PURE__*/_jsxDEV(Chip, {\n              label: `${skill.name} (${userSkill.level}★, ${userSkill.yearsOfExperience}y)`,\n              onDelete: () => handleRemoveSkill(userSkill.skillId),\n              color: \"primary\"\n            }, userSkill.skillId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this) : null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSave,\n        variant: \"contained\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(SkillDialog, \"A4dFWLiu5XnKZ/OXQKPGDFVd+aQ=\");\n_c2 = SkillDialog;\nconst calculateSkillGaps = (users, skills, teams) => {\n  const gaps = {};\n\n  // Initialize gaps object\n  teams.forEach(team => {\n    gaps[team] = {};\n    skills.forEach(skill => {\n      gaps[team][skill.id] = 0;\n    });\n  });\n\n  // Calculate team sizes\n  const teamSizes = {};\n  teams.forEach(team => {\n    teamSizes[team] = users.filter(user => user.team === team).length;\n  });\n\n  // Count users with each skill per team\n  users.forEach(user => {\n    if (!user.team || !user.skills) return;\n    user.skills.forEach(userSkill => {\n      if (gaps[user.team] && gaps[user.team][userSkill.skillId] !== undefined) {\n        gaps[user.team][userSkill.skillId]++;\n      }\n    });\n  });\n\n  // Convert counts to percentages\n  teams.forEach(team => {\n    const teamSize = teamSizes[team];\n    if (teamSize > 0) {\n      Object.keys(gaps[team]).forEach(skillId => {\n        gaps[team][skillId] = gaps[team][skillId] / teamSize * 100;\n      });\n    }\n  });\n  return gaps;\n};\nconst getColorForPercentage = percentage => {\n  // Red for low coverage (0%), green for high coverage (100%)\n  const hue = percentage * 120 / 100; // 0 is red, 120 is green\n  return `hsl(${hue}, 70%, 50%)`;\n};\nconst SkillsMatrix = () => {\n  _s2();\n  const {\n    users,\n    setUsers\n  } = useUsers();\n  const [skills, setSkills] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [selectedSkills, setSelectedSkills] = useState([]);\n  const [selectedTeams, setSelectedTeams] = useState([]);\n  const [editingUser, setEditingUser] = useState(null);\n  const [tabValue, setTabValue] = useState(0);\n  const [reportFilterType, setReportFilterType] = useState('team');\n  const [reportSelectedTeams, setReportSelectedTeams] = useState([]);\n  const [reportSelectedSkills, setReportSelectedSkills] = useState([]);\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n  useEffect(() => {\n    const loadSkills = async () => {\n      const loadedSkills = await parseSkillsCSV();\n      console.log('Loaded skills:', loadedSkills);\n      setSkills(loadedSkills);\n      setCategories(getAllCategories(loadedSkills));\n    };\n    loadSkills();\n  }, []);\n  const teams = React.useMemo(() => {\n    const uniqueTeams = Array.from(new Set(users.map(user => user.team))).filter(Boolean);\n    console.log('Available teams:', uniqueTeams);\n    return uniqueTeams;\n  }, [users]);\n  const handleTeamToggle = team => {\n    setSelectedTeams(prev => {\n      const isSelected = prev.includes(team);\n      const newTeams = isSelected ? prev.filter(t => t !== team) : [...prev, team];\n      console.log('Toggling team:', team, 'Current selected:', prev, 'New selected:', newTeams);\n      return newTeams;\n    });\n  };\n  const filteredUsers = React.useMemo(() => {\n    console.log('Filtering users with teams:', selectedTeams);\n    return users.filter(user => {\n      var _user$skills;\n      const matchesTeam = selectedTeams.length === 0 || selectedTeams.includes(user.team);\n      const matchesSkills = selectedSkills.length === 0 || ((_user$skills = user.skills) === null || _user$skills === void 0 ? void 0 : _user$skills.some(userSkill => selectedSkills.includes(userSkill.skillId)));\n      console.log('User:', user.name, 'Team:', user.team, 'Matches team:', matchesTeam);\n      return matchesTeam && matchesSkills;\n    });\n  }, [users, selectedTeams, selectedSkills]);\n  const handleSkillsChange = (_event, newValue) => {\n    setSelectedSkills(newValue.map(skill => skill.id));\n  };\n  const handleUpdateUserSkills = (userId, newSkills) => {\n    const updatedUsers = users.map(user => user.id === userId ? {\n      ...user,\n      skills: newSkills\n    } : user);\n    setUsers(updatedUsers);\n  };\n  const filteredTeams = React.useMemo(() => {\n    return reportFilterType === 'team' && reportSelectedTeams.length > 0 ? teams.filter(team => reportSelectedTeams.includes(team)) : teams;\n  }, [teams, reportFilterType, reportSelectedTeams]);\n  const filteredSkills = React.useMemo(() => {\n    return reportFilterType === 'skill' && reportSelectedSkills.length > 0 ? skills.filter(skill => reportSelectedSkills.includes(skill.id)) : skills;\n  }, [skills, reportFilterType, reportSelectedSkills]);\n  const skillGaps = React.useMemo(() => {\n    return calculateSkillGaps(users, skills, teams);\n  }, [users, skills, teams]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Skills Matrix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        borderBottom: 1,\n        borderColor: 'divider',\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: tabValue,\n        onChange: handleTabChange,\n        \"aria-label\": \"skills matrix tabs\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Manage\",\n          ...a11yProps(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Report\",\n          ...a11yProps(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: tabValue,\n      index: 0,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3,\n          display: 'flex',\n          gap: 2,\n          flexWrap: 'wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            minWidth: 300\n          },\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            multiple: true,\n            value: skills.filter(skill => selectedSkills.includes(skill.id)),\n            onChange: handleSkillsChange,\n            options: skills,\n            getOptionLabel: option => `${option.name} (${option.category})`,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              label: \"Filter by Skills\",\n              placeholder: \"Search skills...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this),\n            renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsxDEV(Chip, {\n              label: option.name,\n              size: \"small\",\n              ...getTagProps({\n                index\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 19\n            }, this)),\n            renderOption: (props, option, {\n              selected\n            }) => /*#__PURE__*/_jsxDEV(\"li\", {\n              ...props,\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                style: {\n                  marginRight: 8\n                },\n                checked: selected\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  children: option.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: option.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this),\n            isOptionEqualToValue: (option, value) => option.id === value.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 1,\n            flexWrap: 'wrap',\n            alignItems: 'center'\n          },\n          children: teams.map(team => /*#__PURE__*/_jsxDEV(Chip, {\n            label: team,\n            onClick: () => handleTeamToggle(team),\n            color: selectedTeams.includes(team) ? 'primary' : 'default',\n            variant: selectedTeams.includes(team) ? 'filled' : 'outlined',\n            sx: {\n              cursor: 'pointer',\n              '&:hover': {\n                backgroundColor: theme => selectedTeams.includes(team) ? theme.palette.primary.dark : theme.palette.action.hover\n              },\n              transition: 'background-color 0.2s'\n            }\n          }, team, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Team\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Skills\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: filteredUsers.map(user => {\n              var _user$skills2;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Chip, {\n                    label: user.team,\n                    size: \"small\",\n                    color: \"primary\",\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 497,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      gap: 0.5,\n                      flexWrap: 'wrap'\n                    },\n                    children: (_user$skills2 = user.skills) === null || _user$skills2 === void 0 ? void 0 : _user$skills2.map(userSkill => {\n                      const skill = skills.find(s => s.id === userSkill.skillId);\n                      return skill ? /*#__PURE__*/_jsxDEV(Chip, {\n                        label: `${skill.name} (${userSkill.level}★, ${userSkill.yearsOfExperience}y)`,\n                        size: \"small\",\n                        variant: \"outlined\"\n                      }, userSkill.skillId, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 509,\n                        columnNumber: 29\n                      }, this) : null;\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => setEditingUser(user),\n                    size: \"small\",\n                    color: \"primary\",\n                    startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 524,\n                      columnNumber: 36\n                    }, this),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 21\n                }, this)]\n              }, user.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: tabValue,\n      index: 1,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '100%',\n          overflowX: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            mb: 2\n          },\n          children: \"Skills Gap Heatmap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            mb: 3\n          },\n          children: \"Percentage of team members with each skill. Higher percentages (green) indicate better coverage, lower percentages (red) indicate potential skill gaps.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3,\n            display: 'flex',\n            gap: 2,\n            alignItems: 'flex-start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              minWidth: 200\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Filter Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: reportFilterType,\n              label: \"Filter Type\",\n              onChange: e => {\n                setReportFilterType(e.target.value);\n                setReportSelectedTeams([]);\n                setReportSelectedSkills([]);\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"team\",\n                children: \"Filter by Team\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"skill\",\n                children: \"Filter by Skill\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this), reportFilterType === 'team' ? /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              minWidth: 300\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Select Teams\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              multiple: true,\n              value: reportSelectedTeams,\n              onChange: e => setReportSelectedTeams(typeof e.target.value === 'string' ? e.target.value.split(',') : e.target.value),\n              input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                label: \"Select Teams\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 26\n              }, this),\n              renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 0.5\n                },\n                children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: value,\n                  size: \"small\"\n                }, value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 21\n              }, this),\n              children: teams.map(team => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: team,\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: reportSelectedTeams.indexOf(team) > -1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: team\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 23\n                }, this)]\n              }, team, true, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              minWidth: 300\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Select Skills\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              multiple: true,\n              value: reportSelectedSkills,\n              onChange: e => setReportSelectedSkills(typeof e.target.value === 'string' ? e.target.value.split(',') : e.target.value),\n              input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                label: \"Select Skills\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 26\n              }, this),\n              renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 0.5\n                },\n                children: selected.map(value => {\n                  const skill = skills.find(s => s.id === value);\n                  return skill ? /*#__PURE__*/_jsxDEV(Chip, {\n                    label: skill.name,\n                    size: \"small\"\n                  }, value, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 598,\n                    columnNumber: 27\n                  }, this) : null;\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 21\n              }, this),\n              children: skills.map(skill => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: skill.id,\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: reportSelectedSkills.indexOf(skill.id) > -1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: `${skill.name} (${skill.category})`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 23\n                }, this)]\n              }, skill.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          sx: {\n            maxHeight: 600\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            stickyHeader: true,\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  sx: {\n                    minWidth: 200\n                  },\n                  children: \"Skill\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 619,\n                  columnNumber: 19\n                }, this), filteredTeams.map(team => /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  sx: {\n                    minWidth: 120\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Chip, {\n                    label: team,\n                    size: \"small\",\n                    color: \"primary\",\n                    variant: \"outlined\",\n                    sx: {\n                      mb: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 626,\n                    columnNumber: 23\n                  }, this)\n                }, team, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: filteredSkills.map(skill => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        fontWeight: 'medium'\n                      },\n                      children: skill.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 642,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"text.secondary\",\n                      children: skill.category\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 645,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 641,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 21\n                }, this), filteredTeams.map(team => {\n                  var _skillGaps$team;\n                  const percentage = ((_skillGaps$team = skillGaps[team]) === null || _skillGaps$team === void 0 ? void 0 : _skillGaps$team[skill.id]) || 0;\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    sx: {\n                      backgroundColor: getColorForPercentage(percentage),\n                      color: percentage > 50 ? 'black' : 'white',\n                      fontWeight: 'bold'\n                    },\n                    children: [percentage.toFixed(0), \"%\"]\n                  }, `${skill.id}-${team}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 653,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, skill.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 7\n    }, this), editingUser && /*#__PURE__*/_jsxDEV(SkillDialog, {\n      open: true,\n      onClose: () => setEditingUser(null),\n      user: editingUser,\n      allSkills: skills,\n      onSave: handleUpdateUserSkills\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 404,\n    columnNumber: 5\n  }, this);\n};\n_s2(SkillsMatrix, \"u4yww7xmauv7PlJj4dOULrAQv1U=\", false, function () {\n  return [useUsers];\n});\n_c3 = SkillsMatrix;\nexport default SkillsMatrix;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"SkillDialog\");\n$RefreshReg$(_c3, \"SkillsMatrix\");","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","Chip","TextField","FormControl","InputLabel","Select","MenuItem","Dialog","DialogTitle","DialogContent","DialogActions","Button","Rating","Stack","Tooltip","Alert","OutlinedInput","Checkbox","ListItemText","Autocomplete","Tabs","Tab","Add","AddIcon","Edit","EditIcon","parseSkillsCSV","getAllCategories","useUsers","jsxDEV","_jsxDEV","TabPanel","props","children","value","index","other","role","hidden","id","sx","py","fileName","_jsxFileName","lineNumber","columnNumber","_c","a11yProps","skillLevelDescriptions","yearsOfExperienceRules","min","max","SkillDialog","open","onClose","user","allSkills","onSave","_s","selectedSkills","setSelectedSkills","skills","newSkill","setNewSkill","newSkillLevel","setNewSkillLevel","newSkillYears","setNewSkillYears","validationError","setValidationError","validateSkillLevel","level","years","rule","handleAddSkill","some","skill","skillId","prev","yearsOfExperience","error","handleRemoveSkill","filter","handleSave","maxWidth","fullWidth","name","spacing","mt","severity","display","gap","alignItems","label","onChange","e","target","s","map","category","flexDirection","minWidth","component","title","Object","entries","desc","variant","arrow","_","type","Number","width","inputProps","step","onClick","disabled","startIcon","flexWrap","userSkill","find","onDelete","color","_c2","calculateSkillGaps","users","teams","gaps","forEach","team","teamSizes","length","undefined","teamSize","keys","getColorForPercentage","percentage","hue","SkillsMatrix","_s2","setUsers","setSkills","categories","setCategories","selectedCategory","setSelectedCategory","selectedTeams","setSelectedTeams","editingUser","setEditingUser","tabValue","setTabValue","reportFilterType","setReportFilterType","reportSelectedTeams","setReportSelectedTeams","reportSelectedSkills","setReportSelectedSkills","handleTabChange","event","newValue","loadSkills","loadedSkills","console","log","useMemo","uniqueTeams","Array","from","Set","Boolean","handleTeamToggle","isSelected","includes","newTeams","t","filteredUsers","_user$skills","matchesTeam","matchesSkills","handleSkillsChange","_event","handleUpdateUserSkills","userId","newSkills","updatedUsers","filteredTeams","filteredSkills","skillGaps","p","mb","justifyContent","borderBottom","borderColor","multiple","options","getOptionLabel","option","renderInput","params","placeholder","renderTags","getTagProps","size","renderOption","selected","style","marginRight","checked","isOptionEqualToValue","cursor","backgroundColor","theme","palette","primary","dark","action","hover","transition","align","_user$skills2","overflowX","split","input","renderValue","indexOf","maxHeight","stickyHeader","scope","fontWeight","_skillGaps$team","toFixed","_c3","$RefreshReg$"],"sources":["/Users/invotradesign/MYGitHub/CascadeProjects/site-users-app/peopledirectory-BU/src/components/SkillsMatrix.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  Chip,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Rating,\n  Stack,\n  Tooltip,\n  Alert,\n  OutlinedInput,\n  Checkbox,\n  ListItemText,\n  SelectChangeEvent,\n  ToggleButton,\n  Autocomplete,\n  Tabs,\n  Tab\n} from '@mui/material';\nimport { Add as AddIcon, Edit as EditIcon } from '@mui/icons-material';\nimport { parseSkillsCSV, SkillCSV, getSkillsByCategory, getAllCategories } from '../utils/skillsUtils';\nimport { useUsers } from './UserContext';\nimport { User, UserSkill } from '../types/User';\n\ninterface SkillDialogProps {\n  open: boolean;\n  onClose: () => void;\n  user: User;\n  allSkills: SkillCSV[];\n  onSave: (userId: number, newSkills: UserSkill[]) => void;\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`skills-tabpanel-${index}`}\n      aria-labelledby={`skills-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ py: 3 }}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `skills-tab-${index}`,\n    'aria-controls': `skills-tabpanel-${index}`,\n  };\n}\n\nconst skillLevelDescriptions = {\n  1: \"Beginner - Basic knowledge, needs guidance\",\n  2: \"Intermediate - Can work with supervision\",\n  3: \"Proficient - Works independently on most tasks\",\n  4: \"Advanced - Deep knowledge, can teach others\",\n  5: \"Expert - Subject matter expert, leads initiatives\"\n};\n\nconst yearsOfExperienceRules = {\n  1: { min: 0, max: 2 },\n  2: { min: 1, max: 3 },\n  3: { min: 2, max: 5 },\n  4: { min: 3, max: 8 },\n  5: { min: 5, max: 999 }\n};\n\nconst SkillDialog: React.FC<SkillDialogProps> = ({ open, onClose, user, allSkills, onSave }) => {\n  const [selectedSkills, setSelectedSkills] = useState<UserSkill[]>(user.skills || []);\n  const [newSkill, setNewSkill] = useState<string>('');\n  const [newSkillLevel, setNewSkillLevel] = useState<number>(3);\n  const [newSkillYears, setNewSkillYears] = useState<number>(1);\n  const [validationError, setValidationError] = useState<string>('');\n\n  const validateSkillLevel = (level: number, years: number): string | null => {\n    const rule = yearsOfExperienceRules[level as keyof typeof yearsOfExperienceRules];\n    if (!rule) return \"Invalid skill level\";\n    \n    if (years < rule.min) {\n      return `Level ${level} requires at least ${rule.min} year${rule.min !== 1 ? 's' : ''} of experience`;\n    }\n    if (years > rule.max) {\n      return `Level ${level} typically has up to ${rule.max} year${rule.max !== 1 ? 's' : ''} of experience`;\n    }\n    \n    return null;\n  };\n\n  const handleAddSkill = () => {\n    if (!newSkill) return;\n    \n    if (selectedSkills.some(skill => skill.skillId === newSkill)) {\n      setValidationError('This skill has already been added');\n      return;\n    }\n\n    const validationError = validateSkillLevel(newSkillLevel, newSkillYears);\n    if (validationError) {\n      setValidationError(validationError);\n      return;\n    }\n    \n    setSelectedSkills(prev => [\n      ...prev,\n      {\n        skillId: newSkill,\n        level: newSkillLevel,\n        yearsOfExperience: newSkillYears\n      }\n    ]);\n    \n    setNewSkill('');\n    setNewSkillLevel(3);\n    setNewSkillYears(1);\n    setValidationError('');\n  };\n\n  useEffect(() => {\n    if (newSkillLevel && newSkillYears) {\n      const error = validateSkillLevel(newSkillLevel, newSkillYears);\n      setValidationError(error || '');\n    }\n  }, [newSkillLevel, newSkillYears]);\n\n  const handleRemoveSkill = (skillId: string) => {\n    setSelectedSkills(prev => prev.filter(skill => skill.skillId !== skillId));\n  };\n\n  const handleSave = () => {\n    onSave(user.id, selectedSkills);\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\n      <DialogTitle>Edit Skills - {user.name}</DialogTitle>\n      <DialogContent>\n        <Stack spacing={3} sx={{ mt: 2 }}>\n          {validationError && (\n            <Alert severity=\"error\" onClose={() => setValidationError('')}>\n              {validationError}\n            </Alert>\n          )}\n          \n          <Box sx={{ display: 'flex', gap: 2, alignItems: 'flex-end' }}>\n            <FormControl fullWidth>\n              <InputLabel>Add Skill</InputLabel>\n              <Select\n                value={newSkill}\n                label=\"Add Skill\"\n                onChange={(e) => setNewSkill(e.target.value)}\n              >\n                {allSkills\n                  .filter(skill => !selectedSkills.some(s => s.skillId === skill.id))\n                  .map(skill => (\n                    <MenuItem key={skill.id} value={skill.id}>\n                      {skill.name} ({skill.category})\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', minWidth: 120 }}>\n              <Typography component=\"legend\">Level</Typography>\n              <Tooltip \n                title={\n                  <Box>\n                    {Object.entries(skillLevelDescriptions).map(([level, desc]) => (\n                      <Typography key={level} variant=\"caption\" display=\"block\">\n                        {level}★: {desc}\n                      </Typography>\n                    ))}\n                  </Box>\n                }\n                arrow\n              >\n                <Rating\n                  value={newSkillLevel}\n                  onChange={(_, value) => {\n                    setNewSkillLevel(value || 3);\n                    setValidationError('');\n                  }}\n                />\n              </Tooltip>\n            </Box>\n            <Tooltip title={\n              `Years of experience required for level ${newSkillLevel}: \n               ${yearsOfExperienceRules[newSkillLevel as keyof typeof yearsOfExperienceRules].min}-\n               ${yearsOfExperienceRules[newSkillLevel as keyof typeof yearsOfExperienceRules].max} years`\n            }>\n              <TextField\n                label=\"Years\"\n                type=\"number\"\n                value={newSkillYears}\n                onChange={(e) => {\n                  const value = Number(e.target.value);\n                  setNewSkillYears(value);\n                  setValidationError('');\n                }}\n                sx={{ width: 100 }}\n                inputProps={{ \n                  min: yearsOfExperienceRules[newSkillLevel as keyof typeof yearsOfExperienceRules].min,\n                  step: 1 \n                }}\n                error={!!validationError}\n              />\n            </Tooltip>\n            <Button\n              variant=\"contained\"\n              onClick={handleAddSkill}\n              disabled={!newSkill || !!validationError}\n              startIcon={<AddIcon />}\n            >\n              Add\n            </Button>\n          </Box>\n\n          <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n            {selectedSkills.map(userSkill => {\n              const skill = allSkills.find(s => s.id === userSkill.skillId);\n              return skill ? (\n                <Chip\n                  key={userSkill.skillId}\n                  label={`${skill.name} (${userSkill.level}★, ${userSkill.yearsOfExperience}y)`}\n                  onDelete={() => handleRemoveSkill(userSkill.skillId)}\n                  color=\"primary\"\n                />\n              ) : null;\n            })}\n          </Box>\n        </Stack>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button onClick={handleSave} variant=\"contained\">Save</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst calculateSkillGaps = (users: User[], skills: SkillCSV[], teams: string[]) => {\n  const gaps: Record<string, Record<string, number>> = {};\n\n  // Initialize gaps object\n  teams.forEach(team => {\n    gaps[team] = {};\n    skills.forEach(skill => {\n      gaps[team][skill.id] = 0;\n    });\n  });\n\n  // Calculate team sizes\n  const teamSizes: Record<string, number> = {};\n  teams.forEach(team => {\n    teamSizes[team] = users.filter(user => user.team === team).length;\n  });\n\n  // Count users with each skill per team\n  users.forEach(user => {\n    if (!user.team || !user.skills) return;\n    \n    user.skills.forEach(userSkill => {\n      if (gaps[user.team] && gaps[user.team][userSkill.skillId] !== undefined) {\n        gaps[user.team][userSkill.skillId]++;\n      }\n    });\n  });\n\n  // Convert counts to percentages\n  teams.forEach(team => {\n    const teamSize = teamSizes[team];\n    if (teamSize > 0) {\n      Object.keys(gaps[team]).forEach(skillId => {\n        gaps[team][skillId] = (gaps[team][skillId] / teamSize) * 100;\n      });\n    }\n  });\n\n  return gaps;\n};\n\nconst getColorForPercentage = (percentage: number): string => {\n  // Red for low coverage (0%), green for high coverage (100%)\n  const hue = (percentage * 120) / 100; // 0 is red, 120 is green\n  return `hsl(${hue}, 70%, 50%)`;\n};\n\nconst SkillsMatrix: React.FC = () => {\n  const { users, setUsers } = useUsers();\n  const [skills, setSkills] = useState<SkillCSV[]>([]);\n  const [categories, setCategories] = useState<string[]>([]);\n  const [selectedCategory, setSelectedCategory] = useState<string>('');\n  const [selectedSkills, setSelectedSkills] = useState<string[]>([]);\n  const [selectedTeams, setSelectedTeams] = useState<string[]>([]);\n  const [editingUser, setEditingUser] = useState<User | null>(null);\n  const [tabValue, setTabValue] = useState(0);\n  const [reportFilterType, setReportFilterType] = useState<'team' | 'skill'>('team');\n  const [reportSelectedTeams, setReportSelectedTeams] = useState<string[]>([]);\n  const [reportSelectedSkills, setReportSelectedSkills] = useState<string[]>([]);\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setTabValue(newValue);\n  };\n\n  useEffect(() => {\n    const loadSkills = async () => {\n      const loadedSkills = await parseSkillsCSV();\n      console.log('Loaded skills:', loadedSkills);\n      setSkills(loadedSkills);\n      setCategories(getAllCategories(loadedSkills));\n    };\n    \n    loadSkills();\n  }, []);\n\n  const teams = React.useMemo(() => {\n    const uniqueTeams = Array.from(new Set(users.map(user => user.team))).filter(Boolean);\n    console.log('Available teams:', uniqueTeams);\n    return uniqueTeams;\n  }, [users]);\n\n  const handleTeamToggle = (team: string) => {\n    setSelectedTeams(prev => {\n      const isSelected = prev.includes(team);\n      const newTeams = isSelected \n        ? prev.filter(t => t !== team)\n        : [...prev, team];\n      console.log('Toggling team:', team, 'Current selected:', prev, 'New selected:', newTeams);\n      return newTeams;\n    });\n  };\n\n  const filteredUsers = React.useMemo(() => {\n    console.log('Filtering users with teams:', selectedTeams);\n    return users.filter(user => {\n      const matchesTeam = selectedTeams.length === 0 || selectedTeams.includes(user.team);\n      const matchesSkills = selectedSkills.length === 0 || \n        user.skills?.some(userSkill => selectedSkills.includes(userSkill.skillId));\n      \n      console.log('User:', user.name, 'Team:', user.team, 'Matches team:', matchesTeam);\n      return matchesTeam && matchesSkills;\n    });\n  }, [users, selectedTeams, selectedSkills]);\n\n  const handleSkillsChange = (_event: React.SyntheticEvent, newValue: SkillCSV[]) => {\n    setSelectedSkills(newValue.map(skill => skill.id));\n  };\n\n  const handleUpdateUserSkills = (userId: number, newSkills: UserSkill[]) => {\n    const updatedUsers = users.map((user: User) => \n      user.id === userId \n        ? { ...user, skills: newSkills }\n        : user\n    );\n    setUsers(updatedUsers);\n  };\n\n  const filteredTeams = React.useMemo(() => {\n    return reportFilterType === 'team' && reportSelectedTeams.length > 0\n      ? teams.filter(team => reportSelectedTeams.includes(team))\n      : teams;\n  }, [teams, reportFilterType, reportSelectedTeams]);\n\n  const filteredSkills = React.useMemo(() => {\n    return reportFilterType === 'skill' && reportSelectedSkills.length > 0\n      ? skills.filter(skill => reportSelectedSkills.includes(skill.id))\n      : skills;\n  }, [skills, reportFilterType, reportSelectedSkills]);\n\n  const skillGaps = React.useMemo(() => {\n    return calculateSkillGaps(users, skills, teams);\n  }, [users, skills, teams]);\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Box sx={{ mb: 3, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Typography variant=\"h4\">Skills Matrix</Typography>\n      </Box>\n\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n        <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"skills matrix tabs\">\n          <Tab label=\"Manage\" {...a11yProps(0)} />\n          <Tab label=\"Report\" {...a11yProps(1)} />\n        </Tabs>\n      </Box>\n\n      <TabPanel value={tabValue} index={0}>\n        <Box sx={{ mb: 3, display: 'flex', gap: 2, flexWrap: 'wrap' }}>\n          <FormControl sx={{ minWidth: 300 }}>\n            <Autocomplete\n              multiple\n              value={skills.filter(skill => selectedSkills.includes(skill.id))}\n              onChange={handleSkillsChange}\n              options={skills}\n              getOptionLabel={(option) => `${option.name} (${option.category})`}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Filter by Skills\"\n                  placeholder=\"Search skills...\"\n                />\n              )}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    label={option.name}\n                    size=\"small\"\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderOption={(props, option, { selected }) => (\n                <li {...props}>\n                  <Checkbox\n                    style={{ marginRight: 8 }}\n                    checked={selected}\n                  />\n                  <Box>\n                    <Typography>{option.name}</Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {option.category}\n                    </Typography>\n                  </Box>\n                </li>\n              )}\n              isOptionEqualToValue={(option, value) => option.id === value.id}\n            />\n          </FormControl>\n\n          <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap', alignItems: 'center' }}>\n            {teams.map(team => (\n              <Chip\n                key={team}\n                label={team}\n                onClick={() => handleTeamToggle(team)}\n                color={selectedTeams.includes(team) ? 'primary' : 'default'}\n                variant={selectedTeams.includes(team) ? 'filled' : 'outlined'}\n                sx={{ \n                  cursor: 'pointer',\n                  '&:hover': {\n                    backgroundColor: theme => selectedTeams.includes(team) \n                      ? theme.palette.primary.dark \n                      : theme.palette.action.hover\n                  },\n                  transition: 'background-color 0.2s'\n                }}\n              />\n            ))}\n          </Box>\n        </Box>\n\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>User</TableCell>\n                <TableCell>Team</TableCell>\n                <TableCell>Skills</TableCell>\n                <TableCell align=\"right\">Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {filteredUsers\n                .map((user) => (\n                  <TableRow key={user.id}>\n                    <TableCell>{user.name}</TableCell>\n                    <TableCell>\n                      <Chip \n                        label={user.team} \n                        size=\"small\"\n                        color=\"primary\"\n                        variant=\"outlined\"\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Box sx={{ display: 'flex', gap: 0.5, flexWrap: 'wrap' }}>\n                        {user.skills?.map(userSkill => {\n                          const skill = skills.find(s => s.id === userSkill.skillId);\n                          return skill ? (\n                            <Chip\n                              key={userSkill.skillId}\n                              label={`${skill.name} (${userSkill.level}★, ${userSkill.yearsOfExperience}y)`}\n                              size=\"small\"\n                              variant=\"outlined\"\n                            />\n                          ) : null;\n                        })}\n                      </Box>\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <Button\n                        onClick={() => setEditingUser(user)}\n                        size=\"small\"\n                        color=\"primary\"\n                        startIcon={<EditIcon />}\n                      >\n                        Edit\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </TabPanel>\n\n      <TabPanel value={tabValue} index={1}>\n        <Box sx={{ width: '100%', overflowX: 'auto' }}>\n          <Typography variant=\"h6\" sx={{ mb: 2 }}>Skills Gap Heatmap</Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n            Percentage of team members with each skill. Higher percentages (green) indicate better coverage, \n            lower percentages (red) indicate potential skill gaps.\n          </Typography>\n\n          <Box sx={{ mb: 3, display: 'flex', gap: 2, alignItems: 'flex-start' }}>\n            <FormControl sx={{ minWidth: 200 }}>\n              <InputLabel>Filter Type</InputLabel>\n              <Select\n                value={reportFilterType}\n                label=\"Filter Type\"\n                onChange={(e) => {\n                  setReportFilterType(e.target.value as 'team' | 'skill');\n                  setReportSelectedTeams([]);\n                  setReportSelectedSkills([]);\n                }}\n              >\n                <MenuItem value=\"team\">Filter by Team</MenuItem>\n                <MenuItem value=\"skill\">Filter by Skill</MenuItem>\n              </Select>\n            </FormControl>\n\n            {reportFilterType === 'team' ? (\n              <FormControl sx={{ minWidth: 300 }}>\n                <InputLabel>Select Teams</InputLabel>\n                <Select\n                  multiple\n                  value={reportSelectedTeams}\n                  onChange={(e) => setReportSelectedTeams(typeof e.target.value === 'string' ? e.target.value.split(',') : e.target.value)}\n                  input={<OutlinedInput label=\"Select Teams\" />}\n                  renderValue={(selected) => (\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                      {selected.map((value) => (\n                        <Chip key={value} label={value} size=\"small\" />\n                      ))}\n                    </Box>\n                  )}\n                >\n                  {teams.map((team) => (\n                    <MenuItem key={team} value={team}>\n                      <Checkbox checked={reportSelectedTeams.indexOf(team) > -1} />\n                      <ListItemText primary={team} />\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            ) : (\n              <FormControl sx={{ minWidth: 300 }}>\n                <InputLabel>Select Skills</InputLabel>\n                <Select\n                  multiple\n                  value={reportSelectedSkills}\n                  onChange={(e) => setReportSelectedSkills(typeof e.target.value === 'string' ? e.target.value.split(',') : e.target.value)}\n                  input={<OutlinedInput label=\"Select Skills\" />}\n                  renderValue={(selected) => (\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                      {selected.map((value) => {\n                        const skill = skills.find(s => s.id === value);\n                        return skill ? (\n                          <Chip key={value} label={skill.name} size=\"small\" />\n                        ) : null;\n                      })}\n                    </Box>\n                  )}\n                >\n                  {skills.map((skill) => (\n                    <MenuItem key={skill.id} value={skill.id}>\n                      <Checkbox checked={reportSelectedSkills.indexOf(skill.id) > -1} />\n                      <ListItemText primary={`${skill.name} (${skill.category})`} />\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            )}\n          </Box>\n          \n          <TableContainer component={Paper} sx={{ maxHeight: 600 }}>\n            <Table stickyHeader size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell sx={{ minWidth: 200 }}>Skill</TableCell>\n                  {filteredTeams.map(team => (\n                    <TableCell \n                      key={team}\n                      align=\"center\"\n                      sx={{ minWidth: 120 }}\n                    >\n                      <Chip \n                        label={team}\n                        size=\"small\"\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        sx={{ mb: 1 }}\n                      />\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {filteredSkills.map(skill => (\n                  <TableRow key={skill.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Box>\n                        <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\n                          {skill.name}\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {skill.category}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                    {filteredTeams.map(team => {\n                      const percentage = skillGaps[team]?.[skill.id] || 0;\n                      return (\n                        <TableCell \n                          key={`${skill.id}-${team}`}\n                          align=\"center\"\n                          sx={{\n                            backgroundColor: getColorForPercentage(percentage),\n                            color: percentage > 50 ? 'black' : 'white',\n                            fontWeight: 'bold'\n                          }}\n                        >\n                          {percentage.toFixed(0)}%\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n      </TabPanel>\n\n      {editingUser && (\n        <SkillDialog\n          open={true}\n          onClose={() => setEditingUser(null)}\n          user={editingUser}\n          allSkills={skills}\n          onSave={handleUpdateUserSkills}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default SkillsMatrix;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}