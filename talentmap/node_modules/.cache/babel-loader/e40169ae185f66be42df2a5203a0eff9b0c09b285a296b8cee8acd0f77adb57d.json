{"ast":null,"code":"var _jsxFileName = \"/Users/invotradesign/MYGitHub/CascadeProjects/peopledirectory/src/components/UserContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext(undefined);\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  // Initialize users from localStorage or fallback to empty array\n  const [users, setUsers] = useState(() => {\n    try {\n      const savedUsers = localStorage.getItem('users');\n      return savedUsers ? JSON.parse(savedUsers) : [];\n    } catch (error) {\n      console.error('Error loading users from localStorage:', error);\n      return [];\n    }\n  });\n\n  // Save users to localStorage whenever they change\n  useEffect(() => {\n    try {\n      localStorage.setItem('users', JSON.stringify(users));\n    } catch (error) {\n      console.error('Error saving users to localStorage:', error);\n    }\n  }, [users]);\n  const addUsers = newUsers => {\n    setUsers(prevUsers => {\n      const updatedUsers = [...prevUsers];\n      newUsers.forEach(newUser => {\n        const existingUserIndex = updatedUsers.findIndex(user => user.name === newUser.name);\n        if (existingUserIndex !== -1) {\n          // Update existing user with new information\n          updatedUsers[existingUserIndex] = {\n            ...updatedUsers[existingUserIndex],\n            ...newUser,\n            // Preserve the existing ID\n            id: updatedUsers[existingUserIndex].id\n          };\n        } else {\n          // Add new user\n          updatedUsers.push(newUser);\n        }\n      });\n      return updatedUsers;\n    });\n  };\n  const saveUsers = () => {\n    try {\n      localStorage.setItem('users', JSON.stringify(users));\n    } catch (error) {\n      console.error('Error saving users:', error);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      users,\n      setUsers,\n      addUsers,\n      saveUsers\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"7sF5IbW1IK1m5vHPNMxZDVdWHvw=\");\n_c = UserProvider;\nexport const useUsers = () => {\n  _s2();\n  const context = useContext(UserContext);\n  if (context === undefined) {\n    throw new Error('useUsers must be used within a UserProvider');\n  }\n  return context;\n};\n_s2(useUsers, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","undefined","UserProvider","children","_s","users","setUsers","savedUsers","localStorage","getItem","JSON","parse","error","console","setItem","stringify","addUsers","newUsers","prevUsers","updatedUsers","forEach","newUser","existingUserIndex","findIndex","user","name","id","push","saveUsers","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUsers","_s2","context","Error","$RefreshReg$"],"sources":["/Users/invotradesign/MYGitHub/CascadeProjects/peopledirectory/src/components/UserContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { User } from '../types/User';\n\ninterface UserContextType {\n  users: User[];\n  setUsers: (users: User[]) => void;\n  addUsers: (newUsers: User[]) => void;\n  saveUsers: () => void;\n}\n\nconst UserContext = createContext<UserContextType | undefined>(undefined);\n\nexport const UserProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  // Initialize users from localStorage or fallback to empty array\n  const [users, setUsers] = useState<User[]>(() => {\n    try {\n      const savedUsers = localStorage.getItem('users');\n      return savedUsers ? JSON.parse(savedUsers) : [];\n    } catch (error) {\n      console.error('Error loading users from localStorage:', error);\n      return [];\n    }\n  });\n\n  // Save users to localStorage whenever they change\n  useEffect(() => {\n    try {\n      localStorage.setItem('users', JSON.stringify(users));\n    } catch (error) {\n      console.error('Error saving users to localStorage:', error);\n    }\n  }, [users]);\n\n  const addUsers = (newUsers: User[]) => {\n    setUsers(prevUsers => {\n      const updatedUsers = [...prevUsers];\n      \n      newUsers.forEach(newUser => {\n        const existingUserIndex = updatedUsers.findIndex(user => user.name === newUser.name);\n        \n        if (existingUserIndex !== -1) {\n          // Update existing user with new information\n          updatedUsers[existingUserIndex] = {\n            ...updatedUsers[existingUserIndex],\n            ...newUser,\n            // Preserve the existing ID\n            id: updatedUsers[existingUserIndex].id\n          };\n        } else {\n          // Add new user\n          updatedUsers.push(newUser);\n        }\n      });\n      \n      return updatedUsers;\n    });\n  };\n\n  const saveUsers = () => {\n    try {\n      localStorage.setItem('users', JSON.stringify(users));\n    } catch (error) {\n      console.error('Error saving users:', error);\n      throw error;\n    }\n  };\n\n  return (\n    <UserContext.Provider value={{ users, setUsers, addUsers, saveUsers }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport const useUsers = () => {\n  const context = useContext(UserContext);\n  if (context === undefined) {\n    throw new Error('useUsers must be used within a UserProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}