{"version":3,"file":"static/js/203.5779436c.chunk.js","mappings":"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","sources":["views/admin/InvotraAdmin.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Grid,\n  Switch,\n  FormControlLabel,\n  Divider,\n  Button,\n  Stack,\n  IconButton,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControl,\n} from \"@mui/material\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { useTheme } from \"../../contexts/ThemeContext\";\nimport { useAuthBackground } from \"../../contexts/AuthBackgroundContext\";\nimport LoginIcon from '@mui/icons-material/Login';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ImageIcon from '@mui/icons-material/Image';\nimport PaletteIcon from '@mui/icons-material/Palette';\n\nconst InvotraAdmin = () => {\n  const { currentUser } = useAuth();\n  const { currentTheme, setTheme, unsavedChanges, saveTheme } = useTheme();\n  const { \n    showBackground, \n    setShowBackground,\n    isModal, \n    setIsModal,\n    isTwoColumn, \n    setIsTwoColumn,\n    customImage, \n    setCustomImage,\n    unsavedChanges: backgroundUnsavedChanges,\n    saveChanges: saveBackgroundChanges\n  } = useAuthBackground();\n\n  const themeOptions = [\n    { value: 'light', label: 'Light Theme' },\n    { value: 'modern', label: 'Modern Theme' },\n    { value: 'dark', label: 'Dark Theme' },\n  ];\n\n  const handleImageUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setCustomImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleThemeChange = (event) => {\n    setTheme(event.target.value);\n  };\n\n  const handleLoginStyleChange = (event) => {\n    const value = event.target.value;\n    if (value === 'modal') {\n      setShowBackground(true);\n      setIsModal(true);\n      setIsTwoColumn(false);\n    } else if (value === 'twocolumn') {\n      setShowBackground(true);\n      setIsModal(false);\n      setIsTwoColumn(true);\n    } else {\n      setShowBackground(true);\n      setIsModal(false);\n      setIsTwoColumn(false);\n    }\n  };\n\n  return (\n    <Box p={3}>\n      <Typography variant=\"h2\" gutterBottom sx={{ mb: 2 }}>\n        Admin Panel\n      </Typography>\n      \n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                <LoginIcon color=\"primary\" sx={{ width: 32, height: 32, mr: 2 }} />\n                <Typography variant=\"h5\">Login/Signup Settings</Typography>\n              </Box>\n              <Divider sx={{ mb: 3 }} />\n              \n              <Stack spacing={3}>\n                <Box>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={showBackground}\n                        onChange={(e) => setShowBackground(e.target.checked)}\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Show Image\"\n                  />\n                  \n                  <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mt: 1 }}>\n                    Toggle to show or hide image on login and signup screens\n                  </Typography>\n                </Box>\n\n                <Box>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    Preview\n                  </Typography>\n                  <Box \n                    sx={{ \n                      border: '2px dashed',\n                      borderColor: 'divider',\n                      borderRadius: 1,\n                      p: 3,\n                      textAlign: 'center',\n                      bgcolor: 'background.default',\n                      position: 'relative',\n                      cursor: 'pointer',\n                    }}\n                  >\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={handleImageUpload}\n                      style={{\n                        position: 'absolute',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        opacity: 0,\n                        cursor: 'pointer',\n                      }}\n                    />\n                    {customImage ? (\n                      <Box sx={{ maxWidth: '400px', margin: '0 auto' }}>\n                        <Box\n                          component=\"img\"\n                          src={customImage}\n                          alt=\"Custom background\"\n                          sx={{\n                            width: '100%',\n                            aspectRatio: '4/3',\n                            objectFit: 'cover',\n                            borderRadius: 1,\n                          }}\n                        />\n                        <IconButton\n                          color=\"error\"\n                          onClick={() => setCustomImage(null)}\n                          sx={{ position: 'absolute', top: 8, right: 8, bgcolor: 'background.paper' }}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      </Box>\n                    ) : (\n                      <Box>\n                        <ImageIcon sx={{ fontSize: 48, color: 'text.secondary', mb: 1 }} />\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          Click to upload a custom background image\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"textSecondary\" display=\"block\">\n                          Recommended size: 1920x1080px\n                        </Typography>\n                      </Box>\n                    )}\n                  </Box>\n                </Box>\n\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\">Login Style</FormLabel>\n                  <RadioGroup\n                    aria-label=\"login-style\"\n                    name=\"login-style\"\n                    value={isModal ? 'modal' : isTwoColumn ? 'twocolumn' : 'default'}\n                    onChange={(e) => {\n                      const value = e.target.value;\n                      if (value === 'modal') {\n                        setShowBackground(true);\n                        setIsModal(true);\n                        setIsTwoColumn(false);\n                      } else if (value === 'twocolumn') {\n                        setShowBackground(true);\n                        setIsModal(false);\n                        setIsTwoColumn(true);\n                      } else {\n                        setShowBackground(true);\n                        setIsModal(false);\n                        setIsTwoColumn(false);\n                      }\n                    }}\n                  >\n                    <FormControlLabel\n                      value=\"default\"\n                      control={<Radio />}\n                      label=\"Default\"\n                    />\n                    <FormControlLabel\n                      value=\"modal\"\n                      control={<Radio />}\n                      label=\"Modal style\"\n                    />\n                    <FormControlLabel\n                      value=\"twocolumn\"\n                      control={<Radio />}\n                      label=\"Two column\"\n                    />\n                  </RadioGroup>\n                </FormControl>\n\n                <Box>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<SaveIcon />}\n                    onClick={saveBackgroundChanges}\n                    disabled={!backgroundUnsavedChanges}\n                  >\n                    Save Changes\n                  </Button>\n                  {backgroundUnsavedChanges && (\n                    <Typography variant=\"caption\" color=\"warning.main\" sx={{ ml: 2 }}>\n                      You have unsaved changes\n                    </Typography>\n                  )}\n                </Box>\n              </Stack>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Theme Selection Card */}\n        <Grid item xs={12} md={6}>\n          <Card sx={{ height: '100%' }}>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                <IconButton color=\"primary\" sx={{ width: 32, height: 32, mr: 2 }}>\n                  <PaletteIcon />\n                </IconButton>\n                <Typography variant=\"h5\">Theme Settings</Typography>\n              </Box>\n              <Divider sx={{ mb: 3 }} />\n              \n              <RadioGroup\n                aria-label=\"theme\"\n                name=\"theme\"\n                value={currentTheme}\n                onChange={handleThemeChange}\n              >\n                {themeOptions.map((option) => (\n                  <FormControlLabel \n                    key={option.value}\n                    value={option.value} \n                    control={<Radio />} \n                    label={option.label}\n                    sx={{ mb: 2 }}\n                  />\n                ))}\n              </RadioGroup>\n              \n              <Box mt={3}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<SaveIcon />}\n                  onClick={saveTheme}\n                  disabled={!unsavedChanges}\n                >\n                  Save Changes\n                </Button>\n                {unsavedChanges && (\n                  <Typography variant=\"caption\" color=\"warning.main\" sx={{ ml: 2 }}>\n                    You have unsaved changes\n                  </Typography>\n                )}\n              </Box>\n              \n              <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mt: 2 }}>\n                Select your preferred theme style. Changes will be saved and persisted.\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default InvotraAdmin;\n"],"names":["useAuth","currentUser","_useTheme","useTheme","currentTheme","setTheme","unsavedChanges","saveTheme","_useAuthBackground","useAuthBackground","showBackground","setShowBackground","isModal","setIsModal","isTwoColumn","setIsTwoColumn","customImage","setCustomImage","backgroundUnsavedChanges","saveBackgroundChanges","saveChanges","_jsxs","Box","p","children","_jsx","Typography","variant","gutterBottom","sx","mb","Grid","container","spacing","item","xs","md","Card","CardContent","display","alignItems","LoginIcon","color","width","height","mr","Divider","Stack","FormControlLabel","control","Switch","checked","onChange","e","target","label","mt","border","borderColor","borderRadius","textAlign","bgcolor","position","cursor","type","accept","event","file","files","reader","FileReader","onloadend","result","readAsDataURL","style","top","left","opacity","maxWidth","margin","component","src","alt","aspectRatio","objectFit","IconButton","onClick","right","DeleteIcon","ImageIcon","fontSize","FormControl","FormLabel","RadioGroup","name","value","Radio","Button","startIcon","SaveIcon","disabled","ml","PaletteIcon","map","option"],"sourceRoot":""}