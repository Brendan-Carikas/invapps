{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport G6 from '@antv/g6';\nimport baseEdge from './baseEdge';\nexport var registerConvLine = function () {\n  // 自定义转化边\n  G6.registerEdge('conv-line', __assign(__assign({}, baseEdge), {\n    draw: function (cfg, group) {\n      var startPoint = cfg.startPoint,\n        endPoint = cfg.endPoint;\n      // 直线，线条样式、箭头自定义\n      var path = [['M', startPoint.x, startPoint.y], ['L', endPoint.x, endPoint.y]];\n      return baseEdge.draw(cfg, group, path);\n    }\n  }));\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","G6","baseEdge","registerConvLine","registerEdge","draw","cfg","group","startPoint","endPoint","path","x","y"],"sources":["/Users/invotradesign/CascadeProjects/site-users-app/node_modules/@ant-design/graphs/es/components/conversion-dagre-graph/edges/convLine.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport G6 from '@antv/g6';\nimport baseEdge from './baseEdge';\nexport var registerConvLine = function () {\n    // 自定义转化边\n    G6.registerEdge('conv-line', __assign(__assign({}, baseEdge), { draw: function (cfg, group) {\n            var startPoint = cfg.startPoint, endPoint = cfg.endPoint;\n            // 直线，线条样式、箭头自定义\n            var path = [\n                ['M', startPoint.x, startPoint.y],\n                ['L', endPoint.x, endPoint.y],\n            ];\n            return baseEdge.draw(cfg, group, path);\n        } }));\n};\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,OAAOO,EAAE,MAAM,UAAU;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,IAAIC,gBAAgB,GAAG,SAAAA,CAAA,EAAY;EACtC;EACAF,EAAE,CAACG,YAAY,CAAC,WAAW,EAAEjB,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEe,QAAQ,CAAC,EAAE;IAAEG,IAAI,EAAE,SAAAA,CAAUC,GAAG,EAAEC,KAAK,EAAE;MACpF,IAAIC,UAAU,GAAGF,GAAG,CAACE,UAAU;QAAEC,QAAQ,GAAGH,GAAG,CAACG,QAAQ;MACxD;MACA,IAAIC,IAAI,GAAG,CACP,CAAC,GAAG,EAAEF,UAAU,CAACG,CAAC,EAAEH,UAAU,CAACI,CAAC,CAAC,EACjC,CAAC,GAAG,EAAEH,QAAQ,CAACE,CAAC,EAAEF,QAAQ,CAACG,CAAC,CAAC,CAChC;MACD,OAAOV,QAAQ,CAACG,IAAI,CAACC,GAAG,EAAEC,KAAK,EAAEG,IAAI,CAAC;IAC1C;EAAE,CAAC,CAAC,CAAC;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}