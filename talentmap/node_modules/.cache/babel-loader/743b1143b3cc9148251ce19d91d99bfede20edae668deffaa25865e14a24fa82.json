{"ast":null,"code":"var _jsxFileName = \"/Users/invotradesign/CascadeProjects/site-users-app/src/components/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Grid, Paper, Typography, FormControl, InputLabel, Select, MenuItem, OutlinedInput } from '@mui/material';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Register ChartJS components\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\n// Mock data - using the same data as UserList component\nconst mockUsers = [{\n  id: 1,\n  name: 'John Doe',\n  team: 'Engineering',\n  location: 'New York',\n  jobRole: 'Software Engineer',\n  imageUrl: ''\n}, {\n  id: 2,\n  name: 'Jane Smith',\n  team: 'Design',\n  location: 'San Francisco',\n  jobRole: 'UI Designer',\n  imageUrl: ''\n}, {\n  id: 3,\n  name: 'Mike Johnson',\n  team: 'Marketing',\n  location: 'London',\n  jobRole: 'Marketing Manager',\n  imageUrl: ''\n}, {\n  id: 4,\n  name: 'Sarah Williams',\n  team: 'Engineering',\n  location: 'Berlin',\n  jobRole: 'Frontend Developer',\n  imageUrl: ''\n}, {\n  id: 5,\n  name: 'Tom Brown',\n  team: 'Product',\n  location: 'Toronto',\n  jobRole: 'Product Manager',\n  imageUrl: ''\n}, {\n  id: 6,\n  name: 'Emily Davis',\n  team: 'Engineering',\n  location: 'Sydney',\n  jobRole: 'Backend Developer',\n  imageUrl: ''\n}, {\n  id: 7,\n  name: 'David Wilson',\n  team: 'Design',\n  location: 'Paris',\n  jobRole: 'UX Designer',\n  imageUrl: ''\n}, {\n  id: 8,\n  name: 'Lisa Anderson',\n  team: 'Marketing',\n  location: 'Tokyo',\n  jobRole: 'Content Strategist',\n  imageUrl: ''\n}, {\n  id: 9,\n  name: 'James Taylor',\n  team: 'Product',\n  location: 'Singapore',\n  jobRole: 'Product Owner',\n  imageUrl: ''\n}, {\n  id: 10,\n  name: 'Maria Garcia',\n  team: 'Engineering',\n  location: 'Madrid',\n  jobRole: 'DevOps Engineer',\n  imageUrl: ''\n}, {\n  id: 11,\n  name: 'Robert Martinez',\n  team: 'Design',\n  location: 'Barcelona',\n  jobRole: 'Visual Designer',\n  imageUrl: ''\n}, {\n  id: 12,\n  name: 'Jennifer Lee',\n  team: 'Marketing',\n  location: 'Seoul',\n  jobRole: 'Marketing Specialist',\n  imageUrl: ''\n}];\nconst Dashboard = () => {\n  _s();\n  // Process data for Roles by Location\n  const rolesByLocation = mockUsers.reduce((acc, user) => {\n    if (!acc[user.jobRole]) {\n      acc[user.jobRole] = {};\n    }\n    acc[user.jobRole][user.location] = (acc[user.jobRole][user.location] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Process data for Roles by Team\n  const rolesByTeam = mockUsers.reduce((acc, user) => {\n    if (!acc[user.jobRole]) {\n      acc[user.jobRole] = {};\n    }\n    acc[user.jobRole][user.team] = (acc[user.jobRole][user.team] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Process data for Teams by Location\n  const teamsByLocation = mockUsers.reduce((acc, user) => {\n    if (!acc[user.team]) {\n      acc[user.team] = {};\n    }\n    acc[user.team][user.location] = (acc[user.team][user.location] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Add state for legend visibility\n  const [roleLocationVisibility, setRoleLocationVisibility] = useState({});\n  const [roleTeamVisibility, setRoleTeamVisibility] = useState({});\n  const [teamLocationVisibility, setTeamLocationVisibility] = useState({});\n\n  // Initialize visibility state when data changes\n  React.useEffect(() => {\n    const initVisibility = data => Object.keys(data).reduce((acc, key) => ({\n      ...acc,\n      [key]: true\n    }), {});\n    setRoleLocationVisibility(initVisibility(rolesByLocation));\n    setRoleTeamVisibility(initVisibility(rolesByTeam));\n    setTeamLocationVisibility(initVisibility(teamsByLocation));\n  }, []);\n\n  // Generate random colors\n  const generateColors = count => {\n    return Array.from({\n      length: count\n    }, (_, i) => `hsl(${i * 360 / count}, 70%, 50%)`);\n  };\n\n  // Custom legend components\n  const LegendSelect = ({\n    items,\n    visibility,\n    setVisibility,\n    title\n  }) => {\n    const handleChange = event => {\n      const selectedItems = event.target.value;\n      const newVisibility = items.reduce((acc, item) => ({\n        ...acc,\n        [item]: selectedItems.includes(item)\n      }), {});\n      setVisibility(newVisibility);\n    };\n    const selectedItems = Object.entries(visibility).filter(([_, isVisible]) => isVisible).map(([item]) => item);\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          multiple: true,\n          value: selectedItems,\n          onChange: handleChange,\n          input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            label: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 20\n          }, this),\n          renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 0.5\n            },\n            children: selected.map(value => /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                mr: 0.5\n              },\n              children: value\n            }, value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this),\n          MenuProps: {\n            PaperProps: {\n              style: {\n                maxHeight: 224,\n                width: 250\n              }\n            }\n          },\n          children: items.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: item,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              component: \"span\",\n              sx: {\n                width: 14,\n                height: 14,\n                mr: 1,\n                backgroundColor: generateColors(items.length)[items.indexOf(item)],\n                display: 'inline-block',\n                borderRadius: '2px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), item]\n          }, item, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Update chart options with custom legend\n  const getChartOptions = title => ({\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false // Hide default legend\n      },\n      title: {\n        display: true,\n        text: title,\n        padding: {\n          bottom: 10\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          stepSize: 1\n        }\n      }\n    }\n  });\n\n  // Filter datasets based on visibility\n  const rolesByLocationData = {\n    labels: Array.from(new Set(mockUsers.map(user => user.location))),\n    datasets: Object.entries(rolesByLocation).filter(([role]) => roleLocationVisibility[role] !== false).map(([role, locations], index) => ({\n      label: role,\n      data: Object.values(locations),\n      backgroundColor: generateColors(Object.keys(rolesByLocation).length)[index]\n    }))\n  };\n  const rolesByTeamData = {\n    labels: Array.from(new Set(mockUsers.map(user => user.team))),\n    datasets: Object.entries(rolesByTeam).filter(([role]) => roleTeamVisibility[role] !== false).map(([role, teams], index) => ({\n      label: role,\n      data: Object.values(teams),\n      backgroundColor: generateColors(Object.keys(rolesByTeam).length)[index]\n    }))\n  };\n  const teamsByLocationData = {\n    labels: Array.from(new Set(mockUsers.map(user => user.location))),\n    datasets: Object.entries(teamsByLocation).filter(([team]) => teamLocationVisibility[team] !== false).map(([team, locations], index) => ({\n      label: team,\n      data: Object.values(locations),\n      backgroundColor: generateColors(Object.keys(teamsByLocation).length)[index]\n    }))\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Analytics Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 320\n            },\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: rolesByLocationData,\n              options: getChartOptions('Roles by Location')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LegendSelect, {\n            items: Object.keys(rolesByLocation),\n            visibility: roleLocationVisibility,\n            setVisibility: setRoleLocationVisibility,\n            title: \"Select Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 320\n            },\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: rolesByTeamData,\n              options: getChartOptions('Roles by Team')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LegendSelect, {\n            items: Object.keys(rolesByTeam),\n            visibility: roleTeamVisibility,\n            setVisibility: setRoleTeamVisibility,\n            title: \"Select Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 320\n            },\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: teamsByLocationData,\n              options: getChartOptions('Teams by Location')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LegendSelect, {\n            items: Object.keys(teamsByLocation),\n            visibility: teamLocationVisibility,\n            setVisibility: setTeamLocationVisibility,\n            title: \"Select Teams\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"XV8C2F2IMkkZc5G97WH7hfLPArs=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Box","Grid","Paper","Typography","FormControl","InputLabel","Select","MenuItem","OutlinedInput","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","mockUsers","id","name","team","location","jobRole","imageUrl","Dashboard","_s","rolesByLocation","reduce","acc","user","rolesByTeam","teamsByLocation","roleLocationVisibility","setRoleLocationVisibility","roleTeamVisibility","setRoleTeamVisibility","teamLocationVisibility","setTeamLocationVisibility","useEffect","initVisibility","data","Object","keys","key","generateColors","count","Array","from","length","_","i","LegendSelect","items","visibility","setVisibility","title","handleChange","event","selectedItems","target","value","newVisibility","item","includes","entries","filter","isVisible","map","sx","mt","children","fullWidth","size","fileName","_jsxFileName","lineNumber","columnNumber","multiple","onChange","input","label","renderValue","selected","display","flexWrap","gap","variant","mr","MenuProps","PaperProps","style","maxHeight","width","component","height","backgroundColor","indexOf","borderRadius","getChartOptions","responsive","maintainAspectRatio","plugins","legend","text","padding","bottom","scales","y","beginAtZero","ticks","stepSize","rolesByLocationData","labels","Set","datasets","role","locations","index","values","rolesByTeamData","teams","teamsByLocationData","flexGrow","p","gutterBottom","container","spacing","xs","md","options","_c","$RefreshReg$"],"sources":["/Users/invotradesign/CascadeProjects/site-users-app/src/components/Dashboard.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Grid, Paper, Typography, FormControl, InputLabel, Select, MenuItem, OutlinedInput, FormGroup, FormControlLabel, Checkbox } from '@mui/material';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { User } from '../types/User';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n// Mock data - using the same data as UserList component\nconst mockUsers: User[] = [\n  { id: 1, name: 'John Doe', team: 'Engineering', location: 'New York', jobRole: 'Software Engineer', imageUrl: '' },\n  { id: 2, name: 'Jane Smith', team: 'Design', location: 'San Francisco', jobRole: 'UI Designer', imageUrl: '' },\n  { id: 3, name: 'Mike Johnson', team: 'Marketing', location: 'London', jobRole: 'Marketing Manager', imageUrl: '' },\n  { id: 4, name: 'Sarah Williams', team: 'Engineering', location: 'Berlin', jobRole: 'Frontend Developer', imageUrl: '' },\n  { id: 5, name: 'Tom Brown', team: 'Product', location: 'Toronto', jobRole: 'Product Manager', imageUrl: '' },\n  { id: 6, name: 'Emily Davis', team: 'Engineering', location: 'Sydney', jobRole: 'Backend Developer', imageUrl: '' },\n  { id: 7, name: 'David Wilson', team: 'Design', location: 'Paris', jobRole: 'UX Designer', imageUrl: '' },\n  { id: 8, name: 'Lisa Anderson', team: 'Marketing', location: 'Tokyo', jobRole: 'Content Strategist', imageUrl: '' },\n  { id: 9, name: 'James Taylor', team: 'Product', location: 'Singapore', jobRole: 'Product Owner', imageUrl: '' },\n  { id: 10, name: 'Maria Garcia', team: 'Engineering', location: 'Madrid', jobRole: 'DevOps Engineer', imageUrl: '' },\n  { id: 11, name: 'Robert Martinez', team: 'Design', location: 'Barcelona', jobRole: 'Visual Designer', imageUrl: '' },\n  { id: 12, name: 'Jennifer Lee', team: 'Marketing', location: 'Seoul', jobRole: 'Marketing Specialist', imageUrl: '' }\n];\n\nconst Dashboard: React.FC = () => {\n  // Process data for Roles by Location\n  const rolesByLocation = mockUsers.reduce((acc: Record<string, Record<string, number>>, user: User) => {\n    if (!acc[user.jobRole]) {\n      acc[user.jobRole] = {};\n    }\n    acc[user.jobRole][user.location] = (acc[user.jobRole][user.location] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Process data for Roles by Team\n  const rolesByTeam = mockUsers.reduce((acc: Record<string, Record<string, number>>, user: User) => {\n    if (!acc[user.jobRole]) {\n      acc[user.jobRole] = {};\n    }\n    acc[user.jobRole][user.team] = (acc[user.jobRole][user.team] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Process data for Teams by Location\n  const teamsByLocation = mockUsers.reduce((acc: Record<string, Record<string, number>>, user: User) => {\n    if (!acc[user.team]) {\n      acc[user.team] = {};\n    }\n    acc[user.team][user.location] = (acc[user.team][user.location] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Add state for legend visibility\n  const [roleLocationVisibility, setRoleLocationVisibility] = useState<Record<string, boolean>>({});\n  const [roleTeamVisibility, setRoleTeamVisibility] = useState<Record<string, boolean>>({});\n  const [teamLocationVisibility, setTeamLocationVisibility] = useState<Record<string, boolean>>({});\n\n  // Initialize visibility state when data changes\n  React.useEffect(() => {\n    const initVisibility = (data: any) => \n      Object.keys(data).reduce((acc, key) => ({ ...acc, [key]: true }), {});\n\n    setRoleLocationVisibility(initVisibility(rolesByLocation));\n    setRoleTeamVisibility(initVisibility(rolesByTeam));\n    setTeamLocationVisibility(initVisibility(teamsByLocation));\n  }, []);\n\n  // Generate random colors\n  const generateColors = (count: number): string[] => {\n    return Array.from({ length: count }, (_, i) => \n      `hsl(${(i * 360) / count}, 70%, 50%)`\n    );\n  };\n\n  // Custom legend components\n  const LegendSelect = ({ items, visibility, setVisibility, title }: {\n    items: string[];\n    visibility: Record<string, boolean>;\n    setVisibility: (value: Record<string, boolean>) => void;\n    title: string;\n  }) => {\n    const handleChange = (event: any) => {\n      const selectedItems = event.target.value as string[];\n      const newVisibility = items.reduce((acc, item) => ({\n        ...acc,\n        [item]: selectedItems.includes(item)\n      }), {});\n      setVisibility(newVisibility);\n    };\n\n    const selectedItems = Object.entries(visibility)\n      .filter(([_, isVisible]) => isVisible)\n      .map(([item]) => item);\n\n    return (\n      <Box sx={{ mt: 2 }}>\n        <FormControl fullWidth size=\"small\">\n          <InputLabel>{title}</InputLabel>\n          <Select\n            multiple\n            value={selectedItems}\n            onChange={handleChange}\n            input={<OutlinedInput label={title} />}\n            renderValue={(selected) => (\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                {(selected as string[]).map((value) => (\n                  <Typography variant=\"caption\" key={value} sx={{ mr: 0.5 }}>\n                    {value}\n                  </Typography>\n                ))}\n              </Box>\n            )}\n            MenuProps={{\n              PaperProps: {\n                style: {\n                  maxHeight: 224,\n                  width: 250\n                }\n              }\n            }}\n          >\n            {items.map((item) => (\n              <MenuItem key={item} value={item}>\n                <Box\n                  component=\"span\"\n                  sx={{\n                    width: 14,\n                    height: 14,\n                    mr: 1,\n                    backgroundColor: generateColors(items.length)[items.indexOf(item)],\n                    display: 'inline-block',\n                    borderRadius: '2px'\n                  }}\n                />\n                {item}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Box>\n    );\n  };\n\n  // Update chart options with custom legend\n  const getChartOptions = (title: string) => ({\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false, // Hide default legend\n      },\n      title: {\n        display: true,\n        text: title,\n        padding: {\n          bottom: 10\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          stepSize: 1\n        }\n      }\n    }\n  });\n\n  // Filter datasets based on visibility\n  const rolesByLocationData = {\n    labels: Array.from(new Set(mockUsers.map(user => user.location))),\n    datasets: Object.entries(rolesByLocation)\n      .filter(([role]) => roleLocationVisibility[role] !== false)\n      .map(([role, locations], index) => ({\n        label: role,\n        data: Object.values(locations),\n        backgroundColor: generateColors(Object.keys(rolesByLocation).length)[index],\n      }))\n  };\n\n  const rolesByTeamData = {\n    labels: Array.from(new Set(mockUsers.map(user => user.team))),\n    datasets: Object.entries(rolesByTeam)\n      .filter(([role]) => roleTeamVisibility[role] !== false)\n      .map(([role, teams], index) => ({\n        label: role,\n        data: Object.values(teams),\n        backgroundColor: generateColors(Object.keys(rolesByTeam).length)[index],\n      }))\n  };\n\n  const teamsByLocationData = {\n    labels: Array.from(new Set(mockUsers.map(user => user.location))),\n    datasets: Object.entries(teamsByLocation)\n      .filter(([team]) => teamLocationVisibility[team] !== false)\n      .map(([team, locations], index) => ({\n        label: team,\n        data: Object.values(locations),\n        backgroundColor: generateColors(Object.keys(teamsByLocation).length)[index],\n      }))\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1, p: 3 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Analytics Dashboard\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 2 }}>\n            <Box sx={{ height: 320 }}>\n              <Bar data={rolesByLocationData} options={getChartOptions('Roles by Location')} />\n            </Box>\n            <LegendSelect\n              items={Object.keys(rolesByLocation)}\n              visibility={roleLocationVisibility}\n              setVisibility={setRoleLocationVisibility}\n              title=\"Select Roles\"\n            />\n          </Paper>\n        </Grid>\n        \n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 2 }}>\n            <Box sx={{ height: 320 }}>\n              <Bar data={rolesByTeamData} options={getChartOptions('Roles by Team')} />\n            </Box>\n            <LegendSelect\n              items={Object.keys(rolesByTeam)}\n              visibility={roleTeamVisibility}\n              setVisibility={setRoleTeamVisibility}\n              title=\"Select Roles\"\n            />\n          </Paper>\n        </Grid>\n        \n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 2 }}>\n            <Box sx={{ height: 320 }}>\n              <Bar data={teamsByLocationData} options={getChartOptions('Teams by Location')} />\n            </Box>\n            <LegendSelect\n              items={Object.keys(teamsByLocation)}\n              visibility={teamLocationVisibility}\n              setVisibility={setTeamLocationVisibility}\n              title=\"Select Teams\"\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}