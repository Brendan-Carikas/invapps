{"ast":null,"code":"var _jsxFileName = \"/Users/invotradesign/CascadeProjects/site-users-app/src/components/Dashboard.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Grid, Paper, Typography, FormControl, InputLabel, Select, MenuItem, OutlinedInput, Chip, useTheme } from '@mui/material';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Register ChartJS components\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\n// Mock data - using the same data as UserList component\nconst mockUsers = [{\n  id: 1,\n  name: 'John Doe',\n  team: 'Engineering',\n  location: 'New York',\n  jobRole: 'Software Engineer',\n  imageUrl: ''\n}, {\n  id: 2,\n  name: 'Jane Smith',\n  team: 'Design',\n  location: 'San Francisco',\n  jobRole: 'UI Designer',\n  imageUrl: ''\n}, {\n  id: 3,\n  name: 'Mike Johnson',\n  team: 'Marketing',\n  location: 'London',\n  jobRole: 'Marketing Manager',\n  imageUrl: ''\n}, {\n  id: 4,\n  name: 'Sarah Williams',\n  team: 'Engineering',\n  location: 'Berlin',\n  jobRole: 'Frontend Developer',\n  imageUrl: ''\n}, {\n  id: 5,\n  name: 'Tom Brown',\n  team: 'Product',\n  location: 'Toronto',\n  jobRole: 'Product Manager',\n  imageUrl: ''\n}, {\n  id: 6,\n  name: 'Emily Davis',\n  team: 'Engineering',\n  location: 'Sydney',\n  jobRole: 'Backend Developer',\n  imageUrl: ''\n}, {\n  id: 7,\n  name: 'David Wilson',\n  team: 'Design',\n  location: 'Paris',\n  jobRole: 'UX Designer',\n  imageUrl: ''\n}, {\n  id: 8,\n  name: 'Lisa Anderson',\n  team: 'Marketing',\n  location: 'Tokyo',\n  jobRole: 'Content Strategist',\n  imageUrl: ''\n}, {\n  id: 9,\n  name: 'James Taylor',\n  team: 'Product',\n  location: 'Singapore',\n  jobRole: 'Product Owner',\n  imageUrl: ''\n}, {\n  id: 10,\n  name: 'Maria Garcia',\n  team: 'Engineering',\n  location: 'Madrid',\n  jobRole: 'DevOps Engineer',\n  imageUrl: ''\n}, {\n  id: 11,\n  name: 'Robert Martinez',\n  team: 'Design',\n  location: 'Barcelona',\n  jobRole: 'Visual Designer',\n  imageUrl: ''\n}, {\n  id: 12,\n  name: 'Jennifer Lee',\n  team: 'Marketing',\n  location: 'Seoul',\n  jobRole: 'Marketing Specialist',\n  imageUrl: ''\n}];\nconst Dashboard = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  // Process data for Roles by Location\n  const rolesByLocation = mockUsers.reduce((acc, user) => {\n    if (!acc[user.jobRole]) {\n      acc[user.jobRole] = {};\n    }\n    acc[user.jobRole][user.location] = (acc[user.jobRole][user.location] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Process data for Roles by Team\n  const rolesByTeam = mockUsers.reduce((acc, user) => {\n    if (!acc[user.jobRole]) {\n      acc[user.jobRole] = {};\n    }\n    acc[user.jobRole][user.team] = (acc[user.jobRole][user.team] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Process data for Teams by Location\n  const teamsByLocation = mockUsers.reduce((acc, user) => {\n    if (!acc[user.team]) {\n      acc[user.team] = {};\n    }\n    acc[user.team][user.location] = (acc[user.team][user.location] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Add state for legend visibility\n  const [roleLocationVisibility, setRoleLocationVisibility] = useState({});\n  const [roleTeamVisibility, setRoleTeamVisibility] = useState({});\n  const [teamLocationVisibility, setTeamLocationVisibility] = useState({});\n\n  // Initialize visibility state when data changes\n  React.useEffect(() => {\n    const initVisibility = data => Object.keys(data).reduce((acc, key) => ({\n      ...acc,\n      [key]: true\n    }), {});\n    setRoleLocationVisibility(initVisibility(rolesByLocation));\n    setRoleTeamVisibility(initVisibility(rolesByTeam));\n    setTeamLocationVisibility(initVisibility(teamsByLocation));\n  }, []);\n\n  // Generate accessible colors with proper contrast\n  const generateAccessibleColors = count => {\n    return Array.from({\n      length: count\n    }, (_, i) => {\n      const hue = i * 360 / count;\n      // Using darker, more saturated colors for better contrast\n      const background = `hsl(${hue}, 65%, 35%)`;\n      // Using white or black text based on background color's brightness\n      const textColor = hue > 50 && hue < 190 ? '#000000' : '#ffffff';\n      return {\n        background,\n        text: textColor\n      };\n    });\n  };\n\n  // Custom legend components\n  const LegendSelect = ({\n    items,\n    visibility,\n    setVisibility,\n    title\n  }) => {\n    _s();\n    const theme = useTheme();\n    const colors = generateAccessibleColors(items.length);\n    const ITEM_HEIGHT = 48;\n    const ITEM_PADDING_TOP = 8;\n    const MenuProps = {\n      PaperProps: {\n        style: {\n          maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n          width: 250\n        }\n      }\n    };\n    function getStyles(item, selectedItems, theme) {\n      return {\n        fontWeight: selectedItems.indexOf(item) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n      };\n    }\n    const handleChange = event => {\n      const selectedItems = event.target.value;\n      const newVisibility = items.reduce((acc, item) => ({\n        ...acc,\n        [item]: selectedItems.includes(item)\n      }), {});\n      setVisibility(newVisibility);\n    };\n    const selectedItems = Object.entries(visibility).filter(([_, isVisible]) => isVisible).map(([item]) => item);\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: `${title}-label`,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: `${title}-label`,\n          multiple: true,\n          value: selectedItems,\n          onChange: handleChange,\n          input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            label: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 20\n          }, this),\n          renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 0.5\n            },\n            children: selected.map(value => {\n              const colorIndex = items.indexOf(value);\n              const {\n                background,\n                text\n              } = colors[colorIndex];\n              return /*#__PURE__*/_jsxDEV(Chip, {\n                label: value,\n                size: \"small\",\n                sx: {\n                  backgroundColor: background,\n                  color: text,\n                  '& .MuiChip-label': {\n                    fontSize: '0.875rem',\n                    fontWeight: 500,\n                    padding: '4px 8px'\n                  },\n                  '&:focus': {\n                    outline: `2px solid ${theme.palette.primary.main}`,\n                    outlineOffset: '2px'\n                  },\n                  '&:focus-visible': {\n                    outline: `2px solid ${theme.palette.primary.main}`,\n                    outlineOffset: '2px'\n                  }\n                },\n                role: \"listitem\",\n                \"aria-label\": `Selected ${value}`\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this),\n          MenuProps: {\n            ...MenuProps,\n            PaperProps: {\n              ...MenuProps.PaperProps,\n              'aria-label': `${title} selection menu`\n            }\n          },\n          children: items.map((item, index) => {\n            const {\n              background,\n              text\n            } = colors[index];\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: item,\n              style: getStyles(item, selectedItems, theme),\n              role: \"option\",\n              \"aria-selected\": selectedItems.includes(item),\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                component: \"span\",\n                sx: {\n                  width: 14,\n                  height: 14,\n                  mr: 1,\n                  backgroundColor: background,\n                  display: 'inline-block',\n                  borderRadius: '2px'\n                },\n                role: \"presentation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this), item]\n            }, item, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Update chart options with custom legend\n  _s(LegendSelect, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n    return [useTheme];\n  });\n  const getChartOptions = title => ({\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false // Hide default legend\n      },\n      title: {\n        display: true,\n        text: title,\n        padding: {\n          bottom: 10\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          stepSize: 1\n        }\n      }\n    }\n  });\n\n  // Filter datasets based on visibility\n  const rolesByLocationData = {\n    labels: Array.from(new Set(mockUsers.map(user => user.location))),\n    datasets: Object.entries(rolesByLocation).filter(([role]) => roleLocationVisibility[role] !== false).map(([role, locations], index) => ({\n      label: role,\n      data: Object.values(locations),\n      backgroundColor: generateAccessibleColors(Object.keys(rolesByLocation).length)[index].background\n    }))\n  };\n  const rolesByTeamData = {\n    labels: Array.from(new Set(mockUsers.map(user => user.team))),\n    datasets: Object.entries(rolesByTeam).filter(([role]) => roleTeamVisibility[role] !== false).map(([role, teams], index) => ({\n      label: role,\n      data: Object.values(teams),\n      backgroundColor: generateAccessibleColors(Object.keys(rolesByTeam).length)[index].background\n    }))\n  };\n  const teamsByLocationData = {\n    labels: Array.from(new Set(mockUsers.map(user => user.location))),\n    datasets: Object.entries(teamsByLocation).filter(([team]) => teamLocationVisibility[team] !== false).map(([team, locations], index) => ({\n      label: team,\n      data: Object.values(locations),\n      backgroundColor: generateAccessibleColors(Object.keys(teamsByLocation).length)[index].background\n    }))\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Analytics Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 320\n            },\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: rolesByLocationData,\n              options: getChartOptions('Roles by Location')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LegendSelect, {\n            items: Object.keys(rolesByLocation),\n            visibility: roleLocationVisibility,\n            setVisibility: setRoleLocationVisibility,\n            title: \"Select Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 320\n            },\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: rolesByTeamData,\n              options: getChartOptions('Roles by Team')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LegendSelect, {\n            items: Object.keys(rolesByTeam),\n            visibility: roleTeamVisibility,\n            setVisibility: setRoleTeamVisibility,\n            title: \"Select Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 320\n            },\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: teamsByLocationData,\n              options: getChartOptions('Teams by Location')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LegendSelect, {\n            items: Object.keys(teamsByLocation),\n            visibility: teamLocationVisibility,\n            setVisibility: setTeamLocationVisibility,\n            title: \"Select Teams\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n};\n_s2(Dashboard, \"XV8C2F2IMkkZc5G97WH7hfLPArs=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Box","Grid","Paper","Typography","FormControl","InputLabel","Select","MenuItem","OutlinedInput","Chip","useTheme","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","mockUsers","id","name","team","location","jobRole","imageUrl","Dashboard","_s2","_s","$RefreshSig$","rolesByLocation","reduce","acc","user","rolesByTeam","teamsByLocation","roleLocationVisibility","setRoleLocationVisibility","roleTeamVisibility","setRoleTeamVisibility","teamLocationVisibility","setTeamLocationVisibility","useEffect","initVisibility","data","Object","keys","key","generateAccessibleColors","count","Array","from","length","_","i","hue","background","textColor","text","LegendSelect","items","visibility","setVisibility","title","theme","colors","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","getStyles","item","selectedItems","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","handleChange","event","target","value","newVisibility","includes","entries","filter","isVisible","map","sx","mt","children","fullWidth","size","fileName","_jsxFileName","lineNumber","columnNumber","labelId","multiple","onChange","input","label","renderValue","selected","display","flexWrap","gap","colorIndex","backgroundColor","color","fontSize","padding","outline","palette","primary","main","outlineOffset","role","index","component","height","mr","borderRadius","getChartOptions","responsive","maintainAspectRatio","plugins","legend","bottom","scales","y","beginAtZero","ticks","stepSize","rolesByLocationData","labels","Set","datasets","locations","values","rolesByTeamData","teams","teamsByLocationData","flexGrow","p","variant","gutterBottom","container","spacing","xs","md","options","_c","$RefreshReg$"],"sources":["/Users/invotradesign/CascadeProjects/site-users-app/src/components/Dashboard.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Grid, Paper, Typography, FormControl, InputLabel, Select, MenuItem, OutlinedInput, Chip, Theme, useTheme } from '@mui/material';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { User } from '../types/User';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n// Mock data - using the same data as UserList component\nconst mockUsers: User[] = [\n  { id: 1, name: 'John Doe', team: 'Engineering', location: 'New York', jobRole: 'Software Engineer', imageUrl: '' },\n  { id: 2, name: 'Jane Smith', team: 'Design', location: 'San Francisco', jobRole: 'UI Designer', imageUrl: '' },\n  { id: 3, name: 'Mike Johnson', team: 'Marketing', location: 'London', jobRole: 'Marketing Manager', imageUrl: '' },\n  { id: 4, name: 'Sarah Williams', team: 'Engineering', location: 'Berlin', jobRole: 'Frontend Developer', imageUrl: '' },\n  { id: 5, name: 'Tom Brown', team: 'Product', location: 'Toronto', jobRole: 'Product Manager', imageUrl: '' },\n  { id: 6, name: 'Emily Davis', team: 'Engineering', location: 'Sydney', jobRole: 'Backend Developer', imageUrl: '' },\n  { id: 7, name: 'David Wilson', team: 'Design', location: 'Paris', jobRole: 'UX Designer', imageUrl: '' },\n  { id: 8, name: 'Lisa Anderson', team: 'Marketing', location: 'Tokyo', jobRole: 'Content Strategist', imageUrl: '' },\n  { id: 9, name: 'James Taylor', team: 'Product', location: 'Singapore', jobRole: 'Product Owner', imageUrl: '' },\n  { id: 10, name: 'Maria Garcia', team: 'Engineering', location: 'Madrid', jobRole: 'DevOps Engineer', imageUrl: '' },\n  { id: 11, name: 'Robert Martinez', team: 'Design', location: 'Barcelona', jobRole: 'Visual Designer', imageUrl: '' },\n  { id: 12, name: 'Jennifer Lee', team: 'Marketing', location: 'Seoul', jobRole: 'Marketing Specialist', imageUrl: '' }\n];\n\nconst Dashboard: React.FC = () => {\n  // Process data for Roles by Location\n  const rolesByLocation = mockUsers.reduce((acc: Record<string, Record<string, number>>, user: User) => {\n    if (!acc[user.jobRole]) {\n      acc[user.jobRole] = {};\n    }\n    acc[user.jobRole][user.location] = (acc[user.jobRole][user.location] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Process data for Roles by Team\n  const rolesByTeam = mockUsers.reduce((acc: Record<string, Record<string, number>>, user: User) => {\n    if (!acc[user.jobRole]) {\n      acc[user.jobRole] = {};\n    }\n    acc[user.jobRole][user.team] = (acc[user.jobRole][user.team] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Process data for Teams by Location\n  const teamsByLocation = mockUsers.reduce((acc: Record<string, Record<string, number>>, user: User) => {\n    if (!acc[user.team]) {\n      acc[user.team] = {};\n    }\n    acc[user.team][user.location] = (acc[user.team][user.location] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Add state for legend visibility\n  const [roleLocationVisibility, setRoleLocationVisibility] = useState<Record<string, boolean>>({});\n  const [roleTeamVisibility, setRoleTeamVisibility] = useState<Record<string, boolean>>({});\n  const [teamLocationVisibility, setTeamLocationVisibility] = useState<Record<string, boolean>>({});\n\n  // Initialize visibility state when data changes\n  React.useEffect(() => {\n    const initVisibility = (data: any) => \n      Object.keys(data).reduce((acc, key) => ({ ...acc, [key]: true }), {});\n\n    setRoleLocationVisibility(initVisibility(rolesByLocation));\n    setRoleTeamVisibility(initVisibility(rolesByTeam));\n    setTeamLocationVisibility(initVisibility(teamsByLocation));\n  }, []);\n\n  // Generate accessible colors with proper contrast\n  const generateAccessibleColors = (count: number): { background: string; text: string }[] => {\n    return Array.from({ length: count }, (_, i) => {\n      const hue = (i * 360) / count;\n      // Using darker, more saturated colors for better contrast\n      const background = `hsl(${hue}, 65%, 35%)`;\n      // Using white or black text based on background color's brightness\n      const textColor = hue > 50 && hue < 190 ? '#000000' : '#ffffff';\n      return { background, text: textColor };\n    });\n  };\n\n  // Custom legend components\n  const LegendSelect = ({ items, visibility, setVisibility, title }: {\n    items: string[];\n    visibility: Record<string, boolean>;\n    setVisibility: (value: Record<string, boolean>) => void;\n    title: string;\n  }) => {\n    const theme = useTheme();\n    const colors = generateAccessibleColors(items.length);\n\n    const ITEM_HEIGHT = 48;\n    const ITEM_PADDING_TOP = 8;\n    const MenuProps = {\n      PaperProps: {\n        style: {\n          maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n          width: 250,\n        },\n      },\n    };\n\n    function getStyles(item: string, selectedItems: readonly string[], theme: Theme) {\n      return {\n        fontWeight:\n          selectedItems.indexOf(item) === -1\n            ? theme.typography.fontWeightRegular\n            : theme.typography.fontWeightMedium,\n      };\n    }\n\n    const handleChange = (event: any) => {\n      const selectedItems = event.target.value as string[];\n      const newVisibility = items.reduce((acc, item) => ({\n        ...acc,\n        [item]: selectedItems.includes(item)\n      }), {});\n      setVisibility(newVisibility);\n    };\n\n    const selectedItems = Object.entries(visibility)\n      .filter(([_, isVisible]) => isVisible)\n      .map(([item]) => item);\n\n    return (\n      <Box sx={{ mt: 2 }}>\n        <FormControl fullWidth size=\"small\">\n          <InputLabel id={`${title}-label`}>{title}</InputLabel>\n          <Select\n            labelId={`${title}-label`}\n            multiple\n            value={selectedItems}\n            onChange={handleChange}\n            input={<OutlinedInput label={title} />}\n            renderValue={(selected) => (\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                {(selected as string[]).map((value) => {\n                  const colorIndex = items.indexOf(value);\n                  const { background, text } = colors[colorIndex];\n                  return (\n                    <Chip\n                      key={value}\n                      label={value}\n                      size=\"small\"\n                      sx={{\n                        backgroundColor: background,\n                        color: text,\n                        '& .MuiChip-label': {\n                          fontSize: '0.875rem',\n                          fontWeight: 500,\n                          padding: '4px 8px',\n                        },\n                        '&:focus': {\n                          outline: `2px solid ${theme.palette.primary.main}`,\n                          outlineOffset: '2px',\n                        },\n                        '&:focus-visible': {\n                          outline: `2px solid ${theme.palette.primary.main}`,\n                          outlineOffset: '2px',\n                        },\n                      }}\n                      role=\"listitem\"\n                      aria-label={`Selected ${value}`}\n                    />\n                  );\n                })}\n              </Box>\n            )}\n            MenuProps={{\n              ...MenuProps,\n              PaperProps: {\n                ...MenuProps.PaperProps,\n                'aria-label': `${title} selection menu`,\n              }\n            }}\n          >\n            {items.map((item, index) => {\n              const { background, text } = colors[index];\n              return (\n                <MenuItem\n                  key={item}\n                  value={item}\n                  style={getStyles(item, selectedItems, theme)}\n                  role=\"option\"\n                  aria-selected={selectedItems.includes(item)}\n                >\n                  <Box\n                    component=\"span\"\n                    sx={{\n                      width: 14,\n                      height: 14,\n                      mr: 1,\n                      backgroundColor: background,\n                      display: 'inline-block',\n                      borderRadius: '2px',\n                    }}\n                    role=\"presentation\"\n                  />\n                  {item}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n      </Box>\n    );\n  };\n\n  // Update chart options with custom legend\n  const getChartOptions = (title: string) => ({\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false, // Hide default legend\n      },\n      title: {\n        display: true,\n        text: title,\n        padding: {\n          bottom: 10\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          stepSize: 1\n        }\n      }\n    }\n  });\n\n  // Filter datasets based on visibility\n  const rolesByLocationData = {\n    labels: Array.from(new Set(mockUsers.map(user => user.location))),\n    datasets: Object.entries(rolesByLocation)\n      .filter(([role]) => roleLocationVisibility[role] !== false)\n      .map(([role, locations], index) => ({\n        label: role,\n        data: Object.values(locations),\n        backgroundColor: generateAccessibleColors(Object.keys(rolesByLocation).length)[index].background,\n      }))\n  };\n\n  const rolesByTeamData = {\n    labels: Array.from(new Set(mockUsers.map(user => user.team))),\n    datasets: Object.entries(rolesByTeam)\n      .filter(([role]) => roleTeamVisibility[role] !== false)\n      .map(([role, teams], index) => ({\n        label: role,\n        data: Object.values(teams),\n        backgroundColor: generateAccessibleColors(Object.keys(rolesByTeam).length)[index].background,\n      }))\n  };\n\n  const teamsByLocationData = {\n    labels: Array.from(new Set(mockUsers.map(user => user.location))),\n    datasets: Object.entries(teamsByLocation)\n      .filter(([team]) => teamLocationVisibility[team] !== false)\n      .map(([team, locations], index) => ({\n        label: team,\n        data: Object.values(locations),\n        backgroundColor: generateAccessibleColors(Object.keys(teamsByLocation).length)[index].background,\n      }))\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1, p: 3 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Analytics Dashboard\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 2 }}>\n            <Box sx={{ height: 320 }}>\n              <Bar data={rolesByLocationData} options={getChartOptions('Roles by Location')} />\n            </Box>\n            <LegendSelect\n              items={Object.keys(rolesByLocation)}\n              visibility={roleLocationVisibility}\n              setVisibility={setRoleLocationVisibility}\n              title=\"Select Roles\"\n            />\n          </Paper>\n        </Grid>\n        \n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 2 }}>\n            <Box sx={{ height: 320 }}>\n              <Bar data={rolesByTeamData} options={getChartOptions('Roles by Team')} />\n            </Box>\n            <LegendSelect\n              items={Object.keys(rolesByTeam)}\n              visibility={roleTeamVisibility}\n              setVisibility={setRoleTeamVisibility}\n              title=\"Select Roles\"\n            />\n          </Paper>\n        </Grid>\n        \n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 2 }}>\n            <Box sx={{ height: 320 }}>\n              <Bar data={teamsByLocationData} options={getChartOptions('Teams by Location')} />\n            </Box>\n            <LegendSelect\n              items={Object.keys(teamsByLocation)}\n              visibility={teamLocationVisibility}\n              setVisibility={setTeamLocationVisibility}\n              title=\"Select Teams\"\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}