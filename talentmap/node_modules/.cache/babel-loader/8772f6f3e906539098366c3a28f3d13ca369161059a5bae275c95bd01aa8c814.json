{"ast":null,"code":"var _jsxFileName = \"/Users/invotradesign/CascadeProjects/site-users-app/src/components/OrgChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Tree from 'react-d3-tree';\nimport { useUsers } from './UserContext';\nimport { Box, Card, Avatar, Typography, useTheme, alpha } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrgChart = () => {\n  _s();\n  const theme = useTheme();\n  const {\n    users\n  } = useUsers();\n  const [treeData, setTreeData] = useState(null);\n  useEffect(() => {\n    const buildTreeData = users => {\n      if (!users.length) return null;\n\n      // Find the root (CEO or user without managerId)\n      const root = users.find(user => !user.managerId);\n      if (!root) return null;\n      const buildNode = user => {\n        const children = users.filter(u => u.managerId === user.id).map(child => buildNode(child));\n        return {\n          name: user.name,\n          attributes: {\n            name: user.name,\n            role: user.jobRole,\n            imageUrl: user.imageUrl || ''\n          },\n          children: children.length ? children : [],\n          __rd3t: {}\n        };\n      };\n      return buildNode(root);\n    };\n    const data = buildTreeData(users);\n    setTreeData(data);\n  }, [users]);\n  const renderCustomNode = ({\n    nodeDatum\n  }) => {\n    var _node$attributes, _node$attributes2, _node$attributes3, _node$attributes3$nam, _node$attributes4, _node$attributes5;\n    const node = nodeDatum;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        p: 1,\n        minWidth: 200,\n        bgcolor: alpha(theme.palette.background.paper, 0.9),\n        boxShadow: 3,\n        borderRadius: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: ((_node$attributes = node.attributes) === null || _node$attributes === void 0 ? void 0 : _node$attributes.imageUrl) || '',\n          alt: ((_node$attributes2 = node.attributes) === null || _node$attributes2 === void 0 ? void 0 : _node$attributes2.name) || '',\n          sx: {\n            width: 40,\n            height: 40\n          },\n          children: ((_node$attributes3 = node.attributes) === null || _node$attributes3 === void 0 ? void 0 : (_node$attributes3$nam = _node$attributes3.name) === null || _node$attributes3$nam === void 0 ? void 0 : _node$attributes3$nam[0]) || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            noWrap: true,\n            children: ((_node$attributes4 = node.attributes) === null || _node$attributes4 === void 0 ? void 0 : _node$attributes4.name) || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"textSecondary\",\n            noWrap: true,\n            children: ((_node$attributes5 = node.attributes) === null || _node$attributes5 === void 0 ? void 0 : _node$attributes5.role) || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  };\n  if (!treeData) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading organization chart...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Tree, {\n      data: treeData,\n      renderCustomNodeElement: renderCustomNode,\n      orientation: \"vertical\",\n      pathFunc: \"step\",\n      translate: {\n        x: window.innerWidth / 2,\n        y: 50\n      },\n      separation: {\n        siblings: 2,\n        nonSiblings: 2.5\n      },\n      zoom: 0.7,\n      nodeSize: {\n        x: 250,\n        y: 100\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(OrgChart, \"F7245so3OF9hcjXcZXjvT0Rn2ug=\", false, function () {\n  return [useTheme, useUsers];\n});\n_c = OrgChart;\nexport default OrgChart;\nvar _c;\n$RefreshReg$(_c, \"OrgChart\");","map":{"version":3,"names":["React","useEffect","useState","Tree","useUsers","Box","Card","Avatar","Typography","useTheme","alpha","jsxDEV","_jsxDEV","OrgChart","_s","theme","users","treeData","setTreeData","buildTreeData","length","root","find","user","managerId","buildNode","children","filter","u","id","map","child","name","attributes","role","jobRole","imageUrl","__rd3t","data","renderCustomNode","nodeDatum","_node$attributes","_node$attributes2","_node$attributes3","_node$attributes3$nam","_node$attributes4","_node$attributes5","node","sx","p","minWidth","bgcolor","palette","background","paper","boxShadow","borderRadius","display","alignItems","gap","src","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","variant","noWrap","color","renderCustomNodeElement","orientation","pathFunc","translate","x","window","innerWidth","y","separation","siblings","nonSiblings","zoom","nodeSize","_c","$RefreshReg$"],"sources":["/Users/invotradesign/CascadeProjects/site-users-app/src/components/OrgChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Tree, { RawNodeDatum, CustomNodeElementProps, TreeNodeDatum } from 'react-d3-tree';\nimport { User } from '../types/User';\nimport { useUsers } from './UserContext';\nimport {\n  Box,\n  Card,\n  Avatar,\n  Typography,\n  useTheme,\n  alpha\n} from '@mui/material';\n\ninterface NodeAttributes {\n  name: string;\n  role: string;\n  imageUrl: string;\n}\n\ninterface OrgChartNodeData extends TreeNodeDatum {\n  name: string;\n  attributes?: NodeAttributes;\n  __rd3t: any;\n}\n\nconst OrgChart: React.FC = () => {\n  const theme = useTheme();\n  const { users } = useUsers();\n  const [treeData, setTreeData] = useState<OrgChartNodeData | null>(null);\n\n  useEffect(() => {\n    const buildTreeData = (users: User[]): OrgChartNodeData | null => {\n      if (!users.length) return null;\n\n      // Find the root (CEO or user without managerId)\n      const root = users.find(user => !user.managerId);\n      if (!root) return null;\n\n      const buildNode = (user: User): OrgChartNodeData => {\n        const children = users\n          .filter(u => u.managerId === user.id)\n          .map(child => buildNode(child));\n\n        return {\n          name: user.name,\n          attributes: {\n            name: user.name,\n            role: user.jobRole,\n            imageUrl: user.imageUrl || ''\n          },\n          children: children.length ? children : [],\n          __rd3t: {}\n        };\n      };\n\n      return buildNode(root);\n    };\n\n    const data = buildTreeData(users);\n    setTreeData(data);\n  }, [users]);\n\n  const renderCustomNode = ({ nodeDatum }: CustomNodeElementProps) => {\n    const node = nodeDatum as OrgChartNodeData;\n    return (\n      <Card\n        sx={{\n          p: 1,\n          minWidth: 200,\n          bgcolor: alpha(theme.palette.background.paper, 0.9),\n          boxShadow: 3,\n          borderRadius: 2\n        }}\n      >\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n          <Avatar\n            src={node.attributes?.imageUrl || ''}\n            alt={node.attributes?.name || ''}\n            sx={{ width: 40, height: 40 }}\n          >\n            {node.attributes?.name?.[0] || ''}\n          </Avatar>\n          <Box>\n            <Typography variant=\"subtitle2\" noWrap>\n              {node.attributes?.name || ''}\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\" noWrap>\n              {node.attributes?.role || ''}\n            </Typography>\n          </Box>\n        </Box>\n      </Card>\n    );\n  };\n\n  if (!treeData) {\n    return (\n      <Box sx={{ p: 3 }}>\n        <Typography>Loading organization chart...</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ width: '100%', height: '100vh' }}>\n      <Tree\n        data={treeData}\n        renderCustomNodeElement={renderCustomNode}\n        orientation=\"vertical\"\n        pathFunc=\"step\"\n        translate={{ x: window.innerWidth / 2, y: 50 }}\n        separation={{ siblings: 2, nonSiblings: 2.5 }}\n        zoom={0.7}\n        nodeSize={{ x: 250, y: 100 }}\n      />\n    </Box>\n  );\n};\n\nexport default OrgChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}