{"ast":null,"code":"var _jsxFileName = \"/Users/invotradesign/CascadeProjects/site-users-app/src/components/OrgChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Tree from 'react-d3-tree';\nimport { useUsers } from './UserContext';\nimport { Box, Card, Avatar, Typography, useTheme as useMuiTheme, alpha } from '@mui/material';\nimport { useTheme } from './ThemeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stringToColor = string => {\n  let hash = 0;\n  for (let i = 0; i < string.length; i++) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  let color = '#';\n  for (let i = 0; i < 3; i++) {\n    const value = hash >> i * 8 & 0xFF;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n  return color;\n};\nconst OrgChart = () => {\n  _s();\n  const muiTheme = useMuiTheme();\n  const {\n    headingFontWeights,\n    pageTitleFontSize,\n    headingFont\n  } = useTheme();\n  const {\n    users\n  } = useUsers();\n  const [treeData, setTreeData] = useState(null);\n  useEffect(() => {\n    const buildTreeData = users => {\n      if (!users.length) return null;\n\n      // If no users have managerId set, create temporary relationships\n      const hasManagerRelationships = users.some(user => user.managerId !== undefined);\n      let processedUsers = [...users];\n      if (!hasManagerRelationships) {\n        // Find users by team\n        const teamLeads = new Map();\n        const ceo = processedUsers.find(u => u.jobRole.toLowerCase().includes('ceo') || u.jobRole.toLowerCase().includes('chief'));\n\n        // If no CEO found, use the first user as root\n        const root = ceo || processedUsers[0];\n        root.managerId = undefined; // Root has no manager\n\n        // Assign team leads reporting to CEO\n        processedUsers.forEach(user => {\n          if (user.id === root.id) return;\n          if (user.jobRole.toLowerCase().includes('manager') || user.jobRole.toLowerCase().includes('lead') || user.jobRole.toLowerCase().includes('head')) {\n            teamLeads.set(user.team, user.id);\n            user.managerId = root.id;\n          }\n        });\n\n        // Assign remaining team members to their team leads\n        processedUsers.forEach(user => {\n          if (user.id === root.id || teamLeads.has(user.team)) return;\n          const teamLead = teamLeads.get(user.team);\n          if (teamLead) {\n            user.managerId = teamLead;\n          } else {\n            user.managerId = root.id; // Report to CEO if no team lead\n          }\n        });\n      }\n\n      // Find the root (CEO or user without managerId)\n      const root = processedUsers.find(user => !user.managerId);\n      if (!root) return null;\n      const buildNode = user => {\n        const children = processedUsers.filter(u => u.managerId === user.id).map(child => buildNode(child));\n        return {\n          name: user.name,\n          attributes: {\n            name: user.name,\n            role: user.jobRole,\n            id: user.id || '',\n            team: user.team || '',\n            location: user.location || ''\n          },\n          children: children.length ? children : []\n        };\n      };\n      return buildNode(root);\n    };\n    const data = buildTreeData(users);\n    setTreeData(data);\n  }, [users]);\n  const renderCustomNode = ({\n    nodeDatum\n  }) => {\n    const attrs = nodeDatum.attributes;\n    const initials = attrs.name.split(' ').map(n => n[0]).join('');\n    const bgColor = stringToColor(attrs.name);\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        p: 1,\n        minWidth: 200,\n        bgcolor: alpha(muiTheme.palette.background.paper, 0.9),\n        boxShadow: 3,\n        borderRadius: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            width: 40,\n            height: 40,\n            bgcolor: bgColor,\n            fontSize: '1rem',\n            fontWeight: 500\n          },\n          children: initials\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            noWrap: true,\n            children: (attrs === null || attrs === void 0 ? void 0 : attrs.name) || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"textSecondary\",\n            noWrap: true,\n            children: (attrs === null || attrs === void 0 ? void 0 : attrs.role) || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  };\n  if (!treeData) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading organization chart...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100vh',\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h1\",\n      sx: {\n        mb: 3,\n        fontWeight: (headingFontWeights === null || headingFontWeights === void 0 ? void 0 : headingFontWeights.pageTitle) || 700,\n        fontSize: pageTitleFontSize,\n        fontFamily: headingFont\n      },\n      children: \"Organization Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        height: 'calc(100vh - 64px)'\n      },\n      children: /*#__PURE__*/_jsxDEV(Tree, {\n        data: treeData,\n        renderCustomNodeElement: renderCustomNode,\n        orientation: \"vertical\",\n        pathFunc: \"step\",\n        translate: {\n          x: window.innerWidth / 2,\n          y: 50\n        },\n        separation: {\n          siblings: 2,\n          nonSiblings: 2.5\n        },\n        zoom: 0.7,\n        nodeSize: {\n          x: 250,\n          y: 100\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(OrgChart, \"R0ei3D9aJOH85i7cxtkbtciyaGo=\", false, function () {\n  return [useMuiTheme, useTheme, useUsers];\n});\n_c = OrgChart;\nexport default OrgChart;\nvar _c;\n$RefreshReg$(_c, \"OrgChart\");","map":{"version":3,"names":["React","useEffect","useState","Tree","useUsers","Box","Card","Avatar","Typography","useTheme","useMuiTheme","alpha","jsxDEV","_jsxDEV","stringToColor","string","hash","i","length","charCodeAt","color","value","toString","substr","OrgChart","_s","muiTheme","headingFontWeights","pageTitleFontSize","headingFont","users","treeData","setTreeData","buildTreeData","hasManagerRelationships","some","user","managerId","undefined","processedUsers","teamLeads","Map","ceo","find","u","jobRole","toLowerCase","includes","root","forEach","id","set","team","has","teamLead","get","buildNode","children","filter","map","child","name","attributes","role","location","data","renderCustomNode","nodeDatum","attrs","initials","split","n","join","bgColor","sx","p","minWidth","bgcolor","palette","background","paper","boxShadow","borderRadius","display","alignItems","gap","width","height","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","variant","noWrap","component","mb","pageTitle","fontFamily","renderCustomNodeElement","orientation","pathFunc","translate","x","window","innerWidth","y","separation","siblings","nonSiblings","zoom","nodeSize","_c","$RefreshReg$"],"sources":["/Users/invotradesign/CascadeProjects/site-users-app/src/components/OrgChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Tree, { RawNodeDatum, CustomNodeElementProps } from 'react-d3-tree';\nimport { User } from '../types/User';\nimport { useUsers } from './UserContext';\nimport {\n  Box,\n  Card,\n  Avatar,\n  Typography,\n  useTheme as useMuiTheme,\n  alpha\n} from '@mui/material';\nimport { useTheme } from './ThemeContext';\n\ntype NodeAttributes = {\n  [key: string]: string | number | boolean;\n  name: string;\n  role: string;\n}\n\ninterface OrgChartNodeData extends RawNodeDatum {\n  name: string;\n  attributes?: NodeAttributes;\n}\n\nconst stringToColor = (string: string) => {\n  let hash = 0;\n  for (let i = 0; i < string.length; i++) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  let color = '#';\n  for (let i = 0; i < 3; i++) {\n    const value = (hash >> (i * 8)) & 0xFF;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n  return color;\n};\n\nconst OrgChart: React.FC = () => {\n  const muiTheme = useMuiTheme();\n  const { headingFontWeights, pageTitleFontSize, headingFont } = useTheme();\n  const { users } = useUsers();\n  const [treeData, setTreeData] = useState<OrgChartNodeData | null>(null);\n\n  useEffect(() => {\n    const buildTreeData = (users: User[]): OrgChartNodeData | null => {\n      if (!users.length) return null;\n\n      // If no users have managerId set, create temporary relationships\n      const hasManagerRelationships = users.some(user => user.managerId !== undefined);\n      let processedUsers = [...users];\n\n      if (!hasManagerRelationships) {\n        // Find users by team\n        const teamLeads = new Map<string, number>();\n        const ceo = processedUsers.find(u => u.jobRole.toLowerCase().includes('ceo') || \n                                           u.jobRole.toLowerCase().includes('chief'));\n        \n        // If no CEO found, use the first user as root\n        const root = ceo || processedUsers[0];\n        root.managerId = undefined; // Root has no manager\n\n        // Assign team leads reporting to CEO\n        processedUsers.forEach(user => {\n          if (user.id === root.id) return;\n          \n          if (user.jobRole.toLowerCase().includes('manager') || \n              user.jobRole.toLowerCase().includes('lead') || \n              user.jobRole.toLowerCase().includes('head')) {\n            teamLeads.set(user.team, user.id);\n            user.managerId = root.id;\n          }\n        });\n\n        // Assign remaining team members to their team leads\n        processedUsers.forEach(user => {\n          if (user.id === root.id || teamLeads.has(user.team)) return;\n          \n          const teamLead = teamLeads.get(user.team);\n          if (teamLead) {\n            user.managerId = teamLead;\n          } else {\n            user.managerId = root.id; // Report to CEO if no team lead\n          }\n        });\n      }\n\n      // Find the root (CEO or user without managerId)\n      const root = processedUsers.find(user => !user.managerId);\n      if (!root) return null;\n\n      const buildNode = (user: User): OrgChartNodeData => {\n        const children = processedUsers\n          .filter(u => u.managerId === user.id)\n          .map(child => buildNode(child));\n\n        return {\n          name: user.name,\n          attributes: {\n            name: user.name,\n            role: user.jobRole,\n            id: user.id || '',\n            team: user.team || '',\n            location: user.location || ''\n          },\n          children: children.length ? children : []\n        };\n      };\n\n      return buildNode(root);\n    };\n\n    const data = buildTreeData(users);\n    setTreeData(data);\n  }, [users]);\n\n  const renderCustomNode = ({ nodeDatum }: CustomNodeElementProps) => {\n    const attrs = nodeDatum.attributes as NodeAttributes;\n    const initials = attrs.name.split(' ').map(n => n[0]).join('');\n    const bgColor = stringToColor(attrs.name);\n\n    return (\n      <Card\n        sx={{\n          p: 1,\n          minWidth: 200,\n          bgcolor: alpha(muiTheme.palette.background.paper, 0.9),\n          boxShadow: 3,\n          borderRadius: 2\n        }}\n      >\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n          <Avatar\n            sx={{\n              width: 40,\n              height: 40,\n              bgcolor: bgColor,\n              fontSize: '1rem',\n              fontWeight: 500\n            }}\n          >\n            {initials}\n          </Avatar>\n          <Box>\n            <Typography variant=\"subtitle2\" noWrap>\n              {attrs?.name || ''}\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\" noWrap>\n              {attrs?.role || ''}\n            </Typography>\n          </Box>\n        </Box>\n      </Card>\n    );\n  };\n\n  if (!treeData) {\n    return (\n      <Box sx={{ p: 3 }}>\n        <Typography>Loading organization chart...</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ height: '100vh', p: 3 }}>\n      <Typography \n        component=\"h1\" \n        sx={{ \n          mb: 3,\n          fontWeight: headingFontWeights?.pageTitle || 700,\n          fontSize: pageTitleFontSize,\n          fontFamily: headingFont\n        }}\n      >\n        Organization Chart\n      </Typography>\n      <Box sx={{ width: '100%', height: 'calc(100vh - 64px)' }}>\n        <Tree\n          data={treeData}\n          renderCustomNodeElement={renderCustomNode}\n          orientation=\"vertical\"\n          pathFunc=\"step\"\n          translate={{ x: window.innerWidth / 2, y: 50 }}\n          separation={{ siblings: 2, nonSiblings: 2.5 }}\n          zoom={0.7}\n          nodeSize={{ x: 250, y: 100 }}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default OrgChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}