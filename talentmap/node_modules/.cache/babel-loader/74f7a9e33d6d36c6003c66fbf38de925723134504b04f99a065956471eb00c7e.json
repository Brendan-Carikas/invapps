{"ast":null,"code":"var _jsxFileName = \"/Users/invotradesign/CascadeProjects/site-users-app/src/components/OrgChart.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { Box, Typography, Card, CardContent, useTheme, Avatar, Stack, Paper } from '@mui/material';\nimport Tree from 'react-d3-tree';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfileCard = ({\n  user\n}) => {\n  _s();\n  const theme = useTheme();\n  if (!user) return null;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 200,\n      m: 1,\n      transition: 'all 0.2s ease-in-out',\n      '&:hover': {\n        transform: 'translateY(-4px)',\n        boxShadow: theme.shadows[8]\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        textAlign: 'center',\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 1,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: user.imageUrl || `https://ui-avatars.com/api/?name=${encodeURIComponent(user.name)}&background=random`,\n          alt: user.name,\n          sx: {\n            width: 64,\n            height: 64,\n            mb: 1,\n            border: `2px solid ${theme.palette.primary.main}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            fontSize: '1rem',\n            fontWeight: 600,\n            lineHeight: 1.2\n          },\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.secondary\",\n          variant: \"body2\",\n          sx: {\n            fontSize: '0.875rem',\n            lineHeight: 1.2\n          },\n          children: user.jobRole\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProfileCard, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = UserProfileCard;\nconst buildTreeData = users => {\n  const buildNode = user => {\n    const directReports = users.filter(u => u.managerId === user.id);\n    return {\n      name: user.name,\n      attributes: {\n        id: user.id.toString()\n      },\n      children: directReports.map(report => buildNode(report))\n    };\n  };\n  const rootUser = users.find(user => !user.managerId);\n  return rootUser ? buildNode(rootUser) : {\n    name: 'No Data',\n    attributes: {\n      id: '0'\n    }\n  };\n};\nconst OrgChart = () => {\n  _s2();\n  const theme = useTheme();\n  const treeData = buildTreeData(mockUsers);\n  const renderNode = ({\n    nodeDatum\n  }) => {\n    var _nodeDatum$attributes;\n    const userId = (_nodeDatum$attributes = nodeDatum.attributes) === null || _nodeDatum$attributes === void 0 ? void 0 : _nodeDatum$attributes.id;\n    const user = userId ? mockUsers.find(u => u.id.toString() === userId) : undefined;\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      children: /*#__PURE__*/_jsxDEV(\"foreignObject\", {\n        width: 300,\n        height: 200,\n        x: -150,\n        y: -100,\n        style: {\n          overflow: 'visible'\n        },\n        children: /*#__PURE__*/_jsxDEV(UserProfileCard, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      pt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      sx: {\n        mb: 4\n      },\n      children: \"Organization Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        height: 'calc(100vh - 180px)',\n        p: 4,\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '100%',\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Tree, {\n          data: treeData,\n          renderCustomNodeElement: renderNode,\n          orientation: \"vertical\",\n          pathFunc: \"step\",\n          separation: {\n            siblings: 2,\n            nonSiblings: 2.5\n          },\n          translate: {\n            x: 500,\n            y: 50\n          },\n          zoom: 0.8,\n          nodeSize: {\n            x: 300,\n            y: 200\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n_s2(OrgChart, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c2 = OrgChart;\nconst mockUsers = [{\n  id: 1,\n  name: 'John Doe',\n  team: 'Executive',\n  location: 'New York',\n  jobRole: 'CEO',\n  imageUrl: '',\n  email: 'john.doe@company.com',\n  phone: '+1 (555) 000-0001',\n  linkedin: 'linkedin.com/in/johndoe',\n  directReports: [2, 3]\n}, {\n  id: 2,\n  name: 'Sarah Williams',\n  team: 'Engineering',\n  location: 'San Francisco',\n  jobRole: 'CTO',\n  imageUrl: '',\n  email: 'sarah.williams@company.com',\n  phone: '+1 (555) 000-0002',\n  linkedin: 'linkedin.com/in/sarahwilliams',\n  managerId: 1,\n  directReports: [4, 5]\n}, {\n  id: 3,\n  name: 'Michael Brown',\n  team: 'Operations',\n  location: 'Chicago',\n  jobRole: 'COO',\n  imageUrl: '',\n  email: 'michael.brown@company.com',\n  phone: '+1 (555) 000-0003',\n  linkedin: 'linkedin.com/in/michaelbrown',\n  managerId: 1,\n  directReports: [6, 7]\n}, {\n  id: 4,\n  name: 'Emily Davis',\n  team: 'Engineering',\n  location: 'Seattle',\n  jobRole: 'Engineering Manager',\n  imageUrl: '',\n  email: 'emily.davis@company.com',\n  phone: '+1 (555) 000-0004',\n  linkedin: 'linkedin.com/in/emilydavis',\n  managerId: 2\n}, {\n  id: 5,\n  name: 'David Wilson',\n  team: 'Engineering',\n  location: 'Boston',\n  jobRole: 'Tech Lead',\n  imageUrl: '',\n  email: 'david.wilson@company.com',\n  phone: '+1 (555) 000-0005',\n  linkedin: 'linkedin.com/in/davidwilson',\n  managerId: 2\n}, {\n  id: 6,\n  name: 'Lisa Anderson',\n  team: 'Operations',\n  location: 'Miami',\n  jobRole: 'Operations Manager',\n  imageUrl: '',\n  email: 'lisa.anderson@company.com',\n  phone: '+1 (555) 000-0006',\n  linkedin: 'linkedin.com/in/lisaanderson',\n  managerId: 3\n}, {\n  id: 7,\n  name: 'Robert Taylor',\n  team: 'Operations',\n  location: 'Houston',\n  jobRole: 'Project Manager',\n  imageUrl: '',\n  email: 'robert.taylor@company.com',\n  phone: '+1 (555) 000-0007',\n  linkedin: 'linkedin.com/in/roberttaylor',\n  managerId: 3\n}];\nexport default OrgChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"UserProfileCard\");\n$RefreshReg$(_c2, \"OrgChart\");","map":{"version":3,"names":["React","Box","Typography","Card","CardContent","useTheme","Avatar","Stack","Paper","Tree","jsxDEV","_jsxDEV","UserProfileCard","user","_s","theme","sx","width","m","transition","transform","boxShadow","shadows","children","textAlign","p","spacing","alignItems","src","imageUrl","encodeURIComponent","name","alt","height","mb","border","palette","primary","main","fileName","_jsxFileName","lineNumber","columnNumber","variant","fontSize","fontWeight","lineHeight","color","jobRole","_c","buildTreeData","users","buildNode","directReports","filter","u","managerId","id","attributes","toString","map","report","rootUser","find","OrgChart","_s2","treeData","mockUsers","renderNode","nodeDatum","_nodeDatum$attributes","userId","undefined","x","y","style","overflow","pt","component","data","renderCustomNodeElement","orientation","pathFunc","separation","siblings","nonSiblings","translate","zoom","nodeSize","_c2","team","location","email","phone","linkedin","$RefreshReg$"],"sources":["/Users/invotradesign/CascadeProjects/site-users-app/src/components/OrgChart.tsx"],"sourcesContent":["import React from 'react';\nimport {\n    Box,\n    Typography,\n    Card,\n    CardContent,\n    useTheme,\n    Avatar,\n    Link,\n    Stack,\n    Tooltip,\n    Paper\n} from '@mui/material';\nimport {\n    Email as EmailIcon,\n    Phone as PhoneIcon,\n    LinkedIn as LinkedInIcon,\n    LocationOn as LocationIcon,\n    Business as BusinessIcon,\n} from '@mui/icons-material';\nimport Tree, { RawNodeDatum } from 'react-d3-tree';\nimport { User } from '../types/User';\n\ninterface TreeData extends RawNodeDatum {\n    name: string;\n    attributes?: {\n        id?: string;\n    };\n    children?: TreeData[];\n}\n\ninterface NodeRendererProps {\n    nodeDatum: TreeData;\n}\n\nconst UserProfileCard: React.FC<{ user?: User }> = ({ user }) => {\n    const theme = useTheme();\n    \n    if (!user) return null;\n    \n    return (\n        <Card sx={{ \n            width: 200,\n            m: 1,\n            transition: 'all 0.2s ease-in-out',\n            '&:hover': {\n                transform: 'translateY(-4px)',\n                boxShadow: theme.shadows[8]\n            }\n        }}>\n            <CardContent sx={{ textAlign: 'center', p: 2 }}>\n                <Stack spacing={1} alignItems=\"center\">\n                    <Avatar\n                        src={user.imageUrl || `https://ui-avatars.com/api/?name=${encodeURIComponent(user.name)}&background=random`}\n                        alt={user.name}\n                        sx={{ \n                            width: 64, \n                            height: 64,\n                            mb: 1,\n                            border: `2px solid ${theme.palette.primary.main}`\n                        }}\n                    />\n                    <Typography variant=\"h6\" sx={{ \n                        fontSize: '1rem',\n                        fontWeight: 600,\n                        lineHeight: 1.2\n                    }}>\n                        {user.name}\n                    </Typography>\n                    <Typography \n                        color=\"text.secondary\" \n                        variant=\"body2\"\n                        sx={{ \n                            fontSize: '0.875rem',\n                            lineHeight: 1.2\n                        }}\n                    >\n                        {user.jobRole}\n                    </Typography>\n                </Stack>\n            </CardContent>\n        </Card>\n    );\n};\n\nconst buildTreeData = (users: User[]): TreeData => {\n    const buildNode = (user: User): TreeData => {\n        const directReports = users.filter(u => u.managerId === user.id);\n        return {\n            name: user.name,\n            attributes: {\n                id: user.id.toString()\n            },\n            children: directReports.map(report => buildNode(report))\n        };\n    };\n\n    const rootUser = users.find(user => !user.managerId);\n    return rootUser ? buildNode(rootUser) : { name: 'No Data', attributes: { id: '0' } };\n};\n\nconst OrgChart: React.FC = () => {\n    const theme = useTheme();\n    const treeData = buildTreeData(mockUsers);\n\n    const renderNode = ({ nodeDatum }: NodeRendererProps) => {\n        const userId = nodeDatum.attributes?.id;\n        const user = userId ? mockUsers.find(u => u.id.toString() === userId) : undefined;\n        \n        return (\n            <g>\n                <foreignObject\n                    width={300}\n                    height={200}\n                    x={-150}\n                    y={-100}\n                    style={{ overflow: 'visible' }}\n                >\n                    <UserProfileCard user={user} />\n                </foreignObject>\n            </g>\n        );\n    };\n\n    return (\n        <Box sx={{ width: '100%', pt: 2 }}>\n            <Typography variant=\"h4\" component=\"h1\" sx={{ mb: 4 }}>\n                Organization Chart\n            </Typography>\n            <Paper sx={{ \n                height: 'calc(100vh - 180px)',\n                p: 4,\n                overflow: 'hidden'\n            }}>\n                <Box sx={{ width: '100%', height: '100%' }}>\n                    <Tree\n                        data={treeData}\n                        renderCustomNodeElement={renderNode}\n                        orientation=\"vertical\"\n                        pathFunc=\"step\"\n                        separation={{ siblings: 2, nonSiblings: 2.5 }}\n                        translate={{ x: 500, y: 50 }}\n                        zoom={0.8}\n                        nodeSize={{ x: 300, y: 200 }}\n                    />\n                </Box>\n            </Paper>\n        </Box>\n    );\n};\n\nconst mockUsers: User[] = [\n    {\n        id: 1,\n        name: 'John Doe',\n        team: 'Executive',\n        location: 'New York',\n        jobRole: 'CEO',\n        imageUrl: '',\n        email: 'john.doe@company.com',\n        phone: '+1 (555) 000-0001',\n        linkedin: 'linkedin.com/in/johndoe',\n        directReports: [2, 3]\n    },\n    {\n        id: 2,\n        name: 'Sarah Williams',\n        team: 'Engineering',\n        location: 'San Francisco',\n        jobRole: 'CTO',\n        imageUrl: '',\n        email: 'sarah.williams@company.com',\n        phone: '+1 (555) 000-0002',\n        linkedin: 'linkedin.com/in/sarahwilliams',\n        managerId: 1,\n        directReports: [4, 5]\n    },\n    {\n        id: 3,\n        name: 'Michael Brown',\n        team: 'Operations',\n        location: 'Chicago',\n        jobRole: 'COO',\n        imageUrl: '',\n        email: 'michael.brown@company.com',\n        phone: '+1 (555) 000-0003',\n        linkedin: 'linkedin.com/in/michaelbrown',\n        managerId: 1,\n        directReports: [6, 7]\n    },\n    {\n        id: 4,\n        name: 'Emily Davis',\n        team: 'Engineering',\n        location: 'Seattle',\n        jobRole: 'Engineering Manager',\n        imageUrl: '',\n        email: 'emily.davis@company.com',\n        phone: '+1 (555) 000-0004',\n        linkedin: 'linkedin.com/in/emilydavis',\n        managerId: 2\n    },\n    {\n        id: 5,\n        name: 'David Wilson',\n        team: 'Engineering',\n        location: 'Boston',\n        jobRole: 'Tech Lead',\n        imageUrl: '',\n        email: 'david.wilson@company.com',\n        phone: '+1 (555) 000-0005',\n        linkedin: 'linkedin.com/in/davidwilson',\n        managerId: 2\n    },\n    {\n        id: 6,\n        name: 'Lisa Anderson',\n        team: 'Operations',\n        location: 'Miami',\n        jobRole: 'Operations Manager',\n        imageUrl: '',\n        email: 'lisa.anderson@company.com',\n        phone: '+1 (555) 000-0006',\n        linkedin: 'linkedin.com/in/lisaanderson',\n        managerId: 3\n    },\n    {\n        id: 7,\n        name: 'Robert Taylor',\n        team: 'Operations',\n        location: 'Houston',\n        jobRole: 'Project Manager',\n        imageUrl: '',\n        email: 'robert.taylor@company.com',\n        phone: '+1 (555) 000-0007',\n        linkedin: 'linkedin.com/in/roberttaylor',\n        managerId: 3\n    }\n];\n\nexport default OrgChart;"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,GAAG,EACHC,UAAU,EACVC,IAAI,EACJC,WAAW,EACXC,QAAQ,EACRC,MAAM,EAENC,KAAK,EAELC,KAAK,QACF,eAAe;AAQtB,OAAOC,IAAI,MAAwB,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAenD,MAAMC,eAA0C,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAMC,KAAK,GAAGV,QAAQ,CAAC,CAAC;EAExB,IAAI,CAACQ,IAAI,EAAE,OAAO,IAAI;EAEtB,oBACIF,OAAA,CAACR,IAAI;IAACa,EAAE,EAAE;MACNC,KAAK,EAAE,GAAG;MACVC,CAAC,EAAE,CAAC;MACJC,UAAU,EAAE,sBAAsB;MAClC,SAAS,EAAE;QACPC,SAAS,EAAE,kBAAkB;QAC7BC,SAAS,EAAEN,KAAK,CAACO,OAAO,CAAC,CAAC;MAC9B;IACJ,CAAE;IAAAC,QAAA,eACEZ,OAAA,CAACP,WAAW;MAACY,EAAE,EAAE;QAAEQ,SAAS,EAAE,QAAQ;QAAEC,CAAC,EAAE;MAAE,CAAE;MAAAF,QAAA,eAC3CZ,OAAA,CAACJ,KAAK;QAACmB,OAAO,EAAE,CAAE;QAACC,UAAU,EAAC,QAAQ;QAAAJ,QAAA,gBAClCZ,OAAA,CAACL,MAAM;UACHsB,GAAG,EAAEf,IAAI,CAACgB,QAAQ,IAAI,oCAAoCC,kBAAkB,CAACjB,IAAI,CAACkB,IAAI,CAAC,oBAAqB;UAC5GC,GAAG,EAAEnB,IAAI,CAACkB,IAAK;UACff,EAAE,EAAE;YACAC,KAAK,EAAE,EAAE;YACTgB,MAAM,EAAE,EAAE;YACVC,EAAE,EAAE,CAAC;YACLC,MAAM,EAAE,aAAapB,KAAK,CAACqB,OAAO,CAACC,OAAO,CAACC,IAAI;UACnD;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACF/B,OAAA,CAACT,UAAU;UAACyC,OAAO,EAAC,IAAI;UAAC3B,EAAE,EAAE;YACzB4B,QAAQ,EAAE,MAAM;YAChBC,UAAU,EAAE,GAAG;YACfC,UAAU,EAAE;UAChB,CAAE;UAAAvB,QAAA,EACGV,IAAI,CAACkB;QAAI;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACb/B,OAAA,CAACT,UAAU;UACP6C,KAAK,EAAC,gBAAgB;UACtBJ,OAAO,EAAC,OAAO;UACf3B,EAAE,EAAE;YACA4B,QAAQ,EAAE,UAAU;YACpBE,UAAU,EAAE;UAChB,CAAE;UAAAvB,QAAA,EAEDV,IAAI,CAACmC;QAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEf,CAAC;AAAC5B,EAAA,CAhDIF,eAA0C;EAAA,QAC9BP,QAAQ;AAAA;AAAA4C,EAAA,GADpBrC,eAA0C;AAkDhD,MAAMsC,aAAa,GAAIC,KAAa,IAAe;EAC/C,MAAMC,SAAS,GAAIvC,IAAU,IAAe;IACxC,MAAMwC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,KAAK3C,IAAI,CAAC4C,EAAE,CAAC;IAChE,OAAO;MACH1B,IAAI,EAAElB,IAAI,CAACkB,IAAI;MACf2B,UAAU,EAAE;QACRD,EAAE,EAAE5C,IAAI,CAAC4C,EAAE,CAACE,QAAQ,CAAC;MACzB,CAAC;MACDpC,QAAQ,EAAE8B,aAAa,CAACO,GAAG,CAACC,MAAM,IAAIT,SAAS,CAACS,MAAM,CAAC;IAC3D,CAAC;EACL,CAAC;EAED,MAAMC,QAAQ,GAAGX,KAAK,CAACY,IAAI,CAAClD,IAAI,IAAI,CAACA,IAAI,CAAC2C,SAAS,CAAC;EACpD,OAAOM,QAAQ,GAAGV,SAAS,CAACU,QAAQ,CAAC,GAAG;IAAE/B,IAAI,EAAE,SAAS;IAAE2B,UAAU,EAAE;MAAED,EAAE,EAAE;IAAI;EAAE,CAAC;AACxF,CAAC;AAED,MAAMO,QAAkB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC7B,MAAMlD,KAAK,GAAGV,QAAQ,CAAC,CAAC;EACxB,MAAM6D,QAAQ,GAAGhB,aAAa,CAACiB,SAAS,CAAC;EAEzC,MAAMC,UAAU,GAAGA,CAAC;IAAEC;EAA6B,CAAC,KAAK;IAAA,IAAAC,qBAAA;IACrD,MAAMC,MAAM,IAAAD,qBAAA,GAAGD,SAAS,CAACX,UAAU,cAAAY,qBAAA,uBAApBA,qBAAA,CAAsBb,EAAE;IACvC,MAAM5C,IAAI,GAAG0D,MAAM,GAAGJ,SAAS,CAACJ,IAAI,CAACR,CAAC,IAAIA,CAAC,CAACE,EAAE,CAACE,QAAQ,CAAC,CAAC,KAAKY,MAAM,CAAC,GAAGC,SAAS;IAEjF,oBACI7D,OAAA;MAAAY,QAAA,eACIZ,OAAA;QACIM,KAAK,EAAE,GAAI;QACXgB,MAAM,EAAE,GAAI;QACZwC,CAAC,EAAE,CAAC,GAAI;QACRC,CAAC,EAAE,CAAC,GAAI;QACRC,KAAK,EAAE;UAAEC,QAAQ,EAAE;QAAU,CAAE;QAAArD,QAAA,eAE/BZ,OAAA,CAACC,eAAe;UAACC,IAAI,EAAEA;QAAK;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEZ,CAAC;EAED,oBACI/B,OAAA,CAACV,GAAG;IAACe,EAAE,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAE4D,EAAE,EAAE;IAAE,CAAE;IAAAtD,QAAA,gBAC9BZ,OAAA,CAACT,UAAU;MAACyC,OAAO,EAAC,IAAI;MAACmC,SAAS,EAAC,IAAI;MAAC9D,EAAE,EAAE;QAAEkB,EAAE,EAAE;MAAE,CAAE;MAAAX,QAAA,EAAC;IAEvD;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACb/B,OAAA,CAACH,KAAK;MAACQ,EAAE,EAAE;QACPiB,MAAM,EAAE,qBAAqB;QAC7BR,CAAC,EAAE,CAAC;QACJmD,QAAQ,EAAE;MACd,CAAE;MAAArD,QAAA,eACEZ,OAAA,CAACV,GAAG;QAACe,EAAE,EAAE;UAAEC,KAAK,EAAE,MAAM;UAAEgB,MAAM,EAAE;QAAO,CAAE;QAAAV,QAAA,eACvCZ,OAAA,CAACF,IAAI;UACDsE,IAAI,EAAEb,QAAS;UACfc,uBAAuB,EAAEZ,UAAW;UACpCa,WAAW,EAAC,UAAU;UACtBC,QAAQ,EAAC,MAAM;UACfC,UAAU,EAAE;YAAEC,QAAQ,EAAE,CAAC;YAAEC,WAAW,EAAE;UAAI,CAAE;UAC9CC,SAAS,EAAE;YAAEb,CAAC,EAAE,GAAG;YAAEC,CAAC,EAAE;UAAG,CAAE;UAC7Ba,IAAI,EAAE,GAAI;UACVC,QAAQ,EAAE;YAAEf,CAAC,EAAE,GAAG;YAAEC,CAAC,EAAE;UAAI;QAAE;UAAAnC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAACuB,GAAA,CAhDID,QAAkB;EAAA,QACN3D,QAAQ;AAAA;AAAAoF,GAAA,GADpBzB,QAAkB;AAkDxB,MAAMG,SAAiB,GAAG,CACtB;EACIV,EAAE,EAAE,CAAC;EACL1B,IAAI,EAAE,UAAU;EAChB2D,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE,UAAU;EACpB3C,OAAO,EAAE,KAAK;EACdnB,QAAQ,EAAE,EAAE;EACZ+D,KAAK,EAAE,sBAAsB;EAC7BC,KAAK,EAAE,mBAAmB;EAC1BC,QAAQ,EAAE,yBAAyB;EACnCzC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC;AACxB,CAAC,EACD;EACII,EAAE,EAAE,CAAC;EACL1B,IAAI,EAAE,gBAAgB;EACtB2D,IAAI,EAAE,aAAa;EACnBC,QAAQ,EAAE,eAAe;EACzB3C,OAAO,EAAE,KAAK;EACdnB,QAAQ,EAAE,EAAE;EACZ+D,KAAK,EAAE,4BAA4B;EACnCC,KAAK,EAAE,mBAAmB;EAC1BC,QAAQ,EAAE,+BAA+B;EACzCtC,SAAS,EAAE,CAAC;EACZH,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC;AACxB,CAAC,EACD;EACII,EAAE,EAAE,CAAC;EACL1B,IAAI,EAAE,eAAe;EACrB2D,IAAI,EAAE,YAAY;EAClBC,QAAQ,EAAE,SAAS;EACnB3C,OAAO,EAAE,KAAK;EACdnB,QAAQ,EAAE,EAAE;EACZ+D,KAAK,EAAE,2BAA2B;EAClCC,KAAK,EAAE,mBAAmB;EAC1BC,QAAQ,EAAE,8BAA8B;EACxCtC,SAAS,EAAE,CAAC;EACZH,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC;AACxB,CAAC,EACD;EACII,EAAE,EAAE,CAAC;EACL1B,IAAI,EAAE,aAAa;EACnB2D,IAAI,EAAE,aAAa;EACnBC,QAAQ,EAAE,SAAS;EACnB3C,OAAO,EAAE,qBAAqB;EAC9BnB,QAAQ,EAAE,EAAE;EACZ+D,KAAK,EAAE,yBAAyB;EAChCC,KAAK,EAAE,mBAAmB;EAC1BC,QAAQ,EAAE,4BAA4B;EACtCtC,SAAS,EAAE;AACf,CAAC,EACD;EACIC,EAAE,EAAE,CAAC;EACL1B,IAAI,EAAE,cAAc;EACpB2D,IAAI,EAAE,aAAa;EACnBC,QAAQ,EAAE,QAAQ;EAClB3C,OAAO,EAAE,WAAW;EACpBnB,QAAQ,EAAE,EAAE;EACZ+D,KAAK,EAAE,0BAA0B;EACjCC,KAAK,EAAE,mBAAmB;EAC1BC,QAAQ,EAAE,6BAA6B;EACvCtC,SAAS,EAAE;AACf,CAAC,EACD;EACIC,EAAE,EAAE,CAAC;EACL1B,IAAI,EAAE,eAAe;EACrB2D,IAAI,EAAE,YAAY;EAClBC,QAAQ,EAAE,OAAO;EACjB3C,OAAO,EAAE,oBAAoB;EAC7BnB,QAAQ,EAAE,EAAE;EACZ+D,KAAK,EAAE,2BAA2B;EAClCC,KAAK,EAAE,mBAAmB;EAC1BC,QAAQ,EAAE,8BAA8B;EACxCtC,SAAS,EAAE;AACf,CAAC,EACD;EACIC,EAAE,EAAE,CAAC;EACL1B,IAAI,EAAE,eAAe;EACrB2D,IAAI,EAAE,YAAY;EAClBC,QAAQ,EAAE,SAAS;EACnB3C,OAAO,EAAE,iBAAiB;EAC1BnB,QAAQ,EAAE,EAAE;EACZ+D,KAAK,EAAE,2BAA2B;EAClCC,KAAK,EAAE,mBAAmB;EAC1BC,QAAQ,EAAE,8BAA8B;EACxCtC,SAAS,EAAE;AACf,CAAC,CACJ;AAED,eAAeQ,QAAQ;AAAC,IAAAf,EAAA,EAAAwC,GAAA;AAAAM,YAAA,CAAA9C,EAAA;AAAA8C,YAAA,CAAAN,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}