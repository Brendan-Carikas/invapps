{"ast":null,"code":"var _jsxFileName = \"/Users/invotradesign/CascadeProjects/site-users-app/src/components/UserList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Card, CardContent, CardMedia, Typography, TextField, Box, Select, MenuItem, FormControl, InputLabel, Pagination } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PEXELS_API_KEY = 'mIFzGvoWn6QuExlYm7tvsJDagoQLvzv9DJwiM5B2pzyaaCvPw46AFsQk';\n\n// Function to determine likely gender based on first name\nconst getGenderFromName = name => {\n  const firstName = name.split(' ')[0].toLowerCase();\n  // Common female name endings and specific names\n  const femaleIndicators = ['a', 'na', 'ia', 'lia', 'emma', 'sarah', 'jane', 'maria', 'sophie', 'jennifer', 'anna', 'julia', 'nina', 'isabella', 'lisa'];\n\n  // Check if the name matches any female indicators\n  if (femaleIndicators.some(indicator => firstName === indicator || firstName.endsWith(indicator))) {\n    return 'female';\n  }\n  return 'male'; // Default to male if no female indicators are found\n};\n\n// Mock data - replace with actual API call in production\nconst mockUsers = [{\n  id: 1,\n  name: 'John Doe',\n  team: 'Engineering',\n  location: 'New York',\n  jobRole: 'Software Engineer',\n  imageUrl: ''\n}, {\n  id: 2,\n  name: 'Jane Smith',\n  team: 'Design',\n  location: 'San Francisco',\n  jobRole: 'UI Designer',\n  imageUrl: ''\n}, {\n  id: 3,\n  name: 'Mike Johnson',\n  team: 'Marketing',\n  location: 'London',\n  jobRole: 'Marketing Manager',\n  imageUrl: ''\n}, {\n  id: 4,\n  name: 'Sarah Williams',\n  team: 'Engineering',\n  location: 'Berlin',\n  jobRole: 'Frontend Developer',\n  imageUrl: ''\n}, {\n  id: 5,\n  name: 'Tom Brown',\n  team: 'Product',\n  location: 'Toronto',\n  jobRole: 'Product Manager',\n  imageUrl: ''\n}, {\n  id: 6,\n  name: 'Emily Davis',\n  team: 'Engineering',\n  location: 'Sydney',\n  jobRole: 'Backend Developer',\n  imageUrl: ''\n}, {\n  id: 7,\n  name: 'David Wilson',\n  team: 'Design',\n  location: 'Paris',\n  jobRole: 'UX Designer',\n  imageUrl: ''\n}, {\n  id: 8,\n  name: 'Lisa Anderson',\n  team: 'Marketing',\n  location: 'Tokyo',\n  jobRole: 'Content Strategist',\n  imageUrl: ''\n}, {\n  id: 9,\n  name: 'James Taylor',\n  team: 'Product',\n  location: 'Singapore',\n  jobRole: 'Product Owner',\n  imageUrl: ''\n}, {\n  id: 10,\n  name: 'Maria Garcia',\n  team: 'Engineering',\n  location: 'Madrid',\n  jobRole: 'DevOps Engineer',\n  imageUrl: ''\n}, {\n  id: 11,\n  name: 'Robert Martinez',\n  team: 'Design',\n  location: 'Barcelona',\n  jobRole: 'Visual Designer',\n  imageUrl: ''\n}, {\n  id: 12,\n  name: 'Jennifer Lee',\n  team: 'Marketing',\n  location: 'Seoul',\n  jobRole: 'Digital Marketing Manager',\n  imageUrl: ''\n}, {\n  id: 13,\n  name: 'William Chen',\n  team: 'Engineering',\n  location: 'Shanghai',\n  jobRole: 'Mobile Developer',\n  imageUrl: ''\n}, {\n  id: 14,\n  name: 'Sophie Martin',\n  team: 'Product',\n  location: 'Amsterdam',\n  jobRole: 'Product Analyst',\n  imageUrl: ''\n}, {\n  id: 15,\n  name: 'Daniel Kim',\n  team: 'Engineering',\n  location: 'Vancouver',\n  jobRole: 'Security Engineer',\n  imageUrl: ''\n}, {\n  id: 16,\n  name: 'Emma Thompson',\n  team: 'Design',\n  location: 'Melbourne',\n  jobRole: 'Motion Designer',\n  imageUrl: ''\n}, {\n  id: 17,\n  name: 'Lucas Silva',\n  team: 'Marketing',\n  location: 'São Paulo',\n  jobRole: 'Brand Manager',\n  imageUrl: ''\n}, {\n  id: 18,\n  name: 'Anna Kowalski',\n  team: 'Engineering',\n  location: 'Warsaw',\n  jobRole: 'QA Engineer',\n  imageUrl: ''\n}, {\n  id: 19,\n  name: 'Mohammed Ahmed',\n  team: 'Product',\n  location: 'Dubai',\n  jobRole: 'Product Strategy Lead',\n  imageUrl: ''\n}, {\n  id: 20,\n  name: 'Julia Müller',\n  team: 'Design',\n  location: 'Munich',\n  jobRole: 'Interaction Designer',\n  imageUrl: ''\n}, {\n  id: 21,\n  name: 'Alex Petrov',\n  team: 'Engineering',\n  location: 'Moscow',\n  jobRole: 'Systems Architect',\n  imageUrl: ''\n}, {\n  id: 22,\n  name: 'Isabella Romano',\n  team: 'Marketing',\n  location: 'Rome',\n  jobRole: 'Social Media Manager',\n  imageUrl: ''\n}, {\n  id: 23,\n  name: 'Thomas Anderson',\n  team: 'Product',\n  location: 'Stockholm',\n  jobRole: 'Data Analyst',\n  imageUrl: ''\n}, {\n  id: 24,\n  name: 'Nina Patel',\n  team: 'Engineering',\n  location: 'Mumbai',\n  jobRole: 'Cloud Engineer',\n  imageUrl: ''\n}, {\n  id: 25,\n  name: 'Carlos Rodriguez',\n  team: 'Design',\n  location: 'Mexico City',\n  jobRole: 'Art Director',\n  imageUrl: ''\n}];\nconst ITEMS_PER_PAGE = 20;\nconst UserList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [teamFilter, setTeamFilter] = useState('');\n  const [locationFilter, setLocationFilter] = useState('');\n  const [roleFilter, setRoleFilter] = useState('');\n  const [page, setPage] = useState(1);\n  const teams = Array.from(new Set(mockUsers.map(user => user.team)));\n  const locations = Array.from(new Set(mockUsers.map(user => user.location)));\n  const roles = Array.from(new Set(mockUsers.map(user => user.jobRole)));\n  useEffect(() => {\n    const fetchUserImages = async () => {\n      const usersWithImages = await Promise.all(mockUsers.map(async user => {\n        try {\n          var _randomPhoto$src;\n          const gender = getGenderFromName(user.name);\n          const searchTerms = gender === 'female' ? ['businesswoman portrait professional', 'female executive headshot', 'professional woman portrait', 'female business profile'] : ['businessman portrait professional', 'male executive headshot', 'professional man portrait', 'male business profile'];\n          const randomTerm = searchTerms[Math.floor(Math.random() * searchTerms.length)];\n          const response = await axios.get(`https://api.pexels.com/v1/search?query=${encodeURIComponent(randomTerm)}&per_page=15&orientation=portrait`, {\n            headers: {\n              'Authorization': PEXELS_API_KEY\n            }\n          });\n          const photos = response.data.photos;\n          const randomPhoto = photos[Math.floor(Math.random() * photos.length)];\n          return {\n            ...user,\n            imageUrl: (randomPhoto === null || randomPhoto === void 0 ? void 0 : (_randomPhoto$src = randomPhoto.src) === null || _randomPhoto$src === void 0 ? void 0 : _randomPhoto$src.medium) || 'https://via.placeholder.com/200'\n          };\n        } catch (error) {\n          console.error('Error fetching image:', error);\n          return user;\n        }\n      }));\n      setUsers(usersWithImages);\n      setFilteredUsers(usersWithImages);\n    };\n    fetchUserImages();\n  }, []);\n  useEffect(() => {\n    let filtered = users;\n    if (searchTerm) {\n      filtered = filtered.filter(user => user.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n    if (teamFilter) {\n      filtered = filtered.filter(user => user.team === teamFilter);\n    }\n    if (locationFilter) {\n      filtered = filtered.filter(user => user.location === locationFilter);\n    }\n    if (roleFilter) {\n      filtered = filtered.filter(user => user.jobRole === roleFilter);\n    }\n    setFilteredUsers(filtered);\n    setPage(1); // Reset to first page when filters change\n  }, [searchTerm, teamFilter, locationFilter, roleFilter, users]);\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n  const paginatedUsers = filteredUsers.slice((page - 1) * ITEMS_PER_PAGE, page * ITEMS_PER_PAGE);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Search by name\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: teamFilter,\n              label: \"Team\",\n              onChange: e => setTeamFilter(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this), teams.map(team => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: team,\n                children: team\n              }, team, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: locationFilter,\n              label: \"Location\",\n              onChange: e => setLocationFilter(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this), locations.map(location => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: location,\n                children: location\n              }, location, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: roleFilter,\n              label: \"Role\",\n              onChange: e => setRoleFilter(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this), roles.map(role => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: role,\n                children: role\n              }, role, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: paginatedUsers.map(user => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            height: \"200\",\n            image: user.imageUrl || 'https://via.placeholder.com/200',\n            alt: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"div\",\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: user.team\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: user.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: user.jobRole\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), filteredUsers.length > ITEMS_PER_PAGE && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        count: Math.ceil(filteredUsers.length / ITEMS_PER_PAGE),\n        page: page,\n        onChange: handlePageChange,\n        color: \"primary\",\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n};\n_s(UserList, \"iPITi8AAFF/47ZbwTvIp/lOH4qM=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Card","CardContent","CardMedia","Typography","TextField","Box","Select","MenuItem","FormControl","InputLabel","Pagination","axios","jsxDEV","_jsxDEV","PEXELS_API_KEY","getGenderFromName","name","firstName","split","toLowerCase","femaleIndicators","some","indicator","endsWith","mockUsers","id","team","location","jobRole","imageUrl","ITEMS_PER_PAGE","UserList","_s","users","setUsers","filteredUsers","setFilteredUsers","searchTerm","setSearchTerm","teamFilter","setTeamFilter","locationFilter","setLocationFilter","roleFilter","setRoleFilter","page","setPage","teams","Array","from","Set","map","user","locations","roles","fetchUserImages","usersWithImages","Promise","all","_randomPhoto$src","gender","searchTerms","randomTerm","Math","floor","random","length","response","get","encodeURIComponent","headers","photos","data","randomPhoto","src","medium","error","console","filtered","filter","includes","handlePageChange","event","value","paginatedUsers","slice","sx","p","children","mb","container","spacing","item","xs","sm","fullWidth","label","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","role","md","lg","height","component","image","alt","variant","color","mt","display","justifyContent","count","ceil","size","_c","$RefreshReg$"],"sources":["/Users/invotradesign/CascadeProjects/site-users-app/src/components/UserList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Grid, Card, CardContent, CardMedia, Typography, TextField, Box, Select, MenuItem, FormControl, InputLabel, Pagination } from '@mui/material';\nimport { User } from '../types/User';\nimport axios from 'axios';\n\nconst PEXELS_API_KEY = 'mIFzGvoWn6QuExlYm7tvsJDagoQLvzv9DJwiM5B2pzyaaCvPw46AFsQk';\n\n// Function to determine likely gender based on first name\nconst getGenderFromName = (name: string): 'male' | 'female' => {\n    const firstName = name.split(' ')[0].toLowerCase();\n    // Common female name endings and specific names\n    const femaleIndicators = ['a', 'na', 'ia', 'lia', 'emma', 'sarah', 'jane', 'maria', 'sophie', 'jennifer', 'anna', 'julia', 'nina', 'isabella', 'lisa'];\n    \n    // Check if the name matches any female indicators\n    if (femaleIndicators.some(indicator => \n        firstName === indicator || firstName.endsWith(indicator)\n    )) {\n        return 'female';\n    }\n    \n    return 'male'; // Default to male if no female indicators are found\n};\n\n// Mock data - replace with actual API call in production\nconst mockUsers: User[] = [\n    { id: 1, name: 'John Doe', team: 'Engineering', location: 'New York', jobRole: 'Software Engineer', imageUrl: '' },\n    { id: 2, name: 'Jane Smith', team: 'Design', location: 'San Francisco', jobRole: 'UI Designer', imageUrl: '' },\n    { id: 3, name: 'Mike Johnson', team: 'Marketing', location: 'London', jobRole: 'Marketing Manager', imageUrl: '' },\n    { id: 4, name: 'Sarah Williams', team: 'Engineering', location: 'Berlin', jobRole: 'Frontend Developer', imageUrl: '' },\n    { id: 5, name: 'Tom Brown', team: 'Product', location: 'Toronto', jobRole: 'Product Manager', imageUrl: '' },\n    { id: 6, name: 'Emily Davis', team: 'Engineering', location: 'Sydney', jobRole: 'Backend Developer', imageUrl: '' },\n    { id: 7, name: 'David Wilson', team: 'Design', location: 'Paris', jobRole: 'UX Designer', imageUrl: '' },\n    { id: 8, name: 'Lisa Anderson', team: 'Marketing', location: 'Tokyo', jobRole: 'Content Strategist', imageUrl: '' },\n    { id: 9, name: 'James Taylor', team: 'Product', location: 'Singapore', jobRole: 'Product Owner', imageUrl: '' },\n    { id: 10, name: 'Maria Garcia', team: 'Engineering', location: 'Madrid', jobRole: 'DevOps Engineer', imageUrl: '' },\n    { id: 11, name: 'Robert Martinez', team: 'Design', location: 'Barcelona', jobRole: 'Visual Designer', imageUrl: '' },\n    { id: 12, name: 'Jennifer Lee', team: 'Marketing', location: 'Seoul', jobRole: 'Digital Marketing Manager', imageUrl: '' },\n    { id: 13, name: 'William Chen', team: 'Engineering', location: 'Shanghai', jobRole: 'Mobile Developer', imageUrl: '' },\n    { id: 14, name: 'Sophie Martin', team: 'Product', location: 'Amsterdam', jobRole: 'Product Analyst', imageUrl: '' },\n    { id: 15, name: 'Daniel Kim', team: 'Engineering', location: 'Vancouver', jobRole: 'Security Engineer', imageUrl: '' },\n    { id: 16, name: 'Emma Thompson', team: 'Design', location: 'Melbourne', jobRole: 'Motion Designer', imageUrl: '' },\n    { id: 17, name: 'Lucas Silva', team: 'Marketing', location: 'São Paulo', jobRole: 'Brand Manager', imageUrl: '' },\n    { id: 18, name: 'Anna Kowalski', team: 'Engineering', location: 'Warsaw', jobRole: 'QA Engineer', imageUrl: '' },\n    { id: 19, name: 'Mohammed Ahmed', team: 'Product', location: 'Dubai', jobRole: 'Product Strategy Lead', imageUrl: '' },\n    { id: 20, name: 'Julia Müller', team: 'Design', location: 'Munich', jobRole: 'Interaction Designer', imageUrl: '' },\n    { id: 21, name: 'Alex Petrov', team: 'Engineering', location: 'Moscow', jobRole: 'Systems Architect', imageUrl: '' },\n    { id: 22, name: 'Isabella Romano', team: 'Marketing', location: 'Rome', jobRole: 'Social Media Manager', imageUrl: '' },\n    { id: 23, name: 'Thomas Anderson', team: 'Product', location: 'Stockholm', jobRole: 'Data Analyst', imageUrl: '' },\n    { id: 24, name: 'Nina Patel', team: 'Engineering', location: 'Mumbai', jobRole: 'Cloud Engineer', imageUrl: '' },\n    { id: 25, name: 'Carlos Rodriguez', team: 'Design', location: 'Mexico City', jobRole: 'Art Director', imageUrl: '' }\n];\n\nconst ITEMS_PER_PAGE = 20;\n\nconst UserList: React.FC = () => {\n    const [users, setUsers] = useState<User[]>([]);\n    const [filteredUsers, setFilteredUsers] = useState<User[]>([]);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [teamFilter, setTeamFilter] = useState('');\n    const [locationFilter, setLocationFilter] = useState('');\n    const [roleFilter, setRoleFilter] = useState('');\n    const [page, setPage] = useState(1);\n\n    const teams = Array.from(new Set(mockUsers.map(user => user.team)));\n    const locations = Array.from(new Set(mockUsers.map(user => user.location)));\n    const roles = Array.from(new Set(mockUsers.map(user => user.jobRole)));\n\n    useEffect(() => {\n        const fetchUserImages = async () => {\n            const usersWithImages = await Promise.all(\n                mockUsers.map(async (user) => {\n                    try {\n                        const gender = getGenderFromName(user.name);\n                        const searchTerms = gender === 'female' \n                            ? [\n                                'businesswoman portrait professional',\n                                'female executive headshot',\n                                'professional woman portrait',\n                                'female business profile'\n                              ]\n                            : [\n                                'businessman portrait professional',\n                                'male executive headshot',\n                                'professional man portrait',\n                                'male business profile'\n                              ];\n                        \n                        const randomTerm = searchTerms[Math.floor(Math.random() * searchTerms.length)];\n                        \n                        const response = await axios.get(\n                            `https://api.pexels.com/v1/search?query=${encodeURIComponent(randomTerm)}&per_page=15&orientation=portrait`,\n                            {\n                                headers: {\n                                    'Authorization': PEXELS_API_KEY\n                                }\n                            }\n                        );\n\n                        const photos = response.data.photos;\n                        const randomPhoto = photos[Math.floor(Math.random() * photos.length)];\n                        \n                        return { \n                            ...user, \n                            imageUrl: randomPhoto?.src?.medium || 'https://via.placeholder.com/200'\n                        };\n                    } catch (error) {\n                        console.error('Error fetching image:', error);\n                        return user;\n                    }\n                })\n            );\n            setUsers(usersWithImages);\n            setFilteredUsers(usersWithImages);\n        };\n\n        fetchUserImages();\n    }, []);\n\n    useEffect(() => {\n        let filtered = users;\n\n        if (searchTerm) {\n            filtered = filtered.filter(user =>\n                user.name.toLowerCase().includes(searchTerm.toLowerCase())\n            );\n        }\n\n        if (teamFilter) {\n            filtered = filtered.filter(user => user.team === teamFilter);\n        }\n\n        if (locationFilter) {\n            filtered = filtered.filter(user => user.location === locationFilter);\n        }\n\n        if (roleFilter) {\n            filtered = filtered.filter(user => user.jobRole === roleFilter);\n        }\n\n        setFilteredUsers(filtered);\n        setPage(1); // Reset to first page when filters change\n    }, [searchTerm, teamFilter, locationFilter, roleFilter, users]);\n\n    const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\n        setPage(value);\n    };\n\n    const paginatedUsers = filteredUsers.slice(\n        (page - 1) * ITEMS_PER_PAGE,\n        page * ITEMS_PER_PAGE\n    );\n\n    return (\n        <Box sx={{ p: 3 }}>\n            <Box sx={{ mb: 4 }}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={3}>\n                        <TextField\n                            fullWidth\n                            label=\"Search by name\"\n                            value={searchTerm}\n                            onChange={(e) => setSearchTerm(e.target.value)}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={3}>\n                        <FormControl fullWidth>\n                            <InputLabel>Team</InputLabel>\n                            <Select\n                                value={teamFilter}\n                                label=\"Team\"\n                                onChange={(e) => setTeamFilter(e.target.value)}\n                            >\n                                <MenuItem value=\"\">All</MenuItem>\n                                {teams.map(team => (\n                                    <MenuItem key={team} value={team}>{team}</MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={3}>\n                        <FormControl fullWidth>\n                            <InputLabel>Location</InputLabel>\n                            <Select\n                                value={locationFilter}\n                                label=\"Location\"\n                                onChange={(e) => setLocationFilter(e.target.value)}\n                            >\n                                <MenuItem value=\"\">All</MenuItem>\n                                {locations.map(location => (\n                                    <MenuItem key={location} value={location}>{location}</MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={3}>\n                        <FormControl fullWidth>\n                            <InputLabel>Role</InputLabel>\n                            <Select\n                                value={roleFilter}\n                                label=\"Role\"\n                                onChange={(e) => setRoleFilter(e.target.value)}\n                            >\n                                <MenuItem value=\"\">All</MenuItem>\n                                {roles.map(role => (\n                                    <MenuItem key={role} value={role}>{role}</MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n            </Box>\n\n            <Grid container spacing={3}>\n                {paginatedUsers.map((user) => (\n                    <Grid item xs={12} sm={6} md={4} lg={3} key={user.id}>\n                        <Card sx={{ height: '100%' }}>\n                            <CardMedia\n                                component=\"img\"\n                                height=\"200\"\n                                image={user.imageUrl || 'https://via.placeholder.com/200'}\n                                alt={user.name}\n                            />\n                            <CardContent>\n                                <Typography variant=\"h6\" component=\"div\">\n                                    {user.name}\n                                </Typography>\n                                <Typography color=\"text.secondary\">\n                                    {user.team}\n                                </Typography>\n                                <Typography color=\"text.secondary\">\n                                    {user.location}\n                                </Typography>\n                                <Typography color=\"text.secondary\">\n                                    {user.jobRole}\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n            \n            {filteredUsers.length > ITEMS_PER_PAGE && (\n                <Box sx={{ mt: 4, display: 'flex', justifyContent: 'center' }}>\n                    <Pagination \n                        count={Math.ceil(filteredUsers.length / ITEMS_PER_PAGE)} \n                        page={page} \n                        onChange={handlePageChange}\n                        color=\"primary\"\n                        size=\"large\"\n                    />\n                </Box>\n            )}\n        </Box>\n    );\n};\n\nexport default UserList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}