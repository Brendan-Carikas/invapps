import { CSSUnit } from 'Tree';
export declare const TruncatedNodeText: import("styled-components").StyledComponent<import("framer-motion").ForwardRefComponent<HTMLSpanElement, import("framer-motion").HTMLMotionProps<"span">>, import("styled-components").DefaultTheme, {}, never>;
export declare const UniversalNodeContainer: import("styled-components").StyledComponent<import("framer-motion").ForwardRefComponent<HTMLDivElement, import("framer-motion").HTMLMotionProps<"div">>, import("styled-components").DefaultTheme, {
    $selected?: boolean | undefined;
    $indent?: number | undefined;
    $truncateLongText?: boolean | undefined;
}, never>;
export declare const UniversalNode: import("styled-components").StyledComponent<import("framer-motion").ForwardRefComponent<HTMLDivElement, import("framer-motion").HTMLMotionProps<"div">>, import("styled-components").DefaultTheme, {
    $selected?: boolean | undefined;
    $indent?: number | undefined;
    $truncateLongText?: boolean | undefined;
} & {
    $height?: CSSUnit | undefined;
    $border?: string | undefined;
    $borderColor?: string | undefined;
    $backgroundColor?: string | undefined;
    $selected?: boolean | null | undefined;
    $selectedBgColor?: string | undefined;
    $hoverColor?: string | null | undefined;
}, never>;
export declare const RowBlock: import("styled-components").StyledComponent<import("framer-motion").ForwardRefComponent<HTMLDivElement, import("framer-motion").HTMLMotionProps<"div">>, import("styled-components").DefaultTheme, {
    $truncateLongText?: boolean | undefined;
}, never>;
export declare const ColumnBlock: import("styled-components").StyledComponent<import("framer-motion").ForwardRefComponent<HTMLDivElement, import("framer-motion").HTMLMotionProps<"div">>, import("styled-components").DefaultTheme, {
    $truncateLongText?: boolean | undefined;
}, never>;
export declare const TextBlock: import("styled-components").StyledComponent<import("framer-motion").ForwardRefComponent<HTMLParagraphElement, import("framer-motion").HTMLMotionProps<"p">>, import("styled-components").DefaultTheme, {
    $color?: string | undefined;
    $selected?: boolean | undefined;
    $selectedColor?: string | null | undefined;
    $hoverColor?: string | null | undefined;
    $truncateLongText?: boolean | undefined;
}, never>;
export declare const TextFragment: import("styled-components").StyledComponent<import("framer-motion").ForwardRefComponent<HTMLParagraphElement, import("framer-motion").HTMLMotionProps<"p">>, import("styled-components").DefaultTheme, {
    $color?: string | undefined;
    $selected?: boolean | undefined;
    $selectedColor?: string | null | undefined;
    $hoverColor?: string | null | undefined;
    $truncateLongText?: boolean | undefined;
} & {
    as: string;
}, "as">;
export declare const IconBlock: import("styled-components").StyledComponent<import("framer-motion").ForwardRefComponent<HTMLSpanElement, import("framer-motion").HTMLMotionProps<"span">>, import("styled-components").DefaultTheme, {
    $size?: string | undefined;
    $color?: string | undefined;
}, never>;
