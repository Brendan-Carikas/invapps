{"ast":null,"code":"var _jsxFileName = \"/Users/invotradesign/CascadeProjects/site-users-app/src/components/OrgChart.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { Box, Typography, Card, CardContent, useTheme, Avatar, Stack, Paper } from '@mui/material';\nimport Tree from 'react-d3-tree';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfileCard = ({\n  user\n}) => {\n  _s();\n  const theme = useTheme();\n  if (!user) return null;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 200,\n      m: 1,\n      transition: 'all 0.2s ease-in-out',\n      '&:hover': {\n        transform: 'translateY(-4px)',\n        boxShadow: theme.shadows[8]\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        textAlign: 'center',\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 1,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: user.imageUrl || `https://ui-avatars.com/api/?name=${encodeURIComponent(user.name)}&background=random`,\n          alt: user.name,\n          sx: {\n            width: 64,\n            height: 64,\n            mb: 1,\n            border: `2px solid ${theme.palette.primary.main}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            fontSize: '1rem',\n            fontWeight: 600,\n            lineHeight: 1.2\n          },\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.secondary\",\n          variant: \"body2\",\n          sx: {\n            fontSize: '0.875rem',\n            lineHeight: 1.2\n          },\n          children: user.jobRole\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProfileCard, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = UserProfileCard;\nconst buildTreeData = users => {\n  const buildNode = user => {\n    const directReports = users.filter(u => u.managerId === user.id);\n    return {\n      name: user.name,\n      attributes: {\n        id: user.id.toString(),\n        imageUrl: user.imageUrl,\n        jobRole: user.jobRole\n      },\n      children: directReports.map(report => buildNode(report))\n    };\n  };\n  const rootUser = users.find(user => !user.managerId);\n  return rootUser ? buildNode(rootUser) : {\n    name: 'No Data',\n    attributes: {\n      id: '0'\n    }\n  };\n};\nconst OrgChart = () => {\n  _s2();\n  const theme = useTheme();\n\n  // Use the same mockUsers data as UserList component\n  const {\n    mockUsers\n  } = require('./UserList');\n  const treeData = buildTreeData(mockUsers);\n  const renderForeignObjectNode = ({\n    nodeDatum\n  }) => {\n    var _nodeDatum$attributes, _nodeDatum$attributes2, _nodeDatum$attributes3;\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      children: /*#__PURE__*/_jsxDEV(\"foreignObject\", {\n        x: -100,\n        y: -50,\n        width: 200,\n        height: 200,\n        children: /*#__PURE__*/_jsxDEV(UserProfileCard, {\n          user: {\n            id: parseInt(((_nodeDatum$attributes = nodeDatum.attributes) === null || _nodeDatum$attributes === void 0 ? void 0 : _nodeDatum$attributes.id) || '0'),\n            name: nodeDatum.name,\n            imageUrl: ((_nodeDatum$attributes2 = nodeDatum.attributes) === null || _nodeDatum$attributes2 === void 0 ? void 0 : _nodeDatum$attributes2.imageUrl) || '',\n            jobRole: ((_nodeDatum$attributes3 = nodeDatum.attributes) === null || _nodeDatum$attributes3 === void 0 ? void 0 : _nodeDatum$attributes3.jobRole) || '',\n            team: '',\n            location: '',\n            email: '',\n            phone: '',\n            linkedin: '',\n            managerId: undefined\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      height: '80vh',\n      p: 2,\n      m: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Tree, {\n        data: treeData,\n        renderCustomNodeElement: renderForeignObjectNode,\n        orientation: \"vertical\",\n        pathFunc: \"step\",\n        translate: {\n          x: window.innerWidth / 3,\n          y: 80\n        },\n        separation: {\n          siblings: 2,\n          nonSiblings: 2.5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n_s2(OrgChart, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c2 = OrgChart;\nexport default OrgChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"UserProfileCard\");\n$RefreshReg$(_c2, \"OrgChart\");","map":{"version":3,"names":["React","Box","Typography","Card","CardContent","useTheme","Avatar","Stack","Paper","Tree","jsxDEV","_jsxDEV","UserProfileCard","user","_s","theme","sx","width","m","transition","transform","boxShadow","shadows","children","textAlign","p","spacing","alignItems","src","imageUrl","encodeURIComponent","name","alt","height","mb","border","palette","primary","main","fileName","_jsxFileName","lineNumber","columnNumber","variant","fontSize","fontWeight","lineHeight","color","jobRole","_c","buildTreeData","users","buildNode","directReports","filter","u","managerId","id","attributes","toString","map","report","rootUser","find","OrgChart","_s2","mockUsers","require","treeData","renderForeignObjectNode","nodeDatum","_nodeDatum$attributes","_nodeDatum$attributes2","_nodeDatum$attributes3","x","y","parseInt","team","location","email","phone","linkedin","undefined","data","renderCustomNodeElement","orientation","pathFunc","translate","window","innerWidth","separation","siblings","nonSiblings","_c2","$RefreshReg$"],"sources":["/Users/invotradesign/CascadeProjects/site-users-app/src/components/OrgChart.tsx"],"sourcesContent":["import React from 'react';\nimport {\n    Box,\n    Typography,\n    Card,\n    CardContent,\n    useTheme,\n    Avatar,\n    Stack,\n    Paper\n} from '@mui/material';\nimport Tree, { RawNodeDatum } from 'react-d3-tree';\nimport { User } from '../types/User';\n\ninterface TreeData extends RawNodeDatum {\n    name: string;\n    attributes?: {\n        id?: string;\n        imageUrl?: string;\n        jobRole?: string;\n    };\n    children?: TreeData[];\n}\n\ninterface NodeRendererProps {\n    nodeDatum: TreeData;\n}\n\nconst UserProfileCard: React.FC<{ user?: User }> = ({ user }) => {\n    const theme = useTheme();\n    \n    if (!user) return null;\n    \n    return (\n        <Card sx={{ \n            width: 200,\n            m: 1,\n            transition: 'all 0.2s ease-in-out',\n            '&:hover': {\n                transform: 'translateY(-4px)',\n                boxShadow: theme.shadows[8]\n            }\n        }}>\n            <CardContent sx={{ textAlign: 'center', p: 2 }}>\n                <Stack spacing={1} alignItems=\"center\">\n                    <Avatar\n                        src={user.imageUrl || `https://ui-avatars.com/api/?name=${encodeURIComponent(user.name)}&background=random`}\n                        alt={user.name}\n                        sx={{ \n                            width: 64, \n                            height: 64,\n                            mb: 1,\n                            border: `2px solid ${theme.palette.primary.main}`\n                        }}\n                    />\n                    <Typography variant=\"h6\" sx={{ \n                        fontSize: '1rem',\n                        fontWeight: 600,\n                        lineHeight: 1.2\n                    }}>\n                        {user.name}\n                    </Typography>\n                    <Typography \n                        color=\"text.secondary\" \n                        variant=\"body2\"\n                        sx={{ \n                            fontSize: '0.875rem',\n                            lineHeight: 1.2\n                        }}\n                    >\n                        {user.jobRole}\n                    </Typography>\n                </Stack>\n            </CardContent>\n        </Card>\n    );\n};\n\nconst buildTreeData = (users: User[]): TreeData => {\n    const buildNode = (user: User): TreeData => {\n        const directReports = users.filter(u => u.managerId === user.id);\n        return {\n            name: user.name,\n            attributes: {\n                id: user.id.toString(),\n                imageUrl: user.imageUrl,\n                jobRole: user.jobRole\n            },\n            children: directReports.map(report => buildNode(report))\n        };\n    };\n\n    const rootUser = users.find(user => !user.managerId);\n    return rootUser ? buildNode(rootUser) : { name: 'No Data', attributes: { id: '0' } };\n};\n\nconst OrgChart: React.FC = () => {\n    const theme = useTheme();\n    \n    // Use the same mockUsers data as UserList component\n    const { mockUsers } = require('./UserList');\n\n    const treeData = buildTreeData(mockUsers);\n\n    const renderForeignObjectNode = ({ nodeDatum }: NodeRendererProps) => (\n        <g>\n            <foreignObject x={-100} y={-50} width={200} height={200}>\n                <UserProfileCard user={{\n                    id: parseInt(nodeDatum.attributes?.id || '0'),\n                    name: nodeDatum.name,\n                    imageUrl: nodeDatum.attributes?.imageUrl || '',\n                    jobRole: nodeDatum.attributes?.jobRole || '',\n                    team: '',\n                    location: '',\n                    email: '',\n                    phone: '',\n                    linkedin: '',\n                    managerId: undefined\n                }} />\n            </foreignObject>\n        </g>\n    );\n\n    return (\n        <Paper sx={{ height: '80vh', p: 2, m: 2 }}>\n            <Box sx={{ width: '100%', height: '100%' }}>\n                <Tree\n                    data={treeData}\n                    renderCustomNodeElement={renderForeignObjectNode}\n                    orientation=\"vertical\"\n                    pathFunc=\"step\"\n                    translate={{ x: window.innerWidth / 3, y: 80 }}\n                    separation={{ siblings: 2, nonSiblings: 2.5 }}\n                />\n            </Box>\n        </Paper>\n    );\n};\n\nexport default OrgChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}