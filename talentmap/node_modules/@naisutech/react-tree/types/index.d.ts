import * as React from 'react';
export { useReactTreeApi } from './hooks/useReactTreeApi';
import { TreeNodeId, TreeNodeList, ThemeSettings, TreeRenderFn } from './Tree';
import { ReactTreeApi } from './Tree/Context';
export { TreeNodeId, TreeNode, TreeNodeList, TreeRenderFn, ReactTreeTheme, ThemeSettings } from './Tree';
export { ReactTreeApi, TReactTreeContext } from './Tree/Context';
/**
 * @public
 */
export declare interface ReactTreeProps {
    nodes: TreeNodeList;
    defaultOpenNodes?: TreeNodeId[];
    defaultSelectedNodes?: TreeNodeId[];
    messages?: {
        noData?: React.ReactNode;
        loading?: React.ReactNode;
        emptyItems?: React.ReactNode;
    };
    loading?: boolean;
    theme?: string;
    themes?: ThemeSettings;
    enableItemAnimations?: boolean;
    enableIndicatorAnimations?: boolean;
    showEmptyItems?: boolean;
    noIcons?: boolean;
    truncateLongText?: boolean;
    multiSelect?: boolean;
    containerStyles?: React.CSSProperties;
    RenderNode?: TreeRenderFn;
    RenderIcon?: TreeRenderFn;
    selectedNodes?: TreeNodeId[];
    openNodes?: TreeNodeId[];
    onToggleSelectedNodes?: (nodes: TreeNodeId[]) => void;
    onToggleOpenNodes?: (nodes: TreeNodeId[]) => void;
}
export declare const ReactTree: React.ForwardRefExoticComponent<ReactTreeProps & React.RefAttributes<ReactTreeApi>>;
